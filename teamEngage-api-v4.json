{
    "openapi": "3.0.1",
    "info": {
        "title": "Team Engage Spend",
        "version": "v4"
    },
    "servers": [
        {
            "url": "https://engage.spendmanagement.com/engage/v4"
        }
    ],
    "paths": {
        "/api/Attachments/Upload/Request/{DocumentID}": {
            "post": {
                "tags": [
                    "Attachments"
                ],
                "summary": "Attachments_Post",
                "operationId": "Attachments_Post",
                "parameters": [
                    {
                        "name": "DocumentID",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiAttachmentsUploadRequestDocumentIDPost200ApplicationJsonResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiAttachmentsUploadRequestDocumentIDPost200TextJsonResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiAttachmentsUploadRequestDocumentIDPost200ApplicationXmlResponse"
                                },
                                "example": "<ApiAttachmentsUploadRequestDocumentIDPost200ApplicationXmlResponse />"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiAttachmentsUploadRequestDocumentIDPost200TextXmlResponse"
                                },
                                "example": "<ApiAttachmentsUploadRequestDocumentIDPost200TextXmlResponse />"
                            }
                        }
                    }
                }
            }
        },
        "/api/Attachments/Upload/RequestItem/{DocumentID}": {
            "post": {
                "tags": [
                    "Attachments"
                ],
                "summary": "Attachments_PostItem",
                "operationId": "Attachments_PostItem",
                "parameters": [
                    {
                        "name": "DocumentID",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiAttachmentsUploadRequestItemDocumentIDPost200ApplicationJsonResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiAttachmentsUploadRequestItemDocumentIDPost200TextJsonResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiAttachmentsUploadRequestItemDocumentIDPost200ApplicationXmlResponse"
                                },
                                "example": "<ApiAttachmentsUploadRequestItemDocumentIDPost200ApplicationXmlResponse />"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiAttachmentsUploadRequestItemDocumentIDPost200TextXmlResponse"
                                },
                                "example": "<ApiAttachmentsUploadRequestItemDocumentIDPost200TextXmlResponse />"
                            }
                        }
                    }
                }
            }
        },
        "/api/Attachments/Download/{FileID}": {
            "get": {
                "tags": [
                    "Attachments"
                ],
                "summary": "Attachments_Get",
                "operationId": "Attachments_Get",
                "parameters": [
                    {
                        "name": "FileID",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActionResult"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActionResult"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActionResult"
                                },
                                "example": "<ActionResult />"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActionResult"
                                },
                                "example": "<ActionResult />"
                            }
                        }
                    }
                }
            }
        },
        "/api/Attachments/Download2/{FileID}": {
            "get": {
                "tags": [
                    "Attachments"
                ],
                "summary": "Attachments_Get2",
                "operationId": "Attachments_Get2",
                "parameters": [
                    {
                        "name": "FileID",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiAttachmentsDownload2FileIDGet200ApplicationJsonResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiAttachmentsDownload2FileIDGet200TextJsonResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiAttachmentsDownload2FileIDGet200ApplicationXmlResponse"
                                },
                                "example": "<ApiAttachmentsDownload2FileIDGet200ApplicationXmlResponse />"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiAttachmentsDownload2FileIDGet200TextXmlResponse"
                                },
                                "example": "<ApiAttachmentsDownload2FileIDGet200TextXmlResponse />"
                            }
                        }
                    }
                }
            }
        },
        "/api/Attachments/Delete/{FileID}/Request/{DocumentID}": {
            "delete": {
                "tags": [
                    "Attachments"
                ],
                "summary": "Attachments_Delete",
                "operationId": "Attachments_Delete",
                "parameters": [
                    {
                        "name": "FileID",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "DocumentID",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiAttachmentsDeleteFileIDRequestDocumentIDDelete200ApplicationJsonResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiAttachmentsDeleteFileIDRequestDocumentIDDelete200TextJsonResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiAttachmentsDeleteFileIDRequestDocumentIDDelete200ApplicationXmlResponse"
                                },
                                "example": "<ApiAttachmentsDeleteFileIDRequestDocumentIDDelete200ApplicationXmlResponse />"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiAttachmentsDeleteFileIDRequestDocumentIDDelete200TextXmlResponse"
                                },
                                "example": "<ApiAttachmentsDeleteFileIDRequestDocumentIDDelete200TextXmlResponse />"
                            }
                        }
                    }
                }
            }
        },
        "/api/Attachments/Delete/{FileID}/RequestItem/{DocumentID}": {
            "delete": {
                "tags": [
                    "Attachments"
                ],
                "summary": "Attachments_DeleteItem",
                "operationId": "Attachments_DeleteItem",
                "parameters": [
                    {
                        "name": "FileID",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "DocumentID",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiAttachmentsDeleteFileIDRequestItemDocumentIDDelete200ApplicationJsonRespo"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiAttachmentsDeleteFileIDRequestItemDocumentIDDelete200TextJsonResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiAttachmentsDeleteFileIDRequestItemDocumentIDDelete200ApplicationXmlRespon"
                                },
                                "example": "<ApiAttachmentsDeleteFileIDRequestItemDocumentIDDelete200ApplicationXmlRespon />"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiAttachmentsDeleteFileIDRequestItemDocumentIDDelete200TextXmlResponse"
                                },
                                "example": "<ApiAttachmentsDeleteFileIDRequestItemDocumentIDDelete200TextXmlResponse />"
                            }
                        }
                    }
                }
            }
        },
        "/api/Attachments/Upload/Invoice/{DocumentID}": {
            "post": {
                "tags": [
                    "Attachments"
                ],
                "summary": "Attachments_PostInvoice",
                "operationId": "Attachments_PostInvoice",
                "parameters": [
                    {
                        "name": "DocumentID",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiAttachmentsUploadInvoiceDocumentIDPost200ApplicationJsonResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiAttachmentsUploadInvoiceDocumentIDPost200TextJsonResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiAttachmentsUploadInvoiceDocumentIDPost200ApplicationXmlResponse"
                                },
                                "example": "<ApiAttachmentsUploadInvoiceDocumentIDPost200ApplicationXmlResponse />"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiAttachmentsUploadInvoiceDocumentIDPost200TextXmlResponse"
                                },
                                "example": "<ApiAttachmentsUploadInvoiceDocumentIDPost200TextXmlResponse />"
                            }
                        }
                    }
                }
            }
        },
        "/api/Attachments/Delete/{FileID}/Invoice/{DocumentID}": {
            "delete": {
                "tags": [
                    "Attachments"
                ],
                "summary": "Attachments_DeleteInvoice",
                "operationId": "Attachments_DeleteInvoice",
                "parameters": [
                    {
                        "name": "FileID",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "DocumentID",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiAttachmentsDeleteFileIDInvoiceDocumentIDDelete200ApplicationJsonResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiAttachmentsDeleteFileIDInvoiceDocumentIDDelete200TextJsonResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiAttachmentsDeleteFileIDInvoiceDocumentIDDelete200ApplicationXmlResponse"
                                },
                                "example": "<ApiAttachmentsDeleteFileIDInvoiceDocumentIDDelete200ApplicationXmlResponse />"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiAttachmentsDeleteFileIDInvoiceDocumentIDDelete200TextXmlResponse"
                                },
                                "example": "<ApiAttachmentsDeleteFileIDInvoiceDocumentIDDelete200TextXmlResponse />"
                            }
                        }
                    }
                }
            }
        },
        "/api/Attachments/Upload/InvoiceItem/{DocumentID}": {
            "post": {
                "tags": [
                    "Attachments"
                ],
                "summary": "Attachments_PostInvoiceItem",
                "operationId": "Attachments_PostInvoiceItem",
                "parameters": [
                    {
                        "name": "DocumentID",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiAttachmentsUploadInvoiceItemDocumentIDPost200ApplicationJsonResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiAttachmentsUploadInvoiceItemDocumentIDPost200TextJsonResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiAttachmentsUploadInvoiceItemDocumentIDPost200ApplicationXmlResponse"
                                },
                                "example": "<ApiAttachmentsUploadInvoiceItemDocumentIDPost200ApplicationXmlResponse />"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiAttachmentsUploadInvoiceItemDocumentIDPost200TextXmlResponse"
                                },
                                "example": "<ApiAttachmentsUploadInvoiceItemDocumentIDPost200TextXmlResponse />"
                            }
                        }
                    }
                }
            }
        },
        "/api/Attachments/Delete/{FileID}/InvoiceItem/{DocumentID}": {
            "delete": {
                "tags": [
                    "Attachments"
                ],
                "summary": "Attachments_DeleteInvoiceItem",
                "operationId": "Attachments_DeleteInvoiceItem",
                "parameters": [
                    {
                        "name": "FileID",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "DocumentID",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiAttachmentsDeleteFileIDInvoiceItemDocumentIDDelete200ApplicationJsonRespo"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiAttachmentsDeleteFileIDInvoiceItemDocumentIDDelete200TextJsonResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiAttachmentsDeleteFileIDInvoiceItemDocumentIDDelete200ApplicationXmlRespon"
                                },
                                "example": "<ApiAttachmentsDeleteFileIDInvoiceItemDocumentIDDelete200ApplicationXmlRespon />"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiAttachmentsDeleteFileIDInvoiceItemDocumentIDDelete200TextXmlResponse"
                                },
                                "example": "<ApiAttachmentsDeleteFileIDInvoiceItemDocumentIDDelete200TextXmlResponse />"
                            }
                        }
                    }
                }
            }
        },
        "/api/info/TimeZones": {
            "get": {
                "tags": [
                    "Info"
                ],
                "summary": "Time Zones",
                "description": "Returns a set of Time Zones used in the Fraxion application.",
                "operationId": "Info_TimeZones",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TimeZones"
                                },
                                "example": {
                                    "TimeZoneID": "string",
                                    "DisplayName": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TimeZones"
                                },
                                "example": {
                                    "TimeZoneID": "string",
                                    "DisplayName": "string"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/TimeZones"
                                },
                                "example": "<TimeZones> <TimeZoneID>string</TimeZoneID> <DisplayName>string</DisplayName> </TimeZones>"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/TimeZones"
                                },
                                "example": "<TimeZones> <TimeZoneID>string</TimeZoneID> <DisplayName>string</DisplayName> </TimeZones>"
                            }
                        }
                    }
                }
            }
        },
        "/api/Notifications/Nofity/{userMail}/{subject}/{message}": {
            "post": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Notifications_Nofity",
                "operationId": "Notifications_Nofity",
                "parameters": [
                    {
                        "name": "userMail",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subject",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "message",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fxTenantID",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "direct",
                        "in": "query",
                        "description": "Format - int32.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiNotificationsNofityUserMailSubjectMessagePost200ApplicationJsonResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiNotificationsNofityUserMailSubjectMessagePost200TextJsonResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiNotificationsNofityUserMailSubjectMessagePost200ApplicationXmlResponse"
                                },
                                "example": "<ApiNotificationsNofityUserMailSubjectMessagePost200ApplicationXmlResponse />"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiNotificationsNofityUserMailSubjectMessagePost200TextXmlResponse"
                                },
                                "example": "<ApiNotificationsNofityUserMailSubjectMessagePost200TextXmlResponse />"
                            }
                        }
                    }
                }
            }
        },
        "/api/Resources": {
            "get": {
                "tags": [
                    "Resources"
                ],
                "summary": "Language Resources",
                "description": "Returns a set of resource strings based on the culturecode provided and subset requested.\r\n            \r\nsubset: the set of resouces required. each subsequent subset delimited by a '.'<br />\r\nexamples: History<br />\r\n          Views.Shared<br />\r\n          Views.Home<br />\r\n          Views<br />\r\n          Models<br />\r\n          Models.Invoice<br />\r\n             \r\ncultureCode: en-US, en-GB, en-ZA, en-CA, en-AU, af-ZA, de-DE or xh-ZA etc.",
                "operationId": "Resources_LanguageResources",
                "parameters": [
                    {
                        "name": "subset",
                        "in": "query",
                        "description": "If not provided, the default fetches the full set",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cultureCode",
                        "in": "query",
                        "description": "If not provided, the default value is en-US",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResourcesGet200ApplicationJsonResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResourcesGet200TextJsonResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResourcesGet200ApplicationXmlResponse"
                                },
                                "example": "<ApiResourcesGet200ApplicationXmlResponse />"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResourcesGet200TextXmlResponse"
                                },
                                "example": "<ApiResourcesGet200TextXmlResponse />"
                            }
                        }
                    }
                }
            }
        },
        "/api/start": {
            "get": {
                "tags": [
                    "Start"
                ],
                "summary": "Home Page Links",
                "description": "Returns a set of links for the home screen for the user.",
                "operationId": "Start_StartLinks",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NavigationLink"
                                },
                                "example": {
                                    "LinkID": "string",
                                    "LinkType": "string",
                                    "Enabled": true,
                                    "Link": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NavigationLink"
                                },
                                "example": {
                                    "LinkID": "string",
                                    "LinkType": "string",
                                    "Enabled": true,
                                    "Link": "string"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/NavigationLink"
                                },
                                "example": "<NavigationLink> <LinkID>string</LinkID> <LinkType>string</LinkType> <Enabled>true</Enabled> <Link>string</Link> </NavigationLink>"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/NavigationLink"
                                },
                                "example": "<NavigationLink> <LinkID>string</LinkID> <LinkType>string</LinkType> <Enabled>true</Enabled> <Link>string</Link> </NavigationLink>"
                            }
                        }
                    }
                }
            }
        },
        "/api/Alerts": {
            "get": {
                "tags": [
                    "Alerts"
                ],
                "summary": "Alert collection",
                "description": "Returns the entity set of Alerts needed to completed by the current user",
                "operationId": "Alerts_Get",
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[viewAlert]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "AlertID": 0,
                                            "AlertTypeID": 0,
                                            "AlertPolicyID": 0,
                                            "Description": "string",
                                            "RequestID": 0,
                                            "InvoiceID": 0,
                                            "ProformaInvoiceID": 0,
                                            "POID": 0,
                                            "SupplierID": 0,
                                            "DocumentDescription": "string",
                                            "RequestTypeID": 0,
                                            "CreationDate": "string",
                                            "Info": "string",
                                            "IsActive": true,
                                            "IsStatus": true,
                                            "RecipientID": 0,
                                            "AlertRecipientID": 0
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Alerts/AlertType": {
            "get": {
                "tags": [
                    "Alerts"
                ],
                "summary": "Alert Types collection",
                "description": "Returns the entity set of Alerts Types",
                "operationId": "Alerts_AlertType",
                "parameters": [
                    {
                        "name": "culturecode",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[AlertType]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "AlertTypeID": 0,
                                            "ResourceName": "string",
                                            "Description": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Approvals": {
            "get": {
                "tags": [
                    "Approvals"
                ],
                "summary": "Approvals collection",
                "description": "Returns the entity set of Approvals for the Tenant",
                "operationId": "Approvals_Get",
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "CompanyID",
                        "in": "query",
                        "description": "Format - int64.",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "RequestTypeID",
                        "in": "query",
                        "description": "Format - int64.",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[Approval]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "ApprovalID": 0,
                                            "TenantID": 0,
                                            "Name": "string",
                                            "IsActive": true,
                                            "IsRequest": true,
                                            "IsInvoice": true,
                                            "IsSupplier": true
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Approvals({ApprovalID})": {
            "get": {
                "tags": [
                    "Approvals"
                ],
                "summary": "Approvals entity",
                "description": "Returns a single Approval entity",
                "operationId": "Approvals_GetByApprovalid",
                "parameters": [
                    {
                        "name": "ApprovalID",
                        "in": "path",
                        "description": "Format - int64. key: ApprovalID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[Approval]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "ApprovalID": 0,
                                            "TenantID": 0,
                                            "Name": "string",
                                            "IsActive": true,
                                            "IsRequest": true,
                                            "IsInvoice": true,
                                            "IsSupplier": true
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Approvals/CompanyApprovals": {
            "get": {
                "tags": [
                    "Approvals"
                ],
                "summary": "Location entity",
                "description": "Returns a list Approval entities by CompanyID",
                "operationId": "Approvals_CompanyApprovals",
                "parameters": [
                    {
                        "name": "CompanyID",
                        "in": "query",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[Approval]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "ApprovalID": 0,
                                            "TenantID": 0,
                                            "Name": "string",
                                            "IsActive": true,
                                            "IsRequest": true,
                                            "IsInvoice": true,
                                            "IsSupplier": true
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Companies": {
            "get": {
                "tags": [
                    "Companies"
                ],
                "summary": "Companies collection",
                "description": "Returns the entity set of companies",
                "operationId": "Companies_Get",
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[Company]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "CompanyID": 0,
                                            "TenantID": 0,
                                            "Code": "string",
                                            "Name": "string",
                                            "RegistrationNumber": "string",
                                            "TaxRegistrationNumber": "string",
                                            "POReferenceMask": "string",
                                            "IsActive": true,
                                            "CurrencyID": 0,
                                            "Terms": "string",
                                            "POHasAllocation": true,
                                            "POHasDistributionList": true,
                                            "IsInvoiceLink": 0,
                                            "TaxRateID": 0,
                                            "PORevisionMask": "string",
                                            "POTemplateID": 0
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Companies({CompanyID})": {
            "get": {
                "tags": [
                    "Companies"
                ],
                "summary": "Companies entity",
                "description": "Returns a single company entity",
                "operationId": "Companies_GetByCompanyid",
                "parameters": [
                    {
                        "name": "CompanyID",
                        "in": "path",
                        "description": "Format - int64. key: CompanyID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[Company]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "CompanyID": 0,
                                            "TenantID": 0,
                                            "Code": "string",
                                            "Name": "string",
                                            "RegistrationNumber": "string",
                                            "TaxRegistrationNumber": "string",
                                            "POReferenceMask": "string",
                                            "IsActive": true,
                                            "CurrencyID": 0,
                                            "Terms": "string",
                                            "POHasAllocation": true,
                                            "POHasDistributionList": true,
                                            "IsInvoiceLink": 0,
                                            "TaxRateID": 0,
                                            "PORevisionMask": "string",
                                            "POTemplateID": 0
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Companies/Metadata": {
            "get": {
                "tags": [
                    "Companies"
                ],
                "summary": "Returns the set of field labels and help texts",
                "description": "cultureCode: en-US, en-GB, en-ZA, en-CA, en-AU, af-ZA, de-DE or xh-ZA etc.",
                "operationId": "Companies_GetMetadata",
                "parameters": [
                    {
                        "name": "cultureCode",
                        "in": "query",
                        "description": "If not provided, the default value is en-US",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FieldMetadataType"
                                },
                                "example": {
                                    "FieldID": "string",
                                    "Label": "string",
                                    "HelpText": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Currencies": {
            "get": {
                "tags": [
                    "Currencies"
                ],
                "summary": "Currencies collection",
                "description": "Returns the entity set of Currencies",
                "operationId": "Currencies_Get",
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[Currency]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "CurrencyID": 0,
                                            "TenantID": 0,
                                            "Code": "string",
                                            "Name": "string",
                                            "IsActive": true
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Currencies"
                ],
                "summary": "Currency create",
                "description": "Creates the given Currency entity",
                "operationId": "Currencies_Post",
                "requestBody": {
                    "description": "The entity to post",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Currency"
                            },
                            "example": {
                                "CurrencyID": 0,
                                "TenantID": 0,
                                "Code": "string",
                                "Name": "string",
                                "IsActive": true
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[Currency]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "CurrencyID": 0,
                                            "TenantID": 0,
                                            "Code": "string",
                                            "Name": "string",
                                            "IsActive": true
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Currencies({CurrencyID})": {
            "get": {
                "tags": [
                    "Currencies"
                ],
                "summary": "Currencies entity",
                "description": "Returns a single currency entity",
                "operationId": "Currencies_GetByCurrencyid",
                "parameters": [
                    {
                        "name": "CurrencyID",
                        "in": "path",
                        "description": "Format - int64. key: CurrencyID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[Currency]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "CurrencyID": 0,
                                            "TenantID": 0,
                                            "Code": "string",
                                            "Name": "string",
                                            "IsActive": true
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Currencies"
                ],
                "summary": "Currency Delete",
                "description": "Deletes the Currency",
                "operationId": "Currencies_DeleteByCurrencyid",
                "parameters": [
                    {
                        "name": "CurrencyID",
                        "in": "path",
                        "description": "Format - int64. key: CurrencyID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "If-Match header",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "put": {
                "tags": [
                    "Currencies"
                ],
                "summary": "Currency update",
                "description": "Updates the given Currency entity",
                "operationId": "Currencies_PutByCurrencyid",
                "parameters": [
                    {
                        "name": "CurrencyID",
                        "in": "path",
                        "description": "Format - int64. key: CurrencyID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The entity to put",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Currency"
                            },
                            "example": {
                                "CurrencyID": 0,
                                "TenantID": 0,
                                "Code": "string",
                                "Name": "string",
                                "IsActive": true
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[Currency]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "CurrencyID": 0,
                                            "TenantID": 0,
                                            "Code": "string",
                                            "Name": "string",
                                            "IsActive": true
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Currencies/Metadata": {
            "get": {
                "tags": [
                    "Currencies"
                ],
                "summary": "Returns the set of field labels and help texts",
                "description": "cultureCode: en-US, en-GB, en-ZA, en-CA, en-AU, af-ZA, de-DE or xh-ZA etc.",
                "operationId": "Currencies_GetMetadata",
                "parameters": [
                    {
                        "name": "cultureCode",
                        "in": "query",
                        "description": "If not provided, the default value is en-US",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FieldMetadataType"
                                },
                                "example": {
                                    "FieldID": "string",
                                    "Label": "string",
                                    "HelpText": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/CurrentStates": {
            "get": {
                "tags": [
                    "CurrentStates"
                ],
                "summary": "Current States collection",
                "description": "Returns the entity set of Current States with custom states for the current Tenant \r\nand language resources based on the culturecode provided.",
                "operationId": "CurrentStates_Get",
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "RequestTypeID",
                        "in": "query",
                        "description": "Format - int64.",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "culturecode",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeExportPending",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[CurrentState]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "CurrentStateID": 0,
                                            "ResourceName": "string",
                                            "Description": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/CurrentStates/Name": {
            "get": {
                "tags": [
                    "CurrentStates"
                ],
                "summary": "Current States Name",
                "description": "Name of the state provided for the specific Request Type",
                "operationId": "CurrentStates_Name",
                "parameters": [
                    {
                        "name": "CurrentStateID",
                        "in": "query",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "RequestTypeID",
                        "in": "query",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "culturecode",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiCurrentStatesNameGet200ApplicationJsonResponse"
                                },
                                "example": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/DocumentApprovals": {
            "get": {
                "tags": [
                    "DocumentApprovals"
                ],
                "summary": "Approval collection",
                "description": "Returns the entity set of Approvals tasks needed to completed by the current user",
                "operationId": "DocumentApprovals_Get",
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[viewToBeApproved]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "ID": 0,
                                            "Reference": "string",
                                            "DateStamp": "string",
                                            "Description": "string",
                                            "RequestTypeID": 0,
                                            "OwnerID": 0,
                                            "Owner": "string",
                                            "AssistantID": 0,
                                            "CurrentStateID": 0,
                                            "CompanyID": 0,
                                            "TotalCost": 0,
                                            "CreatedDate": "string",
                                            "SubmittedDate": "string",
                                            "ApprovalGroups": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Employees({EmployeeID})": {
            "get": {
                "tags": [
                    "Employees"
                ],
                "summary": "Employee entity",
                "description": "Returns a single employee entity",
                "operationId": "Employees_Get2ByEmployeeid",
                "parameters": [
                    {
                        "name": "EmployeeID",
                        "in": "path",
                        "description": "Format - int64. key: EmployeeID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[Employee]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "EmployeeID": 0,
                                            "TenantID": 0,
                                            "FxUserID": "00000000-0000-0000-0000-000000000000",
                                            "FirstName": "string",
                                            "LastName": "string",
                                            "EmployeeRef": "string",
                                            "Email": "string",
                                            "IsAway": true,
                                            "TimeZoneID": "string",
                                            "IsActive": true,
                                            "DefaultCompanyID": 0,
                                            "AADUserID": "00000000-0000-0000-0000-000000000000",
                                            "LDAPUserID": "string",
                                            "LocationID": 0,
                                            "DefaultInvoiceLocationID": 0,
                                            "DefaultPhysicalLocationID": 0
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Employees/Metadata": {
            "get": {
                "tags": [
                    "Employees"
                ],
                "summary": "Returns the set of field labels and help texts",
                "description": "cultureCode: en-US, en-GB, en-ZA, en-CA, en-AU, af-ZA, de-DE or xh-ZA etc.",
                "operationId": "Employees_GetMetadata",
                "parameters": [
                    {
                        "name": "cultureCode",
                        "in": "query",
                        "description": "If not provided, the default value is en-US",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FieldMetadataType"
                                },
                                "example": {
                                    "FieldID": "string",
                                    "Label": "string",
                                    "HelpText": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Employees({EmployeeID})/Proxies": {
            "get": {
                "tags": [
                    "Employees"
                ],
                "summary": "Employee Proxies",
                "description": "Returns a collection of employees who are proxies of a certain Employee",
                "operationId": "Employees_ProxiesByEmployeeid",
                "parameters": [
                    {
                        "name": "EmployeeID",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[Employee]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "EmployeeID": 0,
                                            "TenantID": 0,
                                            "FxUserID": "00000000-0000-0000-0000-000000000000",
                                            "FirstName": "string",
                                            "LastName": "string",
                                            "EmployeeRef": "string",
                                            "Email": "string",
                                            "IsAway": true,
                                            "TimeZoneID": "string",
                                            "IsActive": true,
                                            "DefaultCompanyID": 0,
                                            "AADUserID": "00000000-0000-0000-0000-000000000000",
                                            "LDAPUserID": "string",
                                            "LocationID": 0,
                                            "DefaultInvoiceLocationID": 0,
                                            "DefaultPhysicalLocationID": 0
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Employees({EmployeeID})/Assistants": {
            "get": {
                "tags": [
                    "Employees"
                ],
                "summary": "Employee Assistants",
                "description": "Returns a collection of employees who are Assistants of a certain Employee",
                "operationId": "Employees_AssistantsByEmployeeid",
                "parameters": [
                    {
                        "name": "EmployeeID",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[Employee]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "EmployeeID": 0,
                                            "TenantID": 0,
                                            "FxUserID": "00000000-0000-0000-0000-000000000000",
                                            "FirstName": "string",
                                            "LastName": "string",
                                            "EmployeeRef": "string",
                                            "Email": "string",
                                            "IsAway": true,
                                            "TimeZoneID": "string",
                                            "IsActive": true,
                                            "DefaultCompanyID": 0,
                                            "AADUserID": "00000000-0000-0000-0000-000000000000",
                                            "LDAPUserID": "string",
                                            "LocationID": 0,
                                            "DefaultInvoiceLocationID": 0,
                                            "DefaultPhysicalLocationID": 0
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Employees({EmployeeID})/Companies": {
            "get": {
                "tags": [
                    "Employees"
                ],
                "summary": "Employee Companies",
                "description": "Returns a collection of companies for a certain Employee",
                "operationId": "Employees_CompaniesByEmployeeid",
                "parameters": [
                    {
                        "name": "EmployeeID",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[Company]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "CompanyID": 0,
                                            "TenantID": 0,
                                            "Code": "string",
                                            "Name": "string",
                                            "RegistrationNumber": "string",
                                            "TaxRegistrationNumber": "string",
                                            "POReferenceMask": "string",
                                            "IsActive": true,
                                            "CurrencyID": 0,
                                            "Terms": "string",
                                            "POHasAllocation": true,
                                            "POHasDistributionList": true,
                                            "IsInvoiceLink": 0,
                                            "TaxRateID": 0,
                                            "PORevisionMask": "string",
                                            "POTemplateID": 0
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/ExchangeRates": {
            "get": {
                "tags": [
                    "ExchangeRates"
                ],
                "summary": "Exchange Rates collection",
                "description": "Returns the entity set of Exchange Rates",
                "operationId": "ExchangeRates_Get",
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[ExchangeRate]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "ExchangeRateID": 0,
                                            "TenantID": 0,
                                            "CurrencyID": 0,
                                            "Type": "string",
                                            "Value": 0,
                                            "IsDefault": true,
                                            "IsActive": true,
                                            "DestinationCurrencyID": 0
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "ExchangeRates"
                ],
                "summary": "Exchange Rate create",
                "description": "Creates the given Exchange Rate entity",
                "operationId": "ExchangeRates_Post",
                "requestBody": {
                    "description": "The entity to post",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExchangeRate"
                            },
                            "example": {
                                "ExchangeRateID": 0,
                                "TenantID": 0,
                                "CurrencyID": 0,
                                "Type": "string",
                                "Value": 0,
                                "IsDefault": true,
                                "IsActive": true,
                                "DestinationCurrencyID": 0
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExchangeRate"
                                },
                                "example": {
                                    "ExchangeRateID": 0,
                                    "TenantID": 0,
                                    "CurrencyID": 0,
                                    "Type": "string",
                                    "Value": 0,
                                    "IsDefault": true,
                                    "IsActive": true,
                                    "DestinationCurrencyID": 0
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/ExchangeRates({ExchangeRateID})": {
            "get": {
                "tags": [
                    "ExchangeRates"
                ],
                "summary": "Exchange Rate entity",
                "description": "Returns a single Exchange Rate entity",
                "operationId": "ExchangeRates_GetByExchangerateid",
                "parameters": [
                    {
                        "name": "ExchangeRateID",
                        "in": "path",
                        "description": "Format - int64. key: ExchangeRateID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[ExchangeRate]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "ExchangeRateID": 0,
                                            "TenantID": 0,
                                            "CurrencyID": 0,
                                            "Type": "string",
                                            "Value": 0,
                                            "IsDefault": true,
                                            "IsActive": true,
                                            "DestinationCurrencyID": 0
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "ExchangeRates"
                ],
                "summary": "Delete entity in EntitySet ExchangeRates",
                "description": "Delete entity in EntitySet ExchangeRates",
                "operationId": "ExchangeRates_DeleteByExchangerateid",
                "parameters": [
                    {
                        "name": "ExchangeRateID",
                        "in": "path",
                        "description": "Format - int64. key: ExchangeRateID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "If-Match header",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "put": {
                "tags": [
                    "ExchangeRates"
                ],
                "summary": "Exchange Rate update",
                "description": "Updates the given Exchange Rate entity",
                "operationId": "ExchangeRates_PutByExchangerateid",
                "parameters": [
                    {
                        "name": "ExchangeRateID",
                        "in": "path",
                        "description": "Format - int64. key: ExchangeRateID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The entity to put",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExchangeRate"
                            },
                            "example": {
                                "ExchangeRateID": 0,
                                "TenantID": 0,
                                "CurrencyID": 0,
                                "Type": "string",
                                "Value": 0,
                                "IsDefault": true,
                                "IsActive": true,
                                "DestinationCurrencyID": 0
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExchangeRate"
                                },
                                "example": {
                                    "ExchangeRateID": 0,
                                    "TenantID": 0,
                                    "CurrencyID": 0,
                                    "Type": "string",
                                    "Value": 0,
                                    "IsDefault": true,
                                    "IsActive": true,
                                    "DestinationCurrencyID": 0
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/ExchangeRates/DefaultExchangeRate": {
            "get": {
                "tags": [
                    "ExchangeRates"
                ],
                "summary": "Exchange Rate entity",
                "description": "Returns the default Exchange Rate based on the currency and company provided",
                "operationId": "ExchangeRates_DefaultExchangeRate",
                "parameters": [
                    {
                        "name": "currencyID",
                        "in": "query",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "companyID",
                        "in": "query",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[ExchangeRate]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "ExchangeRateID": 0,
                                            "TenantID": 0,
                                            "CurrencyID": 0,
                                            "Type": "string",
                                            "Value": 0,
                                            "IsDefault": true,
                                            "IsActive": true,
                                            "DestinationCurrencyID": 0
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/FinancialPeriods": {
            "get": {
                "tags": [
                    "FinancialPeriods"
                ],
                "summary": "Financial Periods collection",
                "description": "Returns the entity set of Financial Periods",
                "operationId": "FinancialPeriods_Get",
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[FinancialPeriod]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "FinancialPeriodID": 0,
                                            "TenantID": 0,
                                            "FinancialYearID": 0,
                                            "Description": "string",
                                            "PeriodNumber": 0,
                                            "StartDate": "string",
                                            "EndDate": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "FinancialPeriods"
                ],
                "summary": "Financial Period create",
                "description": "Creates the given Financial Period entity",
                "operationId": "FinancialPeriods_Post",
                "requestBody": {
                    "description": "The entity to post",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FinancialPeriod"
                            },
                            "example": {
                                "FinancialPeriodID": 0,
                                "TenantID": 0,
                                "FinancialYearID": 0,
                                "Description": "string",
                                "PeriodNumber": 0,
                                "StartDate": "string",
                                "EndDate": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[FinancialPeriod]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "FinancialPeriodID": 0,
                                            "TenantID": 0,
                                            "FinancialYearID": 0,
                                            "Description": "string",
                                            "PeriodNumber": 0,
                                            "StartDate": "string",
                                            "EndDate": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/FinancialYears": {
            "get": {
                "tags": [
                    "FinancialYears"
                ],
                "summary": "Financial Years collection",
                "description": "Returns the entity set of Financial Years",
                "operationId": "FinancialYears_Get",
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[FinancialYear]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "FinancialYearID": 0,
                                            "TenantID": 0,
                                            "Description": "string",
                                            "IsActive": true,
                                            "InitialisationFinancialYearID": 0
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "FinancialYears"
                ],
                "summary": "Financial Year create",
                "description": "Creates the given Financial Year entity",
                "operationId": "FinancialYears_Post",
                "requestBody": {
                    "description": "The entity to post",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FinancialYear"
                            },
                            "example": {
                                "FinancialYearID": 0,
                                "TenantID": 0,
                                "Description": "string",
                                "IsActive": true,
                                "InitialisationFinancialYearID": 0
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[FinancialYear]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "FinancialYearID": 0,
                                            "TenantID": 0,
                                            "Description": "string",
                                            "IsActive": true,
                                            "InitialisationFinancialYearID": 0
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/GLAccounts/NextSegment": {
            "post": {
                "tags": [
                    "GLAccounts"
                ],
                "summary": "GLSegments filtered collection",
                "description": "Returns the entity set of GLSegments for a particular Segment Name by existing GLAccounts based upon a Mask.<br />\r\nGLSegmentNameID: The GLSegmentNameID of the List of GLSegments<br />\r\nGLAccountSegments: List of previous segments chosen",
                "operationId": "GLAccounts_NextSegment",
                "parameters": [
                    {
                        "name": "GLSegmentNameID",
                        "in": "query",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "GLCodeMaskID",
                        "in": "query",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "CompanyID",
                        "in": "query",
                        "description": "Format - int64.",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GLAccountSegments"
                            },
                            "example": {
                                "GLSegmentList": [
                                    {
                                        "GLSegmentID": 0,
                                        "TenantID": 0,
                                        "GLSegmentNameID": 0,
                                        "Code": "string",
                                        "Name": "string",
                                        "IsActive": true,
                                        "CompanyID": 0
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[GLSegment]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "GLSegmentID": 0,
                                            "TenantID": 0,
                                            "GLSegmentNameID": 0,
                                            "Code": "string",
                                            "Name": "string",
                                            "IsActive": true,
                                            "CompanyID": 0
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/InvoiceItems": {
            "get": {
                "tags": [
                    "InvoiceItems"
                ],
                "summary": "Invoice Items collection",
                "description": "Returns the entity set of Invoice Items",
                "operationId": "InvoiceItems_Get",
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[InvoiceItem]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "InvoiceItemID": 0,
                                            "TenantID": 0,
                                            "RequestItemTypeID": 0,
                                            "InvoiceID": 0,
                                            "Description": "string",
                                            "Quantity": 0,
                                            "UnitCostSrc": 0,
                                            "IsInclusive": true,
                                            "CurrencyID": 0,
                                            "ExchangeRate": 0,
                                            "TaxRateID": 0,
                                            "TaxAmount": 0,
                                            "POItemID": 0,
                                            "TypeColumns": "string",
                                            "CustomColumns": "string",
                                            "ExclUnitCostSrc": 0,
                                            "UnitTaxSrc": 0,
                                            "InclUnitCostSrc": 0,
                                            "ItemTaxSrc": 0,
                                            "ExclItemCostSrc": 0,
                                            "InclItemCostSrc": 0,
                                            "ExclUnitCost": 0,
                                            "UnitTax": 0,
                                            "InclUnitCost": 0,
                                            "ItemTax": 0,
                                            "ExclItemCost": 0,
                                            "InclItemCost": 0,
                                            "POID": 0,
                                            "ApprovalID": 0,
                                            "FileUploadFileID": "string",
                                            "BudgetColumnList": [
                                                {
                                                    "ItemBudgetID": 0,
                                                    "IsLinkToCompany": true,
                                                    "IsDynamic": true,
                                                    "GLCodeMaskID": 0,
                                                    "Label": "string",
                                                    "Description": "string",
                                                    "Required": true,
                                                    "Colspan": 0,
                                                    "RuleID": "string",
                                                    "GLAccountID": 0,
                                                    "SegmentNameID": [
                                                        0
                                                    ],
                                                    "SegmentName": [
                                                        "string"
                                                    ],
                                                    "SegmentID": [
                                                        0
                                                    ],
                                                    "SegmentValue": [
                                                        "string"
                                                    ],
                                                    "viewGLCodes": [
                                                        {
                                                            "GLAccountID": 0,
                                                            "GLCode": "string",
                                                            "Name": "string",
                                                            "FullName": "string",
                                                            "GLCodeMaskID": 0,
                                                            "IsActive": true
                                                        }
                                                    ],
                                                    "GLSegments": [
                                                        {
                                                            "GLSegmentID": 0,
                                                            "TenantID": 0,
                                                            "GLSegmentNameID": 0,
                                                            "Code": "string",
                                                            "Name": "string",
                                                            "IsActive": true,
                                                            "CompanyID": 0
                                                        }
                                                    ],
                                                    "ApproveCC": {
                                                        "CostCenterMaskID": 0,
                                                        "UseEmployeeCostCenter": true,
                                                        "IsAutoApprove": true
                                                    },
                                                    "HasApproveCC": true
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "InvoiceItems"
                ],
                "summary": "Invoice Item create",
                "description": "Creates the given Invoice Item entity",
                "operationId": "InvoiceItems_Post",
                "requestBody": {
                    "description": "The entity to post",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InvoiceItem"
                            },
                            "example": {
                                "InvoiceItemID": 0,
                                "TenantID": 0,
                                "RequestItemTypeID": 0,
                                "InvoiceID": 0,
                                "Description": "string",
                                "Quantity": 0,
                                "UnitCostSrc": 0,
                                "IsInclusive": true,
                                "CurrencyID": 0,
                                "ExchangeRate": 0,
                                "TaxRateID": 0,
                                "TaxAmount": 0,
                                "POItemID": 0,
                                "TypeColumns": "string",
                                "CustomColumns": "string",
                                "ExclUnitCostSrc": 0,
                                "UnitTaxSrc": 0,
                                "InclUnitCostSrc": 0,
                                "ItemTaxSrc": 0,
                                "ExclItemCostSrc": 0,
                                "InclItemCostSrc": 0,
                                "ExclUnitCost": 0,
                                "UnitTax": 0,
                                "InclUnitCost": 0,
                                "ItemTax": 0,
                                "ExclItemCost": 0,
                                "InclItemCost": 0,
                                "POID": 0,
                                "ApprovalID": 0,
                                "FileUploadFileID": "string",
                                "BudgetColumnList": [
                                    {
                                        "ItemBudgetID": 0,
                                        "IsLinkToCompany": true,
                                        "IsDynamic": true,
                                        "GLCodeMaskID": 0,
                                        "Label": "string",
                                        "Description": "string",
                                        "Required": true,
                                        "Colspan": 0,
                                        "RuleID": "string",
                                        "GLAccountID": 0,
                                        "SegmentNameID": [
                                            0
                                        ],
                                        "SegmentName": [
                                            "string"
                                        ],
                                        "SegmentID": [
                                            0
                                        ],
                                        "SegmentValue": [
                                            "string"
                                        ],
                                        "viewGLCodes": [
                                            {
                                                "GLAccountID": 0,
                                                "GLCode": "string",
                                                "Name": "string",
                                                "FullName": "string",
                                                "GLCodeMaskID": 0,
                                                "IsActive": true
                                            }
                                        ],
                                        "GLSegments": [
                                            {
                                                "GLSegmentID": 0,
                                                "TenantID": 0,
                                                "GLSegmentNameID": 0,
                                                "Code": "string",
                                                "Name": "string",
                                                "IsActive": true,
                                                "CompanyID": 0
                                            }
                                        ],
                                        "ApproveCC": {
                                            "CostCenterMaskID": 0,
                                            "UseEmployeeCostCenter": true,
                                            "IsAutoApprove": true
                                        },
                                        "HasApproveCC": true
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[InvoiceItem]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "InvoiceItemID": 0,
                                            "TenantID": 0,
                                            "RequestItemTypeID": 0,
                                            "InvoiceID": 0,
                                            "Description": "string",
                                            "Quantity": 0,
                                            "UnitCostSrc": 0,
                                            "IsInclusive": true,
                                            "CurrencyID": 0,
                                            "ExchangeRate": 0,
                                            "TaxRateID": 0,
                                            "TaxAmount": 0,
                                            "POItemID": 0,
                                            "TypeColumns": "string",
                                            "CustomColumns": "string",
                                            "ExclUnitCostSrc": 0,
                                            "UnitTaxSrc": 0,
                                            "InclUnitCostSrc": 0,
                                            "ItemTaxSrc": 0,
                                            "ExclItemCostSrc": 0,
                                            "InclItemCostSrc": 0,
                                            "ExclUnitCost": 0,
                                            "UnitTax": 0,
                                            "InclUnitCost": 0,
                                            "ItemTax": 0,
                                            "ExclItemCost": 0,
                                            "InclItemCost": 0,
                                            "POID": 0,
                                            "ApprovalID": 0,
                                            "FileUploadFileID": "string",
                                            "BudgetColumnList": [
                                                {
                                                    "ItemBudgetID": 0,
                                                    "IsLinkToCompany": true,
                                                    "IsDynamic": true,
                                                    "GLCodeMaskID": 0,
                                                    "Label": "string",
                                                    "Description": "string",
                                                    "Required": true,
                                                    "Colspan": 0,
                                                    "RuleID": "string",
                                                    "GLAccountID": 0,
                                                    "SegmentNameID": [
                                                        0
                                                    ],
                                                    "SegmentName": [
                                                        "string"
                                                    ],
                                                    "SegmentID": [
                                                        0
                                                    ],
                                                    "SegmentValue": [
                                                        "string"
                                                    ],
                                                    "viewGLCodes": [
                                                        {
                                                            "GLAccountID": 0,
                                                            "GLCode": "string",
                                                            "Name": "string",
                                                            "FullName": "string",
                                                            "GLCodeMaskID": 0,
                                                            "IsActive": true
                                                        }
                                                    ],
                                                    "GLSegments": [
                                                        {
                                                            "GLSegmentID": 0,
                                                            "TenantID": 0,
                                                            "GLSegmentNameID": 0,
                                                            "Code": "string",
                                                            "Name": "string",
                                                            "IsActive": true,
                                                            "CompanyID": 0
                                                        }
                                                    ],
                                                    "ApproveCC": {
                                                        "CostCenterMaskID": 0,
                                                        "UseEmployeeCostCenter": true,
                                                        "IsAutoApprove": true
                                                    },
                                                    "HasApproveCC": true
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/InvoiceItems({InvoiceItemID})": {
            "get": {
                "tags": [
                    "InvoiceItems"
                ],
                "summary": "Invoice Items entity",
                "description": "Returns a single Invoice Item entity",
                "operationId": "InvoiceItems_GetByInvoiceitemid",
                "parameters": [
                    {
                        "name": "InvoiceItemID",
                        "in": "path",
                        "description": "Format - int64. key: InvoiceItemID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[InvoiceItem]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "InvoiceItemID": 0,
                                            "TenantID": 0,
                                            "RequestItemTypeID": 0,
                                            "InvoiceID": 0,
                                            "Description": "string",
                                            "Quantity": 0,
                                            "UnitCostSrc": 0,
                                            "IsInclusive": true,
                                            "CurrencyID": 0,
                                            "ExchangeRate": 0,
                                            "TaxRateID": 0,
                                            "TaxAmount": 0,
                                            "POItemID": 0,
                                            "TypeColumns": "string",
                                            "CustomColumns": "string",
                                            "ExclUnitCostSrc": 0,
                                            "UnitTaxSrc": 0,
                                            "InclUnitCostSrc": 0,
                                            "ItemTaxSrc": 0,
                                            "ExclItemCostSrc": 0,
                                            "InclItemCostSrc": 0,
                                            "ExclUnitCost": 0,
                                            "UnitTax": 0,
                                            "InclUnitCost": 0,
                                            "ItemTax": 0,
                                            "ExclItemCost": 0,
                                            "InclItemCost": 0,
                                            "POID": 0,
                                            "ApprovalID": 0,
                                            "FileUploadFileID": "string",
                                            "BudgetColumnList": [
                                                {
                                                    "ItemBudgetID": 0,
                                                    "IsLinkToCompany": true,
                                                    "IsDynamic": true,
                                                    "GLCodeMaskID": 0,
                                                    "Label": "string",
                                                    "Description": "string",
                                                    "Required": true,
                                                    "Colspan": 0,
                                                    "RuleID": "string",
                                                    "GLAccountID": 0,
                                                    "SegmentNameID": [
                                                        0
                                                    ],
                                                    "SegmentName": [
                                                        "string"
                                                    ],
                                                    "SegmentID": [
                                                        0
                                                    ],
                                                    "SegmentValue": [
                                                        "string"
                                                    ],
                                                    "viewGLCodes": [
                                                        {
                                                            "GLAccountID": 0,
                                                            "GLCode": "string",
                                                            "Name": "string",
                                                            "FullName": "string",
                                                            "GLCodeMaskID": 0,
                                                            "IsActive": true
                                                        }
                                                    ],
                                                    "GLSegments": [
                                                        {
                                                            "GLSegmentID": 0,
                                                            "TenantID": 0,
                                                            "GLSegmentNameID": 0,
                                                            "Code": "string",
                                                            "Name": "string",
                                                            "IsActive": true,
                                                            "CompanyID": 0
                                                        }
                                                    ],
                                                    "ApproveCC": {
                                                        "CostCenterMaskID": 0,
                                                        "UseEmployeeCostCenter": true,
                                                        "IsAutoApprove": true
                                                    },
                                                    "HasApproveCC": true
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "InvoiceItems"
                ],
                "summary": "Invoice Item update",
                "description": "Updates the given Invoice Item entity",
                "operationId": "InvoiceItems_PutByInvoiceitemid",
                "parameters": [
                    {
                        "name": "InvoiceItemID",
                        "in": "path",
                        "description": "Format - int64. key: InvoiceItemID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The entity to put",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InvoiceItem"
                            },
                            "example": {
                                "InvoiceItemID": 0,
                                "TenantID": 0,
                                "RequestItemTypeID": 0,
                                "InvoiceID": 0,
                                "Description": "string",
                                "Quantity": 0,
                                "UnitCostSrc": 0,
                                "IsInclusive": true,
                                "CurrencyID": 0,
                                "ExchangeRate": 0,
                                "TaxRateID": 0,
                                "TaxAmount": 0,
                                "POItemID": 0,
                                "TypeColumns": "string",
                                "CustomColumns": "string",
                                "ExclUnitCostSrc": 0,
                                "UnitTaxSrc": 0,
                                "InclUnitCostSrc": 0,
                                "ItemTaxSrc": 0,
                                "ExclItemCostSrc": 0,
                                "InclItemCostSrc": 0,
                                "ExclUnitCost": 0,
                                "UnitTax": 0,
                                "InclUnitCost": 0,
                                "ItemTax": 0,
                                "ExclItemCost": 0,
                                "InclItemCost": 0,
                                "POID": 0,
                                "ApprovalID": 0,
                                "FileUploadFileID": "string",
                                "BudgetColumnList": [
                                    {
                                        "ItemBudgetID": 0,
                                        "IsLinkToCompany": true,
                                        "IsDynamic": true,
                                        "GLCodeMaskID": 0,
                                        "Label": "string",
                                        "Description": "string",
                                        "Required": true,
                                        "Colspan": 0,
                                        "RuleID": "string",
                                        "GLAccountID": 0,
                                        "SegmentNameID": [
                                            0
                                        ],
                                        "SegmentName": [
                                            "string"
                                        ],
                                        "SegmentID": [
                                            0
                                        ],
                                        "SegmentValue": [
                                            "string"
                                        ],
                                        "viewGLCodes": [
                                            {
                                                "GLAccountID": 0,
                                                "GLCode": "string",
                                                "Name": "string",
                                                "FullName": "string",
                                                "GLCodeMaskID": 0,
                                                "IsActive": true
                                            }
                                        ],
                                        "GLSegments": [
                                            {
                                                "GLSegmentID": 0,
                                                "TenantID": 0,
                                                "GLSegmentNameID": 0,
                                                "Code": "string",
                                                "Name": "string",
                                                "IsActive": true,
                                                "CompanyID": 0
                                            }
                                        ],
                                        "ApproveCC": {
                                            "CostCenterMaskID": 0,
                                            "UseEmployeeCostCenter": true,
                                            "IsAutoApprove": true
                                        },
                                        "HasApproveCC": true
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[InvoiceItem]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "InvoiceItemID": 0,
                                            "TenantID": 0,
                                            "RequestItemTypeID": 0,
                                            "InvoiceID": 0,
                                            "Description": "string",
                                            "Quantity": 0,
                                            "UnitCostSrc": 0,
                                            "IsInclusive": true,
                                            "CurrencyID": 0,
                                            "ExchangeRate": 0,
                                            "TaxRateID": 0,
                                            "TaxAmount": 0,
                                            "POItemID": 0,
                                            "TypeColumns": "string",
                                            "CustomColumns": "string",
                                            "ExclUnitCostSrc": 0,
                                            "UnitTaxSrc": 0,
                                            "InclUnitCostSrc": 0,
                                            "ItemTaxSrc": 0,
                                            "ExclItemCostSrc": 0,
                                            "InclItemCostSrc": 0,
                                            "ExclUnitCost": 0,
                                            "UnitTax": 0,
                                            "InclUnitCost": 0,
                                            "ItemTax": 0,
                                            "ExclItemCost": 0,
                                            "InclItemCost": 0,
                                            "POID": 0,
                                            "ApprovalID": 0,
                                            "FileUploadFileID": "string",
                                            "BudgetColumnList": [
                                                {
                                                    "ItemBudgetID": 0,
                                                    "IsLinkToCompany": true,
                                                    "IsDynamic": true,
                                                    "GLCodeMaskID": 0,
                                                    "Label": "string",
                                                    "Description": "string",
                                                    "Required": true,
                                                    "Colspan": 0,
                                                    "RuleID": "string",
                                                    "GLAccountID": 0,
                                                    "SegmentNameID": [
                                                        0
                                                    ],
                                                    "SegmentName": [
                                                        "string"
                                                    ],
                                                    "SegmentID": [
                                                        0
                                                    ],
                                                    "SegmentValue": [
                                                        "string"
                                                    ],
                                                    "viewGLCodes": [
                                                        {
                                                            "GLAccountID": 0,
                                                            "GLCode": "string",
                                                            "Name": "string",
                                                            "FullName": "string",
                                                            "GLCodeMaskID": 0,
                                                            "IsActive": true
                                                        }
                                                    ],
                                                    "GLSegments": [
                                                        {
                                                            "GLSegmentID": 0,
                                                            "TenantID": 0,
                                                            "GLSegmentNameID": 0,
                                                            "Code": "string",
                                                            "Name": "string",
                                                            "IsActive": true,
                                                            "CompanyID": 0
                                                        }
                                                    ],
                                                    "ApproveCC": {
                                                        "CostCenterMaskID": 0,
                                                        "UseEmployeeCostCenter": true,
                                                        "IsAutoApprove": true
                                                    },
                                                    "HasApproveCC": true
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "InvoiceItems"
                ],
                "summary": "Request Item Delete",
                "description": "Deletes the Request Item",
                "operationId": "InvoiceItems_DeleteByInvoiceitemid",
                "parameters": [
                    {
                        "name": "InvoiceItemID",
                        "in": "path",
                        "description": "Format - int64. key: InvoiceItemID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "If-Match header",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/InvoiceItems/Metadata": {
            "get": {
                "tags": [
                    "InvoiceItems"
                ],
                "summary": "Returns the set of field labels and help texts",
                "description": "cultureCode: en-US, en-GB, en-ZA, en-CA, en-AU, af-ZA, de-DE or xh-ZA etc.",
                "operationId": "InvoiceItems_GetMetadata",
                "parameters": [
                    {
                        "name": "cultureCode",
                        "in": "query",
                        "description": "If not provided, the default value is en-US",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FieldMetadataType"
                                },
                                "example": {
                                    "FieldID": "string",
                                    "Label": "string",
                                    "HelpText": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/InvoiceItems({InvoiceItemID})/Files": {
            "get": {
                "tags": [
                    "InvoiceItems"
                ],
                "summary": "Files collection",
                "description": "Returns the List of File names attached to the given InvoiceItemID",
                "operationId": "InvoiceItems_FilesByInvoiceitemid",
                "parameters": [
                    {
                        "name": "InvoiceItemID",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[File]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "FileID": 0,
                                            "TenantID": 0,
                                            "FileName": "string",
                                            "CreationDate": "string",
                                            "ModifiedDate": "string",
                                            "ContentType": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Invoices": {
            "get": {
                "tags": [
                    "Invoices"
                ],
                "summary": "Invoices collection",
                "description": "Returns the entity set of Invoices <br />\r\nQuery Parameters: <br />\r\nexportPending: boolean, true returns the set of Invoices that have not yet been exported and are in a Closing or Closed state. defaults to false. <br />\r\nexported: boolean, true returns the set of Invoices that have already been exported and are in a Closing or Closed state. defaults to false. <br />\r\nSet exportPending and exported both to false to fetch all Invoices. <br />\r\nWhere exportPending and exported are both true, the exportPending would be taken and exported would be ignored. <br />\r\nexport: DEPRECATED. Does nothing. Only purpose is to not break older API calls. It will be removed in the next version. <br />",
                "operationId": "Invoices_Get",
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "exportPending",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "exported",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "export",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[Invoice]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "InvoiceID": 0,
                                            "TenantID": 0,
                                            "RequestTypeID": 0,
                                            "CurrentStateID": 0,
                                            "InvoiceRef": "string",
                                            "InvoiceDate": "string",
                                            "SupplierID": 0,
                                            "ProcessorID": 0,
                                            "CompanyID": 0,
                                            "TypeColumns": "string",
                                            "CustomColumns": "string",
                                            "InvoiceMpID": 0,
                                            "ExIsError": true,
                                            "ExInvoiceRef": "string",
                                            "ItemTaxTotal": 0,
                                            "IsItemTax": true,
                                            "PostingDate": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Invoices"
                ],
                "summary": "Invoice create",
                "description": "Creates the given Invoice entity\r\nPass the userAction to perform a workflow action",
                "operationId": "Invoices_Post",
                "parameters": [
                    {
                        "name": "userAction",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Invoice"
                            },
                            "example": {
                                "InvoiceID": 0,
                                "TenantID": 0,
                                "RequestTypeID": 0,
                                "CurrentStateID": 0,
                                "InvoiceRef": "string",
                                "InvoiceDate": "string",
                                "SupplierID": 0,
                                "ProcessorID": 0,
                                "CompanyID": 0,
                                "TypeColumns": "string",
                                "CustomColumns": "string",
                                "InvoiceMpID": 0,
                                "ExIsError": true,
                                "ExInvoiceRef": "string",
                                "ItemTaxTotal": 0,
                                "IsItemTax": true,
                                "PostingDate": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[Invoice]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "InvoiceID": 0,
                                            "TenantID": 0,
                                            "RequestTypeID": 0,
                                            "CurrentStateID": 0,
                                            "InvoiceRef": "string",
                                            "InvoiceDate": "string",
                                            "SupplierID": 0,
                                            "ProcessorID": 0,
                                            "CompanyID": 0,
                                            "TypeColumns": "string",
                                            "CustomColumns": "string",
                                            "InvoiceMpID": 0,
                                            "ExIsError": true,
                                            "ExInvoiceRef": "string",
                                            "ItemTaxTotal": 0,
                                            "IsItemTax": true,
                                            "PostingDate": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Invoices({InvoiceID})": {
            "get": {
                "tags": [
                    "Invoices"
                ],
                "summary": "Invoice entity",
                "description": "Returns a single Invoice entity",
                "operationId": "Invoices_GetByInvoiceid",
                "parameters": [
                    {
                        "name": "InvoiceID",
                        "in": "path",
                        "description": "Format - int64. key: InvoiceID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[Invoice]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "InvoiceID": 0,
                                            "TenantID": 0,
                                            "RequestTypeID": 0,
                                            "CurrentStateID": 0,
                                            "InvoiceRef": "string",
                                            "InvoiceDate": "string",
                                            "SupplierID": 0,
                                            "ProcessorID": 0,
                                            "CompanyID": 0,
                                            "TypeColumns": "string",
                                            "CustomColumns": "string",
                                            "InvoiceMpID": 0,
                                            "ExIsError": true,
                                            "ExInvoiceRef": "string",
                                            "ItemTaxTotal": 0,
                                            "IsItemTax": true,
                                            "PostingDate": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Invoices"
                ],
                "summary": "Invoice update",
                "description": "Updates the given Invoice entity\r\nPass the userAction to perform a workflow action",
                "operationId": "Invoices_PutByInvoiceid",
                "parameters": [
                    {
                        "name": "InvoiceID",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "userAction",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Invoice"
                            },
                            "example": {
                                "InvoiceID": 0,
                                "TenantID": 0,
                                "RequestTypeID": 0,
                                "CurrentStateID": 0,
                                "InvoiceRef": "string",
                                "InvoiceDate": "string",
                                "SupplierID": 0,
                                "ProcessorID": 0,
                                "CompanyID": 0,
                                "TypeColumns": "string",
                                "CustomColumns": "string",
                                "InvoiceMpID": 0,
                                "ExIsError": true,
                                "ExInvoiceRef": "string",
                                "ItemTaxTotal": 0,
                                "IsItemTax": true,
                                "PostingDate": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[Invoice]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "InvoiceID": 0,
                                            "TenantID": 0,
                                            "RequestTypeID": 0,
                                            "CurrentStateID": 0,
                                            "InvoiceRef": "string",
                                            "InvoiceDate": "string",
                                            "SupplierID": 0,
                                            "ProcessorID": 0,
                                            "CompanyID": 0,
                                            "TypeColumns": "string",
                                            "CustomColumns": "string",
                                            "InvoiceMpID": 0,
                                            "ExIsError": true,
                                            "ExInvoiceRef": "string",
                                            "ItemTaxTotal": 0,
                                            "IsItemTax": true,
                                            "PostingDate": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Invoices"
                ],
                "summary": "Invoice delete",
                "description": "Deletes the given Invoice entity",
                "operationId": "Invoices_DeleteByInvoiceid",
                "parameters": [
                    {
                        "name": "InvoiceID",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "historyNote",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/Invoices/Metadata": {
            "get": {
                "tags": [
                    "Invoices"
                ],
                "summary": "Returns the set of field labels and help texts",
                "description": "cultureCode: en-US, en-GB, en-ZA, en-CA, en-AU, af-ZA, de-DE or xh-ZA etc.",
                "operationId": "Invoices_GetMetadata",
                "parameters": [
                    {
                        "name": "cultureCode",
                        "in": "query",
                        "description": "If not provided, the default value is en-US",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FieldMetadataType"
                                },
                                "example": {
                                    "FieldID": "string",
                                    "Label": "string",
                                    "HelpText": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Invoices({InvoiceID})/Files": {
            "get": {
                "tags": [
                    "Invoices"
                ],
                "summary": "Files collection",
                "description": "Returns the List of File names attached to the given InvoiceID",
                "operationId": "Invoices_FilesByInvoiceid",
                "parameters": [
                    {
                        "name": "InvoiceID",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[File]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "FileID": 0,
                                            "TenantID": 0,
                                            "FileName": "string",
                                            "CreationDate": "string",
                                            "ModifiedDate": "string",
                                            "ContentType": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Locations": {
            "get": {
                "tags": [
                    "Locations"
                ],
                "summary": "Location collection",
                "description": "Returns the entity set of Locations",
                "operationId": "Locations_Get",
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "CompanyID",
                        "in": "query",
                        "description": "Format - int64.",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "LocationType",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[Location]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "LocationID": 0,
                                            "TenantID": 0,
                                            "Name": "string",
                                            "Address1": "string",
                                            "Address2": "string",
                                            "Address3": "string",
                                            "Address4": "string",
                                            "Locality": "string",
                                            "Region": "string",
                                            "PostalCode": "string",
                                            "Country": "string",
                                            "Coordinates": "string",
                                            "Contact": "string",
                                            "PhoneNumber": "string",
                                            "FaxNumber": "string",
                                            "Email": "string",
                                            "IsActive": true,
                                            "TaxRateID": 0
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Locations({LocationID})": {
            "get": {
                "tags": [
                    "Locations"
                ],
                "summary": "Location entity",
                "description": "Returns a single Location entity",
                "operationId": "Locations_GetByLocationid",
                "parameters": [
                    {
                        "name": "LocationID",
                        "in": "path",
                        "description": "Format - int64. key: LocationID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[Location]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "LocationID": 0,
                                            "TenantID": 0,
                                            "Name": "string",
                                            "Address1": "string",
                                            "Address2": "string",
                                            "Address3": "string",
                                            "Address4": "string",
                                            "Locality": "string",
                                            "Region": "string",
                                            "PostalCode": "string",
                                            "Country": "string",
                                            "Coordinates": "string",
                                            "Contact": "string",
                                            "PhoneNumber": "string",
                                            "FaxNumber": "string",
                                            "Email": "string",
                                            "IsActive": true,
                                            "TaxRateID": 0
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Locations/Metadata": {
            "get": {
                "tags": [
                    "Locations"
                ],
                "summary": "Returns the set of field labels and help texts",
                "description": "cultureCode: en-US, en-GB, en-ZA, en-CA, en-AU, af-ZA, de-DE or xh-ZA etc.",
                "operationId": "Locations_GetMetadata",
                "parameters": [
                    {
                        "name": "cultureCode",
                        "in": "query",
                        "description": "If not provided, the default value is en-US",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FieldMetadataType"
                                },
                                "example": {
                                    "FieldID": "string",
                                    "Label": "string",
                                    "HelpText": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Locations/LocationTypes": {
            "get": {
                "tags": [
                    "Locations"
                ],
                "summary": "Location entity",
                "description": "Returns a list of LocationTypes",
                "operationId": "Locations_LocationTypes",
                "parameters": [
                    {
                        "name": "cultureCode",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[LocationType]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "LocationTypeID": 0,
                                            "ResourceName": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Locations/CompanyLocations": {
            "get": {
                "tags": [
                    "Locations"
                ],
                "summary": "Location entity",
                "description": "Returns a list Location entities by CompanyID and LocationTypeID",
                "operationId": "Locations_CompanyLocations",
                "parameters": [
                    {
                        "name": "CompanyID",
                        "in": "query",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "LocationType",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[Location]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "LocationID": 0,
                                            "TenantID": 0,
                                            "Name": "string",
                                            "Address1": "string",
                                            "Address2": "string",
                                            "Address3": "string",
                                            "Address4": "string",
                                            "Locality": "string",
                                            "Region": "string",
                                            "PostalCode": "string",
                                            "Country": "string",
                                            "Coordinates": "string",
                                            "Contact": "string",
                                            "PhoneNumber": "string",
                                            "FaxNumber": "string",
                                            "Email": "string",
                                            "IsActive": true,
                                            "TaxRateID": 0
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/LookupItems": {
            "get": {
                "tags": [
                    "LookupItems"
                ],
                "summary": "Lookup Items collection",
                "description": "Returns the entity set of Lookup Items",
                "operationId": "LookupItems_Get",
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[LookupItem]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "LookupItemID": 0,
                                            "TenantID": 0,
                                            "LookupID": 0,
                                            "Value": "string",
                                            "FilterByCompanyID": 0,
                                            "FilterByLookupItemID": 0,
                                            "IsActive": true,
                                            "Custom1": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "LookupItems"
                ],
                "summary": "Lookup Item create",
                "description": "Creates the given Lookup Item entity",
                "operationId": "LookupItems_Post",
                "requestBody": {
                    "description": "The entity to post",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LookupItem"
                            },
                            "example": {
                                "LookupItemID": 0,
                                "TenantID": 0,
                                "LookupID": 0,
                                "Value": "string",
                                "FilterByCompanyID": 0,
                                "FilterByLookupItemID": 0,
                                "IsActive": true,
                                "Custom1": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[LookupItem]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "LookupItemID": 0,
                                            "TenantID": 0,
                                            "LookupID": 0,
                                            "Value": "string",
                                            "FilterByCompanyID": 0,
                                            "FilterByLookupItemID": 0,
                                            "IsActive": true,
                                            "Custom1": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Lookups": {
            "get": {
                "tags": [
                    "Lookups"
                ],
                "summary": "Lookups collection",
                "description": "Returns the entity set of Lookups",
                "operationId": "Lookups_Get",
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[Lookup]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "LookupID": 0,
                                            "TenantID": 0,
                                            "Name": "string",
                                            "IsFilterByCompany": true,
                                            "FilterByLookupID": 0,
                                            "BuiltinID": 0,
                                            "IsActive": true,
                                            "Custom1Header": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/MyTasks/Approvals": {
            "get": {
                "tags": [
                    "MyTasks"
                ],
                "summary": "Approval collection",
                "description": "Returns the entity set of Approvals tasks needed to completed by the current user",
                "operationId": "MyTasks_Approvals",
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[viewToBeApproved]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "ID": 0,
                                            "Reference": "string",
                                            "DateStamp": "string",
                                            "Description": "string",
                                            "RequestTypeID": 0,
                                            "OwnerID": 0,
                                            "Owner": "string",
                                            "AssistantID": 0,
                                            "CurrentStateID": 0,
                                            "CompanyID": 0,
                                            "TotalCost": 0,
                                            "CreatedDate": "string",
                                            "SubmittedDate": "string",
                                            "ApprovalGroups": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/MyTasks/Alerts": {
            "get": {
                "tags": [
                    "MyTasks"
                ],
                "summary": "Alert collection",
                "description": "Returns the entity set of Alerts needed to completed by the current user",
                "operationId": "MyTasks_Alerts",
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[viewAlert]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "AlertID": 0,
                                            "AlertTypeID": 0,
                                            "AlertPolicyID": 0,
                                            "Description": "string",
                                            "RequestID": 0,
                                            "InvoiceID": 0,
                                            "ProformaInvoiceID": 0,
                                            "POID": 0,
                                            "SupplierID": 0,
                                            "DocumentDescription": "string",
                                            "RequestTypeID": 0,
                                            "CreationDate": "string",
                                            "Info": "string",
                                            "IsActive": true,
                                            "IsStatus": true,
                                            "RecipientID": 0,
                                            "AlertRecipientID": 0
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/ReportData/GLAccountStateSpend": {
            "get": {
                "tags": [
                    "ReportData"
                ],
                "summary": "GLAccount State Spend",
                "description": "Returns the entity set of spend per GL Account by State",
                "operationId": "ReportData_GLAccountStateSpend",
                "parameters": [
                    {
                        "name": "GLCodeMaskID",
                        "in": "query",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "GLAccountID",
                        "in": "query",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[viewGLSpendByState]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "GLCodeMaskID": 0,
                                            "GLAccountID": 0,
                                            "CurrentStateID": 0,
                                            "TotalExclCost": 0,
                                            "TotalExclCostSrc": 0,
                                            "TotalInclCost": 0,
                                            "TotalInclCostSrc": 0
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/ReportData/GLAccountPeriodBudgetvSpend": {
            "get": {
                "tags": [
                    "ReportData"
                ],
                "summary": "GLAccount Period Budget v Spend",
                "description": "Returns the entity set of spend per GL Account by Period",
                "operationId": "ReportData_GLAccountPeriodBudgetvSpend",
                "parameters": [
                    {
                        "name": "GLCodeMaskID",
                        "in": "query",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "GLAccountID",
                        "in": "query",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "FinancialYearID",
                        "in": "query",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[Budget]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "BudgetID": 0,
                                            "TenantID": 0,
                                            "GLAccountID": 0,
                                            "GLSegmentID": 0,
                                            "FinancialPeriodID": 0,
                                            "Value": 0,
                                            "ActualSpend": 0
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/RequestItems": {
            "get": {
                "tags": [
                    "RequestItems"
                ],
                "summary": "Request Items collection",
                "description": "Returns the entity set of Request Items",
                "operationId": "RequestItems_Get",
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[RequestItem]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "FileUploadFileID": "string",
                                            "TypeColumnList": [
                                                {
                                                    "Name": "string",
                                                    "DataType": 0,
                                                    "MaxLength": 0,
                                                    "Required": true,
                                                    "Label": "string",
                                                    "Description": "string",
                                                    "ControlType": 0,
                                                    "ReadOnly": true,
                                                    "Colspan": 0,
                                                    "CtrlColspan": 0,
                                                    "DefaultValue": {},
                                                    "IsDisplayed": true,
                                                    "LookupID": 0,
                                                    "BuiltinID": 0,
                                                    "LookupValue": "string",
                                                    "Value": {}
                                                }
                                            ],
                                            "CustomColumnList": [
                                                {
                                                    "Name": "string",
                                                    "DataType": 0,
                                                    "MaxLength": 0,
                                                    "Required": true,
                                                    "Label": "string",
                                                    "Description": "string",
                                                    "ControlType": 0,
                                                    "ReadOnly": true,
                                                    "Colspan": 0,
                                                    "CtrlColspan": 0,
                                                    "DefaultValue": {},
                                                    "IsDisplayed": true,
                                                    "LookupID": 0,
                                                    "BuiltinID": 0,
                                                    "LookupValue": "string",
                                                    "Value": {}
                                                }
                                            ],
                                            "BudgetColumnList": [
                                                {
                                                    "ItemBudgetID": 0,
                                                    "IsLinkToCompany": true,
                                                    "IsDynamic": true,
                                                    "GLCodeMaskID": 0,
                                                    "Label": "string",
                                                    "Description": "string",
                                                    "Required": true,
                                                    "Colspan": 0,
                                                    "RuleID": "string",
                                                    "GLAccountID": 0,
                                                    "SegmentNameID": [
                                                        0
                                                    ],
                                                    "SegmentName": [
                                                        "string"
                                                    ],
                                                    "SegmentID": [
                                                        0
                                                    ],
                                                    "SegmentValue": [
                                                        "string"
                                                    ],
                                                    "viewGLCodes": [
                                                        {
                                                            "GLAccountID": 0,
                                                            "GLCode": "string",
                                                            "Name": "string",
                                                            "FullName": "string",
                                                            "GLCodeMaskID": 0,
                                                            "IsActive": true
                                                        }
                                                    ],
                                                    "GLSegments": [
                                                        {
                                                            "GLSegmentID": 0,
                                                            "TenantID": 0,
                                                            "GLSegmentNameID": 0,
                                                            "Code": "string",
                                                            "Name": "string",
                                                            "IsActive": true,
                                                            "CompanyID": 0
                                                        }
                                                    ],
                                                    "ApproveCC": {
                                                        "CostCenterMaskID": 0,
                                                        "UseEmployeeCostCenter": true,
                                                        "IsAutoApprove": true
                                                    },
                                                    "HasApproveCC": true
                                                }
                                            ],
                                            "RequestItemID": 0,
                                            "TenantID": 0,
                                            "RequestItemTypeID": 0,
                                            "RequestID": 0,
                                            "Description": "string",
                                            "DateStamp": "string",
                                            "Quantity": 0,
                                            "UnitCostSrc": 0,
                                            "IsInclusive": true,
                                            "CurrencyID": 0,
                                            "ExchangeRate": 0,
                                            "TaxRateID": 0,
                                            "TaxAmount": 0,
                                            "ApprovalID": 0,
                                            "SupplierID": 0,
                                            "DeliveryLocationID": 0,
                                            "TypeColumns": "string",
                                            "CustomColumns": "string",
                                            "ExclUnitCostSrc": 0,
                                            "UnitTaxSrc": 0,
                                            "InclUnitCostSrc": 0,
                                            "ItemTaxSrc": 0,
                                            "ExclItemCostSrc": 0,
                                            "InclItemCostSrc": 0,
                                            "ExclUnitCost": 0,
                                            "UnitTax": 0,
                                            "InclUnitCost": 0,
                                            "ItemTax": 0,
                                            "ExclItemCost": 0,
                                            "InclItemCost": 0,
                                            "RequestorID": 0,
                                            "ServiceSupplierID": 0,
                                            "RevisedPOItemID": 0
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "RequestItems"
                ],
                "summary": "Request Item create",
                "description": "Creates the given Request Item entity",
                "operationId": "RequestItems_Post",
                "requestBody": {
                    "description": "The entity to post",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestItem"
                            },
                            "example": {
                                "FileUploadFileID": "string",
                                "TypeColumnList": [
                                    {
                                        "Name": "string",
                                        "DataType": 0,
                                        "MaxLength": 0,
                                        "Required": true,
                                        "Label": "string",
                                        "Description": "string",
                                        "ControlType": 0,
                                        "ReadOnly": true,
                                        "Colspan": 0,
                                        "CtrlColspan": 0,
                                        "DefaultValue": {},
                                        "IsDisplayed": true,
                                        "LookupID": 0,
                                        "BuiltinID": 0,
                                        "LookupValue": "string",
                                        "Value": {}
                                    }
                                ],
                                "CustomColumnList": [
                                    {
                                        "Name": "string",
                                        "DataType": 0,
                                        "MaxLength": 0,
                                        "Required": true,
                                        "Label": "string",
                                        "Description": "string",
                                        "ControlType": 0,
                                        "ReadOnly": true,
                                        "Colspan": 0,
                                        "CtrlColspan": 0,
                                        "DefaultValue": {},
                                        "IsDisplayed": true,
                                        "LookupID": 0,
                                        "BuiltinID": 0,
                                        "LookupValue": "string",
                                        "Value": {}
                                    }
                                ],
                                "BudgetColumnList": [
                                    {
                                        "ItemBudgetID": 0,
                                        "IsLinkToCompany": true,
                                        "IsDynamic": true,
                                        "GLCodeMaskID": 0,
                                        "Label": "string",
                                        "Description": "string",
                                        "Required": true,
                                        "Colspan": 0,
                                        "RuleID": "string",
                                        "GLAccountID": 0,
                                        "SegmentNameID": [
                                            0
                                        ],
                                        "SegmentName": [
                                            "string"
                                        ],
                                        "SegmentID": [
                                            0
                                        ],
                                        "SegmentValue": [
                                            "string"
                                        ],
                                        "viewGLCodes": [
                                            {
                                                "GLAccountID": 0,
                                                "GLCode": "string",
                                                "Name": "string",
                                                "FullName": "string",
                                                "GLCodeMaskID": 0,
                                                "IsActive": true
                                            }
                                        ],
                                        "GLSegments": [
                                            {
                                                "GLSegmentID": 0,
                                                "TenantID": 0,
                                                "GLSegmentNameID": 0,
                                                "Code": "string",
                                                "Name": "string",
                                                "IsActive": true,
                                                "CompanyID": 0
                                            }
                                        ],
                                        "ApproveCC": {
                                            "CostCenterMaskID": 0,
                                            "UseEmployeeCostCenter": true,
                                            "IsAutoApprove": true
                                        },
                                        "HasApproveCC": true
                                    }
                                ],
                                "RequestItemID": 0,
                                "TenantID": 0,
                                "RequestItemTypeID": 0,
                                "RequestID": 0,
                                "Description": "string",
                                "DateStamp": "string",
                                "Quantity": 0,
                                "UnitCostSrc": 0,
                                "IsInclusive": true,
                                "CurrencyID": 0,
                                "ExchangeRate": 0,
                                "TaxRateID": 0,
                                "TaxAmount": 0,
                                "ApprovalID": 0,
                                "SupplierID": 0,
                                "DeliveryLocationID": 0,
                                "TypeColumns": "string",
                                "CustomColumns": "string",
                                "ExclUnitCostSrc": 0,
                                "UnitTaxSrc": 0,
                                "InclUnitCostSrc": 0,
                                "ItemTaxSrc": 0,
                                "ExclItemCostSrc": 0,
                                "InclItemCostSrc": 0,
                                "ExclUnitCost": 0,
                                "UnitTax": 0,
                                "InclUnitCost": 0,
                                "ItemTax": 0,
                                "ExclItemCost": 0,
                                "InclItemCost": 0,
                                "RequestorID": 0,
                                "ServiceSupplierID": 0,
                                "RevisedPOItemID": 0
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[RequestItem]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "FileUploadFileID": "string",
                                            "TypeColumnList": [
                                                {
                                                    "Name": "string",
                                                    "DataType": 0,
                                                    "MaxLength": 0,
                                                    "Required": true,
                                                    "Label": "string",
                                                    "Description": "string",
                                                    "ControlType": 0,
                                                    "ReadOnly": true,
                                                    "Colspan": 0,
                                                    "CtrlColspan": 0,
                                                    "DefaultValue": {},
                                                    "IsDisplayed": true,
                                                    "LookupID": 0,
                                                    "BuiltinID": 0,
                                                    "LookupValue": "string",
                                                    "Value": {}
                                                }
                                            ],
                                            "CustomColumnList": [
                                                {
                                                    "Name": "string",
                                                    "DataType": 0,
                                                    "MaxLength": 0,
                                                    "Required": true,
                                                    "Label": "string",
                                                    "Description": "string",
                                                    "ControlType": 0,
                                                    "ReadOnly": true,
                                                    "Colspan": 0,
                                                    "CtrlColspan": 0,
                                                    "DefaultValue": {},
                                                    "IsDisplayed": true,
                                                    "LookupID": 0,
                                                    "BuiltinID": 0,
                                                    "LookupValue": "string",
                                                    "Value": {}
                                                }
                                            ],
                                            "BudgetColumnList": [
                                                {
                                                    "ItemBudgetID": 0,
                                                    "IsLinkToCompany": true,
                                                    "IsDynamic": true,
                                                    "GLCodeMaskID": 0,
                                                    "Label": "string",
                                                    "Description": "string",
                                                    "Required": true,
                                                    "Colspan": 0,
                                                    "RuleID": "string",
                                                    "GLAccountID": 0,
                                                    "SegmentNameID": [
                                                        0
                                                    ],
                                                    "SegmentName": [
                                                        "string"
                                                    ],
                                                    "SegmentID": [
                                                        0
                                                    ],
                                                    "SegmentValue": [
                                                        "string"
                                                    ],
                                                    "viewGLCodes": [
                                                        {
                                                            "GLAccountID": 0,
                                                            "GLCode": "string",
                                                            "Name": "string",
                                                            "FullName": "string",
                                                            "GLCodeMaskID": 0,
                                                            "IsActive": true
                                                        }
                                                    ],
                                                    "GLSegments": [
                                                        {
                                                            "GLSegmentID": 0,
                                                            "TenantID": 0,
                                                            "GLSegmentNameID": 0,
                                                            "Code": "string",
                                                            "Name": "string",
                                                            "IsActive": true,
                                                            "CompanyID": 0
                                                        }
                                                    ],
                                                    "ApproveCC": {
                                                        "CostCenterMaskID": 0,
                                                        "UseEmployeeCostCenter": true,
                                                        "IsAutoApprove": true
                                                    },
                                                    "HasApproveCC": true
                                                }
                                            ],
                                            "RequestItemID": 0,
                                            "TenantID": 0,
                                            "RequestItemTypeID": 0,
                                            "RequestID": 0,
                                            "Description": "string",
                                            "DateStamp": "string",
                                            "Quantity": 0,
                                            "UnitCostSrc": 0,
                                            "IsInclusive": true,
                                            "CurrencyID": 0,
                                            "ExchangeRate": 0,
                                            "TaxRateID": 0,
                                            "TaxAmount": 0,
                                            "ApprovalID": 0,
                                            "SupplierID": 0,
                                            "DeliveryLocationID": 0,
                                            "TypeColumns": "string",
                                            "CustomColumns": "string",
                                            "ExclUnitCostSrc": 0,
                                            "UnitTaxSrc": 0,
                                            "InclUnitCostSrc": 0,
                                            "ItemTaxSrc": 0,
                                            "ExclItemCostSrc": 0,
                                            "InclItemCostSrc": 0,
                                            "ExclUnitCost": 0,
                                            "UnitTax": 0,
                                            "InclUnitCost": 0,
                                            "ItemTax": 0,
                                            "ExclItemCost": 0,
                                            "InclItemCost": 0,
                                            "RequestorID": 0,
                                            "ServiceSupplierID": 0,
                                            "RevisedPOItemID": 0
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/RequestItems({RequestItemID})": {
            "get": {
                "tags": [
                    "RequestItems"
                ],
                "summary": "Request Item entity",
                "description": "Returns a single Request Item entity.<br />\r\nsetting RequestItemID to 0, with a valid RequestItemTypeID and valid RequestID, will return a RequestItem template with default values.",
                "operationId": "RequestItems_GetByRequestitemid",
                "parameters": [
                    {
                        "name": "RequestItemID",
                        "in": "path",
                        "description": "Format - int64. key: RequestItemID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "RequestItemTypeID",
                        "in": "query",
                        "description": "Format - int64.",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "RequestID",
                        "in": "query",
                        "description": "Format - int64.",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[RequestItem]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "FileUploadFileID": "string",
                                            "TypeColumnList": [
                                                {
                                                    "Name": "string",
                                                    "DataType": 0,
                                                    "MaxLength": 0,
                                                    "Required": true,
                                                    "Label": "string",
                                                    "Description": "string",
                                                    "ControlType": 0,
                                                    "ReadOnly": true,
                                                    "Colspan": 0,
                                                    "CtrlColspan": 0,
                                                    "DefaultValue": {},
                                                    "IsDisplayed": true,
                                                    "LookupID": 0,
                                                    "BuiltinID": 0,
                                                    "LookupValue": "string",
                                                    "Value": {}
                                                }
                                            ],
                                            "CustomColumnList": [
                                                {
                                                    "Name": "string",
                                                    "DataType": 0,
                                                    "MaxLength": 0,
                                                    "Required": true,
                                                    "Label": "string",
                                                    "Description": "string",
                                                    "ControlType": 0,
                                                    "ReadOnly": true,
                                                    "Colspan": 0,
                                                    "CtrlColspan": 0,
                                                    "DefaultValue": {},
                                                    "IsDisplayed": true,
                                                    "LookupID": 0,
                                                    "BuiltinID": 0,
                                                    "LookupValue": "string",
                                                    "Value": {}
                                                }
                                            ],
                                            "BudgetColumnList": [
                                                {
                                                    "ItemBudgetID": 0,
                                                    "IsLinkToCompany": true,
                                                    "IsDynamic": true,
                                                    "GLCodeMaskID": 0,
                                                    "Label": "string",
                                                    "Description": "string",
                                                    "Required": true,
                                                    "Colspan": 0,
                                                    "RuleID": "string",
                                                    "GLAccountID": 0,
                                                    "SegmentNameID": [
                                                        0
                                                    ],
                                                    "SegmentName": [
                                                        "string"
                                                    ],
                                                    "SegmentID": [
                                                        0
                                                    ],
                                                    "SegmentValue": [
                                                        "string"
                                                    ],
                                                    "viewGLCodes": [
                                                        {
                                                            "GLAccountID": 0,
                                                            "GLCode": "string",
                                                            "Name": "string",
                                                            "FullName": "string",
                                                            "GLCodeMaskID": 0,
                                                            "IsActive": true
                                                        }
                                                    ],
                                                    "GLSegments": [
                                                        {
                                                            "GLSegmentID": 0,
                                                            "TenantID": 0,
                                                            "GLSegmentNameID": 0,
                                                            "Code": "string",
                                                            "Name": "string",
                                                            "IsActive": true,
                                                            "CompanyID": 0
                                                        }
                                                    ],
                                                    "ApproveCC": {
                                                        "CostCenterMaskID": 0,
                                                        "UseEmployeeCostCenter": true,
                                                        "IsAutoApprove": true
                                                    },
                                                    "HasApproveCC": true
                                                }
                                            ],
                                            "RequestItemID": 0,
                                            "TenantID": 0,
                                            "RequestItemTypeID": 0,
                                            "RequestID": 0,
                                            "Description": "string",
                                            "DateStamp": "string",
                                            "Quantity": 0,
                                            "UnitCostSrc": 0,
                                            "IsInclusive": true,
                                            "CurrencyID": 0,
                                            "ExchangeRate": 0,
                                            "TaxRateID": 0,
                                            "TaxAmount": 0,
                                            "ApprovalID": 0,
                                            "SupplierID": 0,
                                            "DeliveryLocationID": 0,
                                            "TypeColumns": "string",
                                            "CustomColumns": "string",
                                            "ExclUnitCostSrc": 0,
                                            "UnitTaxSrc": 0,
                                            "InclUnitCostSrc": 0,
                                            "ItemTaxSrc": 0,
                                            "ExclItemCostSrc": 0,
                                            "InclItemCostSrc": 0,
                                            "ExclUnitCost": 0,
                                            "UnitTax": 0,
                                            "InclUnitCost": 0,
                                            "ItemTax": 0,
                                            "ExclItemCost": 0,
                                            "InclItemCost": 0,
                                            "RequestorID": 0,
                                            "ServiceSupplierID": 0,
                                            "RevisedPOItemID": 0
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "RequestItems"
                ],
                "summary": "Request Item update",
                "description": "Updates the given Request Item entity",
                "operationId": "RequestItems_PutByRequestitemid",
                "parameters": [
                    {
                        "name": "RequestItemID",
                        "in": "path",
                        "description": "Format - int64. key: RequestItemID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The entity to put",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestItem"
                            },
                            "example": {
                                "FileUploadFileID": "string",
                                "TypeColumnList": [
                                    {
                                        "Name": "string",
                                        "DataType": 0,
                                        "MaxLength": 0,
                                        "Required": true,
                                        "Label": "string",
                                        "Description": "string",
                                        "ControlType": 0,
                                        "ReadOnly": true,
                                        "Colspan": 0,
                                        "CtrlColspan": 0,
                                        "DefaultValue": {},
                                        "IsDisplayed": true,
                                        "LookupID": 0,
                                        "BuiltinID": 0,
                                        "LookupValue": "string",
                                        "Value": {}
                                    }
                                ],
                                "CustomColumnList": [
                                    {
                                        "Name": "string",
                                        "DataType": 0,
                                        "MaxLength": 0,
                                        "Required": true,
                                        "Label": "string",
                                        "Description": "string",
                                        "ControlType": 0,
                                        "ReadOnly": true,
                                        "Colspan": 0,
                                        "CtrlColspan": 0,
                                        "DefaultValue": {},
                                        "IsDisplayed": true,
                                        "LookupID": 0,
                                        "BuiltinID": 0,
                                        "LookupValue": "string",
                                        "Value": {}
                                    }
                                ],
                                "BudgetColumnList": [
                                    {
                                        "ItemBudgetID": 0,
                                        "IsLinkToCompany": true,
                                        "IsDynamic": true,
                                        "GLCodeMaskID": 0,
                                        "Label": "string",
                                        "Description": "string",
                                        "Required": true,
                                        "Colspan": 0,
                                        "RuleID": "string",
                                        "GLAccountID": 0,
                                        "SegmentNameID": [
                                            0
                                        ],
                                        "SegmentName": [
                                            "string"
                                        ],
                                        "SegmentID": [
                                            0
                                        ],
                                        "SegmentValue": [
                                            "string"
                                        ],
                                        "viewGLCodes": [
                                            {
                                                "GLAccountID": 0,
                                                "GLCode": "string",
                                                "Name": "string",
                                                "FullName": "string",
                                                "GLCodeMaskID": 0,
                                                "IsActive": true
                                            }
                                        ],
                                        "GLSegments": [
                                            {
                                                "GLSegmentID": 0,
                                                "TenantID": 0,
                                                "GLSegmentNameID": 0,
                                                "Code": "string",
                                                "Name": "string",
                                                "IsActive": true,
                                                "CompanyID": 0
                                            }
                                        ],
                                        "ApproveCC": {
                                            "CostCenterMaskID": 0,
                                            "UseEmployeeCostCenter": true,
                                            "IsAutoApprove": true
                                        },
                                        "HasApproveCC": true
                                    }
                                ],
                                "RequestItemID": 0,
                                "TenantID": 0,
                                "RequestItemTypeID": 0,
                                "RequestID": 0,
                                "Description": "string",
                                "DateStamp": "string",
                                "Quantity": 0,
                                "UnitCostSrc": 0,
                                "IsInclusive": true,
                                "CurrencyID": 0,
                                "ExchangeRate": 0,
                                "TaxRateID": 0,
                                "TaxAmount": 0,
                                "ApprovalID": 0,
                                "SupplierID": 0,
                                "DeliveryLocationID": 0,
                                "TypeColumns": "string",
                                "CustomColumns": "string",
                                "ExclUnitCostSrc": 0,
                                "UnitTaxSrc": 0,
                                "InclUnitCostSrc": 0,
                                "ItemTaxSrc": 0,
                                "ExclItemCostSrc": 0,
                                "InclItemCostSrc": 0,
                                "ExclUnitCost": 0,
                                "UnitTax": 0,
                                "InclUnitCost": 0,
                                "ItemTax": 0,
                                "ExclItemCost": 0,
                                "InclItemCost": 0,
                                "RequestorID": 0,
                                "ServiceSupplierID": 0,
                                "RevisedPOItemID": 0
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[RequestItem]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "FileUploadFileID": "string",
                                            "TypeColumnList": [
                                                {
                                                    "Name": "string",
                                                    "DataType": 0,
                                                    "MaxLength": 0,
                                                    "Required": true,
                                                    "Label": "string",
                                                    "Description": "string",
                                                    "ControlType": 0,
                                                    "ReadOnly": true,
                                                    "Colspan": 0,
                                                    "CtrlColspan": 0,
                                                    "DefaultValue": {},
                                                    "IsDisplayed": true,
                                                    "LookupID": 0,
                                                    "BuiltinID": 0,
                                                    "LookupValue": "string",
                                                    "Value": {}
                                                }
                                            ],
                                            "CustomColumnList": [
                                                {
                                                    "Name": "string",
                                                    "DataType": 0,
                                                    "MaxLength": 0,
                                                    "Required": true,
                                                    "Label": "string",
                                                    "Description": "string",
                                                    "ControlType": 0,
                                                    "ReadOnly": true,
                                                    "Colspan": 0,
                                                    "CtrlColspan": 0,
                                                    "DefaultValue": {},
                                                    "IsDisplayed": true,
                                                    "LookupID": 0,
                                                    "BuiltinID": 0,
                                                    "LookupValue": "string",
                                                    "Value": {}
                                                }
                                            ],
                                            "BudgetColumnList": [
                                                {
                                                    "ItemBudgetID": 0,
                                                    "IsLinkToCompany": true,
                                                    "IsDynamic": true,
                                                    "GLCodeMaskID": 0,
                                                    "Label": "string",
                                                    "Description": "string",
                                                    "Required": true,
                                                    "Colspan": 0,
                                                    "RuleID": "string",
                                                    "GLAccountID": 0,
                                                    "SegmentNameID": [
                                                        0
                                                    ],
                                                    "SegmentName": [
                                                        "string"
                                                    ],
                                                    "SegmentID": [
                                                        0
                                                    ],
                                                    "SegmentValue": [
                                                        "string"
                                                    ],
                                                    "viewGLCodes": [
                                                        {
                                                            "GLAccountID": 0,
                                                            "GLCode": "string",
                                                            "Name": "string",
                                                            "FullName": "string",
                                                            "GLCodeMaskID": 0,
                                                            "IsActive": true
                                                        }
                                                    ],
                                                    "GLSegments": [
                                                        {
                                                            "GLSegmentID": 0,
                                                            "TenantID": 0,
                                                            "GLSegmentNameID": 0,
                                                            "Code": "string",
                                                            "Name": "string",
                                                            "IsActive": true,
                                                            "CompanyID": 0
                                                        }
                                                    ],
                                                    "ApproveCC": {
                                                        "CostCenterMaskID": 0,
                                                        "UseEmployeeCostCenter": true,
                                                        "IsAutoApprove": true
                                                    },
                                                    "HasApproveCC": true
                                                }
                                            ],
                                            "RequestItemID": 0,
                                            "TenantID": 0,
                                            "RequestItemTypeID": 0,
                                            "RequestID": 0,
                                            "Description": "string",
                                            "DateStamp": "string",
                                            "Quantity": 0,
                                            "UnitCostSrc": 0,
                                            "IsInclusive": true,
                                            "CurrencyID": 0,
                                            "ExchangeRate": 0,
                                            "TaxRateID": 0,
                                            "TaxAmount": 0,
                                            "ApprovalID": 0,
                                            "SupplierID": 0,
                                            "DeliveryLocationID": 0,
                                            "TypeColumns": "string",
                                            "CustomColumns": "string",
                                            "ExclUnitCostSrc": 0,
                                            "UnitTaxSrc": 0,
                                            "InclUnitCostSrc": 0,
                                            "ItemTaxSrc": 0,
                                            "ExclItemCostSrc": 0,
                                            "InclItemCostSrc": 0,
                                            "ExclUnitCost": 0,
                                            "UnitTax": 0,
                                            "InclUnitCost": 0,
                                            "ItemTax": 0,
                                            "ExclItemCost": 0,
                                            "InclItemCost": 0,
                                            "RequestorID": 0,
                                            "ServiceSupplierID": 0,
                                            "RevisedPOItemID": 0
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "RequestItems"
                ],
                "summary": "Request Item Delete",
                "description": "Deletes the Request Item",
                "operationId": "RequestItems_DeleteByRequestitemid",
                "parameters": [
                    {
                        "name": "RequestItemID",
                        "in": "path",
                        "description": "Format - int64. key: RequestItemID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "If-Match header",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/RequestItems/Metadata": {
            "get": {
                "tags": [
                    "RequestItems"
                ],
                "summary": "Returns the set of field labels and help texts",
                "description": "cultureCode: en-US, en-GB, en-ZA, en-CA, en-AU, af-ZA, de-DE or xh-ZA etc.",
                "operationId": "RequestItems_GetMetadata",
                "parameters": [
                    {
                        "name": "cultureCode",
                        "in": "query",
                        "description": "If not provided, the default value is en-US",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FieldMetadataType"
                                },
                                "example": {
                                    "FieldID": "string",
                                    "Label": "string",
                                    "HelpText": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/RequestItems({RequestItemID})/RequestItemHistory": {
            "get": {
                "tags": [
                    "RequestItems"
                ],
                "summary": "Request Item History collection",
                "description": "Returns the entity set of Request Item History for the given RequestItemID",
                "operationId": "RequestItems_RequestItemHistoryByRequestitemid",
                "parameters": [
                    {
                        "name": "RequestItemID",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[RequestItemHistory]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "RequestItemHistoryID": 0,
                                            "RequestItemID": 0,
                                            "EmployeeID": 0,
                                            "DateStamp": "string",
                                            "UserAction": "string",
                                            "Info": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/RequestItems({RequestItemID})/Files": {
            "get": {
                "tags": [
                    "RequestItems"
                ],
                "summary": "Files collection",
                "description": "Returns the List of File names attached to the given RequestItemID",
                "operationId": "RequestItems_FilesByRequestitemid",
                "parameters": [
                    {
                        "name": "RequestItemID",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[File]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "FileID": 0,
                                            "TenantID": 0,
                                            "FileName": "string",
                                            "CreationDate": "string",
                                            "ModifiedDate": "string",
                                            "ContentType": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/RequestItemTypes": {
            "get": {
                "tags": [
                    "RequestItemTypes"
                ],
                "summary": "Request Item Types collection",
                "description": "Returns the entity set of Request Item Types",
                "operationId": "RequestItemTypes_Get",
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[RequestItemType]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "ResourceName": "string",
                                            "RequestItemTypeName": "string",
                                            "BudgetColumnSchema": [
                                                {
                                                    "ItemBudgetID": 0,
                                                    "IsLinkToCompany": true,
                                                    "IsDynamic": true,
                                                    "GLCodeMaskID": 0,
                                                    "Label": "string",
                                                    "Description": "string",
                                                    "Required": true,
                                                    "Colspan": 0,
                                                    "RuleID": "string",
                                                    "GLAccountID": 0,
                                                    "SegmentNameID": [
                                                        0
                                                    ],
                                                    "SegmentName": [
                                                        "string"
                                                    ],
                                                    "SegmentID": [
                                                        0
                                                    ],
                                                    "SegmentValue": [
                                                        "string"
                                                    ],
                                                    "viewGLCodes": [
                                                        {
                                                            "GLAccountID": 0,
                                                            "GLCode": "string",
                                                            "Name": "string",
                                                            "FullName": "string",
                                                            "GLCodeMaskID": 0,
                                                            "IsActive": true
                                                        }
                                                    ],
                                                    "GLSegments": [
                                                        {
                                                            "GLSegmentID": 0,
                                                            "TenantID": 0,
                                                            "GLSegmentNameID": 0,
                                                            "Code": "string",
                                                            "Name": "string",
                                                            "IsActive": true,
                                                            "CompanyID": 0
                                                        }
                                                    ],
                                                    "ApproveCC": {
                                                        "CostCenterMaskID": 0,
                                                        "UseEmployeeCostCenter": true,
                                                        "IsAutoApprove": true
                                                    },
                                                    "HasApproveCC": true
                                                }
                                            ],
                                            "CustomColumnSchema": [
                                                {
                                                    "Name": "string",
                                                    "DataType": 0,
                                                    "MaxLength": 0,
                                                    "Required": true,
                                                    "Label": "string",
                                                    "Description": "string",
                                                    "ControlType": 0,
                                                    "ReadOnly": true,
                                                    "Colspan": 0,
                                                    "CtrlColspan": 0,
                                                    "DefaultValue": {},
                                                    "IsDisplayed": true,
                                                    "LookupID": 0,
                                                    "BuiltinID": 0,
                                                    "LookupValue": "string",
                                                    "Value": {}
                                                }
                                            ],
                                            "TypeColumnSchema": [
                                                {
                                                    "Name": "string",
                                                    "DataType": 0,
                                                    "MaxLength": 0,
                                                    "Required": true,
                                                    "Label": "string",
                                                    "Description": "string",
                                                    "ControlType": 0,
                                                    "ReadOnly": true,
                                                    "Colspan": 0,
                                                    "CtrlColspan": 0,
                                                    "DefaultValue": {},
                                                    "IsDisplayed": true,
                                                    "LookupID": 0,
                                                    "BuiltinID": 0,
                                                    "LookupValue": "string",
                                                    "Value": {}
                                                }
                                            ],
                                            "RequestItemTypeID": 0,
                                            "TenantID": 0,
                                            "CustomColumns": "string",
                                            "IsActive": true,
                                            "BudgetColumns": "string",
                                            "InvoiceRule": 0
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/RequestItemTypes({RequestItemTypeID})": {
            "get": {
                "tags": [
                    "RequestItemTypes"
                ],
                "summary": "Request Item Type entity",
                "description": "Returns a single Request Item Type entity",
                "operationId": "RequestItemTypes_GetByRequestitemtypeid",
                "parameters": [
                    {
                        "name": "RequestItemTypeID",
                        "in": "path",
                        "description": "Format - int64. key: RequestItemTypeID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[RequestItemType]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "ResourceName": "string",
                                            "RequestItemTypeName": "string",
                                            "BudgetColumnSchema": [
                                                {
                                                    "ItemBudgetID": 0,
                                                    "IsLinkToCompany": true,
                                                    "IsDynamic": true,
                                                    "GLCodeMaskID": 0,
                                                    "Label": "string",
                                                    "Description": "string",
                                                    "Required": true,
                                                    "Colspan": 0,
                                                    "RuleID": "string",
                                                    "GLAccountID": 0,
                                                    "SegmentNameID": [
                                                        0
                                                    ],
                                                    "SegmentName": [
                                                        "string"
                                                    ],
                                                    "SegmentID": [
                                                        0
                                                    ],
                                                    "SegmentValue": [
                                                        "string"
                                                    ],
                                                    "viewGLCodes": [
                                                        {
                                                            "GLAccountID": 0,
                                                            "GLCode": "string",
                                                            "Name": "string",
                                                            "FullName": "string",
                                                            "GLCodeMaskID": 0,
                                                            "IsActive": true
                                                        }
                                                    ],
                                                    "GLSegments": [
                                                        {
                                                            "GLSegmentID": 0,
                                                            "TenantID": 0,
                                                            "GLSegmentNameID": 0,
                                                            "Code": "string",
                                                            "Name": "string",
                                                            "IsActive": true,
                                                            "CompanyID": 0
                                                        }
                                                    ],
                                                    "ApproveCC": {
                                                        "CostCenterMaskID": 0,
                                                        "UseEmployeeCostCenter": true,
                                                        "IsAutoApprove": true
                                                    },
                                                    "HasApproveCC": true
                                                }
                                            ],
                                            "CustomColumnSchema": [
                                                {
                                                    "Name": "string",
                                                    "DataType": 0,
                                                    "MaxLength": 0,
                                                    "Required": true,
                                                    "Label": "string",
                                                    "Description": "string",
                                                    "ControlType": 0,
                                                    "ReadOnly": true,
                                                    "Colspan": 0,
                                                    "CtrlColspan": 0,
                                                    "DefaultValue": {},
                                                    "IsDisplayed": true,
                                                    "LookupID": 0,
                                                    "BuiltinID": 0,
                                                    "LookupValue": "string",
                                                    "Value": {}
                                                }
                                            ],
                                            "TypeColumnSchema": [
                                                {
                                                    "Name": "string",
                                                    "DataType": 0,
                                                    "MaxLength": 0,
                                                    "Required": true,
                                                    "Label": "string",
                                                    "Description": "string",
                                                    "ControlType": 0,
                                                    "ReadOnly": true,
                                                    "Colspan": 0,
                                                    "CtrlColspan": 0,
                                                    "DefaultValue": {},
                                                    "IsDisplayed": true,
                                                    "LookupID": 0,
                                                    "BuiltinID": 0,
                                                    "LookupValue": "string",
                                                    "Value": {}
                                                }
                                            ],
                                            "RequestItemTypeID": 0,
                                            "TenantID": 0,
                                            "CustomColumns": "string",
                                            "IsActive": true,
                                            "BudgetColumns": "string",
                                            "InvoiceRule": 0
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/RequestItemTypes/Metadata": {
            "get": {
                "tags": [
                    "RequestItemTypes"
                ],
                "summary": "Returns the set of field labels and help texts",
                "description": "cultureCode: en-US, en-GB, en-ZA, en-CA, en-AU, af-ZA, de-DE or xh-ZA etc.",
                "operationId": "RequestItemTypes_GetMetadata",
                "parameters": [
                    {
                        "name": "cultureCode",
                        "in": "query",
                        "description": "If not provided, the default value is en-US",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FieldMetadataType"
                                },
                                "example": {
                                    "FieldID": "string",
                                    "Label": "string",
                                    "HelpText": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Requests": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "Requests collection",
                "description": "Returns the entity set of Requests\r\nQuery Parameters: <br />\r\nexportPending: boolean, true returns the set of Requests that have not yet been exported and are in a Closing or Closed state. defaults to false. <br />\r\nexported: boolean, true returns the set of Requests that have already been exported and are in a Closing or Closed state. defaults to false. <br />\r\nSet exportPending and exported both to false to fetch all Requests. <br />\r\nWhere exportPending and exported are both true, the exportPending would be taken and exported would be ignored. <br />",
                "operationId": "Requests_Get",
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "exportPending",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "exported",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[Request]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "TypeColumnList": [
                                                {
                                                    "Name": "string",
                                                    "DataType": 0,
                                                    "MaxLength": 0,
                                                    "Required": true,
                                                    "Label": "string",
                                                    "Description": "string",
                                                    "ControlType": 0,
                                                    "ReadOnly": true,
                                                    "Colspan": 0,
                                                    "CtrlColspan": 0,
                                                    "DefaultValue": {},
                                                    "IsDisplayed": true,
                                                    "LookupID": 0,
                                                    "BuiltinID": 0,
                                                    "LookupValue": "string",
                                                    "Value": {}
                                                }
                                            ],
                                            "CustomColumnList": [
                                                {
                                                    "Name": "string",
                                                    "DataType": 0,
                                                    "MaxLength": 0,
                                                    "Required": true,
                                                    "Label": "string",
                                                    "Description": "string",
                                                    "ControlType": 0,
                                                    "ReadOnly": true,
                                                    "Colspan": 0,
                                                    "CtrlColspan": 0,
                                                    "DefaultValue": {},
                                                    "IsDisplayed": true,
                                                    "LookupID": 0,
                                                    "BuiltinID": 0,
                                                    "LookupValue": "string",
                                                    "Value": {}
                                                }
                                            ],
                                            "RequestID": 0,
                                            "TenantID": 0,
                                            "RequestTypeID": 0,
                                            "CurrentStateID": 0,
                                            "ReferenceNumber": 0,
                                            "Title": "string",
                                            "RequestorID": 0,
                                            "AssistantID": 0,
                                            "CompanyID": 0,
                                            "TypeColumns": "string",
                                            "CustomColumns": "string",
                                            "ExIsError": true,
                                            "ExReferenceNumber": "string",
                                            "RevisedPOID": 0
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Requests"
                ],
                "summary": "Request create",
                "description": "Creates the given Request entity\r\nPass the userAction to perform a workflow action",
                "operationId": "Requests_Post",
                "parameters": [
                    {
                        "name": "userAction",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Request"
                            },
                            "example": {
                                "TypeColumnList": [
                                    {
                                        "Name": "string",
                                        "DataType": 0,
                                        "MaxLength": 0,
                                        "Required": true,
                                        "Label": "string",
                                        "Description": "string",
                                        "ControlType": 0,
                                        "ReadOnly": true,
                                        "Colspan": 0,
                                        "CtrlColspan": 0,
                                        "DefaultValue": {},
                                        "IsDisplayed": true,
                                        "LookupID": 0,
                                        "BuiltinID": 0,
                                        "LookupValue": "string",
                                        "Value": {}
                                    }
                                ],
                                "CustomColumnList": [
                                    {
                                        "Name": "string",
                                        "DataType": 0,
                                        "MaxLength": 0,
                                        "Required": true,
                                        "Label": "string",
                                        "Description": "string",
                                        "ControlType": 0,
                                        "ReadOnly": true,
                                        "Colspan": 0,
                                        "CtrlColspan": 0,
                                        "DefaultValue": {},
                                        "IsDisplayed": true,
                                        "LookupID": 0,
                                        "BuiltinID": 0,
                                        "LookupValue": "string",
                                        "Value": {}
                                    }
                                ],
                                "RequestID": 0,
                                "TenantID": 0,
                                "RequestTypeID": 0,
                                "CurrentStateID": 0,
                                "ReferenceNumber": 0,
                                "Title": "string",
                                "RequestorID": 0,
                                "AssistantID": 0,
                                "CompanyID": 0,
                                "TypeColumns": "string",
                                "CustomColumns": "string",
                                "ExIsError": true,
                                "ExReferenceNumber": "string",
                                "RevisedPOID": 0
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[Request]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "TypeColumnList": [
                                                {
                                                    "Name": "string",
                                                    "DataType": 0,
                                                    "MaxLength": 0,
                                                    "Required": true,
                                                    "Label": "string",
                                                    "Description": "string",
                                                    "ControlType": 0,
                                                    "ReadOnly": true,
                                                    "Colspan": 0,
                                                    "CtrlColspan": 0,
                                                    "DefaultValue": {},
                                                    "IsDisplayed": true,
                                                    "LookupID": 0,
                                                    "BuiltinID": 0,
                                                    "LookupValue": "string",
                                                    "Value": {}
                                                }
                                            ],
                                            "CustomColumnList": [
                                                {
                                                    "Name": "string",
                                                    "DataType": 0,
                                                    "MaxLength": 0,
                                                    "Required": true,
                                                    "Label": "string",
                                                    "Description": "string",
                                                    "ControlType": 0,
                                                    "ReadOnly": true,
                                                    "Colspan": 0,
                                                    "CtrlColspan": 0,
                                                    "DefaultValue": {},
                                                    "IsDisplayed": true,
                                                    "LookupID": 0,
                                                    "BuiltinID": 0,
                                                    "LookupValue": "string",
                                                    "Value": {}
                                                }
                                            ],
                                            "RequestID": 0,
                                            "TenantID": 0,
                                            "RequestTypeID": 0,
                                            "CurrentStateID": 0,
                                            "ReferenceNumber": 0,
                                            "Title": "string",
                                            "RequestorID": 0,
                                            "AssistantID": 0,
                                            "CompanyID": 0,
                                            "TypeColumns": "string",
                                            "CustomColumns": "string",
                                            "ExIsError": true,
                                            "ExReferenceNumber": "string",
                                            "RevisedPOID": 0
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Requests({RequestID})": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "Request entity",
                "description": "Returns a single Request entity",
                "operationId": "Requests_GetByRequestid",
                "parameters": [
                    {
                        "name": "RequestID",
                        "in": "path",
                        "description": "Format - int64. key: RequestID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[Request]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "TypeColumnList": [
                                                {
                                                    "Name": "string",
                                                    "DataType": 0,
                                                    "MaxLength": 0,
                                                    "Required": true,
                                                    "Label": "string",
                                                    "Description": "string",
                                                    "ControlType": 0,
                                                    "ReadOnly": true,
                                                    "Colspan": 0,
                                                    "CtrlColspan": 0,
                                                    "DefaultValue": {},
                                                    "IsDisplayed": true,
                                                    "LookupID": 0,
                                                    "BuiltinID": 0,
                                                    "LookupValue": "string",
                                                    "Value": {}
                                                }
                                            ],
                                            "CustomColumnList": [
                                                {
                                                    "Name": "string",
                                                    "DataType": 0,
                                                    "MaxLength": 0,
                                                    "Required": true,
                                                    "Label": "string",
                                                    "Description": "string",
                                                    "ControlType": 0,
                                                    "ReadOnly": true,
                                                    "Colspan": 0,
                                                    "CtrlColspan": 0,
                                                    "DefaultValue": {},
                                                    "IsDisplayed": true,
                                                    "LookupID": 0,
                                                    "BuiltinID": 0,
                                                    "LookupValue": "string",
                                                    "Value": {}
                                                }
                                            ],
                                            "RequestID": 0,
                                            "TenantID": 0,
                                            "RequestTypeID": 0,
                                            "CurrentStateID": 0,
                                            "ReferenceNumber": 0,
                                            "Title": "string",
                                            "RequestorID": 0,
                                            "AssistantID": 0,
                                            "CompanyID": 0,
                                            "TypeColumns": "string",
                                            "CustomColumns": "string",
                                            "ExIsError": true,
                                            "ExReferenceNumber": "string",
                                            "RevisedPOID": 0
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Requests"
                ],
                "summary": "Request update",
                "description": "Updates the given Request entity\r\nPass the userAction to perform a workflow action",
                "operationId": "Requests_PutByRequestid",
                "parameters": [
                    {
                        "name": "RequestID",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "userAction",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Request"
                            },
                            "example": {
                                "TypeColumnList": [
                                    {
                                        "Name": "string",
                                        "DataType": 0,
                                        "MaxLength": 0,
                                        "Required": true,
                                        "Label": "string",
                                        "Description": "string",
                                        "ControlType": 0,
                                        "ReadOnly": true,
                                        "Colspan": 0,
                                        "CtrlColspan": 0,
                                        "DefaultValue": {},
                                        "IsDisplayed": true,
                                        "LookupID": 0,
                                        "BuiltinID": 0,
                                        "LookupValue": "string",
                                        "Value": {}
                                    }
                                ],
                                "CustomColumnList": [
                                    {
                                        "Name": "string",
                                        "DataType": 0,
                                        "MaxLength": 0,
                                        "Required": true,
                                        "Label": "string",
                                        "Description": "string",
                                        "ControlType": 0,
                                        "ReadOnly": true,
                                        "Colspan": 0,
                                        "CtrlColspan": 0,
                                        "DefaultValue": {},
                                        "IsDisplayed": true,
                                        "LookupID": 0,
                                        "BuiltinID": 0,
                                        "LookupValue": "string",
                                        "Value": {}
                                    }
                                ],
                                "RequestID": 0,
                                "TenantID": 0,
                                "RequestTypeID": 0,
                                "CurrentStateID": 0,
                                "ReferenceNumber": 0,
                                "Title": "string",
                                "RequestorID": 0,
                                "AssistantID": 0,
                                "CompanyID": 0,
                                "TypeColumns": "string",
                                "CustomColumns": "string",
                                "ExIsError": true,
                                "ExReferenceNumber": "string",
                                "RevisedPOID": 0
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[Request]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "TypeColumnList": [
                                                {
                                                    "Name": "string",
                                                    "DataType": 0,
                                                    "MaxLength": 0,
                                                    "Required": true,
                                                    "Label": "string",
                                                    "Description": "string",
                                                    "ControlType": 0,
                                                    "ReadOnly": true,
                                                    "Colspan": 0,
                                                    "CtrlColspan": 0,
                                                    "DefaultValue": {},
                                                    "IsDisplayed": true,
                                                    "LookupID": 0,
                                                    "BuiltinID": 0,
                                                    "LookupValue": "string",
                                                    "Value": {}
                                                }
                                            ],
                                            "CustomColumnList": [
                                                {
                                                    "Name": "string",
                                                    "DataType": 0,
                                                    "MaxLength": 0,
                                                    "Required": true,
                                                    "Label": "string",
                                                    "Description": "string",
                                                    "ControlType": 0,
                                                    "ReadOnly": true,
                                                    "Colspan": 0,
                                                    "CtrlColspan": 0,
                                                    "DefaultValue": {},
                                                    "IsDisplayed": true,
                                                    "LookupID": 0,
                                                    "BuiltinID": 0,
                                                    "LookupValue": "string",
                                                    "Value": {}
                                                }
                                            ],
                                            "RequestID": 0,
                                            "TenantID": 0,
                                            "RequestTypeID": 0,
                                            "CurrentStateID": 0,
                                            "ReferenceNumber": 0,
                                            "Title": "string",
                                            "RequestorID": 0,
                                            "AssistantID": 0,
                                            "CompanyID": 0,
                                            "TypeColumns": "string",
                                            "CustomColumns": "string",
                                            "ExIsError": true,
                                            "ExReferenceNumber": "string",
                                            "RevisedPOID": 0
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Requests"
                ],
                "summary": "Request delete",
                "description": "Deletes the given Request entity",
                "operationId": "Requests_DeleteByRequestid",
                "parameters": [
                    {
                        "name": "RequestID",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "historyNote",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/Requests/Metadata": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "Returns the set of field labels and help texts",
                "description": "cultureCode: en-US, en-GB, en-ZA, en-CA, en-AU, af-ZA, de-DE or xh-ZA etc.",
                "operationId": "Requests_GetMetadata",
                "parameters": [
                    {
                        "name": "cultureCode",
                        "in": "query",
                        "description": "If not provided, the default value is en-US",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FieldMetadataType"
                                },
                                "example": {
                                    "FieldID": "string",
                                    "Label": "string",
                                    "HelpText": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Requests({RequestID})/RequestHistory": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "Request History collection",
                "description": "Returns the entity set of Request History for the given RequestID",
                "operationId": "Requests_RequestHistoryByRequestid",
                "parameters": [
                    {
                        "name": "RequestID",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[RequestHistory]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "RequestHistoryID": 0,
                                            "RequestID": 0,
                                            "EmployeeID": 0,
                                            "CurrentStateID": 0,
                                            "DateStamp": "string",
                                            "UserAction": "string",
                                            "Info": "string",
                                            "Note": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Requests({RequestID})/RequestItemHistory": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "Request Item History collection",
                "description": "Returns the entity set of Request Item History for the given RequestID",
                "operationId": "Requests_RequestItemHistoryByRequestid",
                "parameters": [
                    {
                        "name": "RequestID",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[RequestItemHistory]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "RequestItemHistoryID": 0,
                                            "RequestItemID": 0,
                                            "EmployeeID": 0,
                                            "DateStamp": "string",
                                            "UserAction": "string",
                                            "Info": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Requests({RequestID})/Actions": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "Request Action collection",
                "description": "Returns the list of actions the current is user is allowed to do on the given Request.",
                "operationId": "Requests_ActionsByRequestid",
                "parameters": [
                    {
                        "name": "RequestID",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[CommandButton]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "ID": "string",
                                            "Text": "string",
                                            "DescriptionText": "string",
                                            "UserAction": 0,
                                            "ButtonStyle": "string",
                                            "Icon": "string",
                                            "LinkType": "string",
                                            "Enabled": true,
                                            "Link": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Requests({RequestID})/Notes": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "Request Notes collection",
                "description": "Returns the list of notes for the given Request.",
                "operationId": "Requests_NotesByRequestid",
                "parameters": [
                    {
                        "name": "RequestID",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[DocumentNote]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "DocumentNoteID": 0,
                                            "TenantID": 0,
                                            "RequestID": 0,
                                            "InvoiceID": 0,
                                            "CreationDate": "string",
                                            "NoteText": "string",
                                            "EmployeeID": 0,
                                            "CurrentStateID": 0,
                                            "POID": 0,
                                            "SupplierID": 0
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Requests"
                ],
                "summary": "Request Notes add and update",
                "description": "Updates or adds a note for the given Request",
                "operationId": "Requests_PutNotesByRequestid",
                "parameters": [
                    {
                        "name": "RequestID",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DocumentNote"
                            },
                            "example": {
                                "DocumentNoteID": 0,
                                "TenantID": 0,
                                "RequestID": 0,
                                "InvoiceID": 0,
                                "CreationDate": "string",
                                "NoteText": "string",
                                "EmployeeID": 0,
                                "CurrentStateID": 0,
                                "POID": 0,
                                "SupplierID": 0
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Requests"
                ],
                "summary": "Requests_DeleteNotesByRequestid",
                "operationId": "Requests_DeleteNotesByRequestid",
                "parameters": [
                    {
                        "name": "RequestID",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "DocumentNoteID",
                        "in": "query",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/Requests({RequestID})/ApprovalCycle": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "Approval Cycle collection",
                "description": "Returns the entity set of Request Approval Cycle for the given RequestID",
                "operationId": "Requests_ApprovalCycleByRequestid",
                "parameters": [
                    {
                        "name": "RequestID",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[viewRequestApprovalCycle]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "RequestID": 0,
                                            "Approval": "string",
                                            "ApprovalCC": "string",
                                            "ApprovalOrder": 0,
                                            "Employee": "string",
                                            "DateStamp": "string",
                                            "UserAction": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Requests({RequestID})/RequestGLAccounts": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "GL Account collection",
                "description": "Returns the entity set of GL Accounts and the sum of the spend, of the given Request, for the given RequestID",
                "operationId": "Requests_RequestGLAccountsByRequestid",
                "parameters": [
                    {
                        "name": "RequestID",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[viewRequestGLsAndRequestSpend]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "RequestID": 0,
                                            "GLAccountName": "string",
                                            "GLAccountCode": "string",
                                            "TotalExclCost": 0,
                                            "TotalExclCostSrc": 0,
                                            "TotalInclCost": 0,
                                            "TotalInclCostSrc": 0,
                                            "GLCodeMaskID": 0,
                                            "GLAccountID": 0
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Requests({RequestID})/Files": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "Files collection",
                "description": "Returns the List of File names attached to the given RequestID",
                "operationId": "Requests_FilesByRequestid",
                "parameters": [
                    {
                        "name": "RequestID",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[File]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "FileID": 0,
                                            "TenantID": 0,
                                            "FileName": "string",
                                            "CreationDate": "string",
                                            "ModifiedDate": "string",
                                            "ContentType": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Requests({RequestID})/CanEdit": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "Edit Status for Request",
                "description": "Returns EditStatus object to determine whether a request header and items can have their Core or Budget or Custom fields editable.",
                "operationId": "Requests_CanEditByRequestid",
                "parameters": [
                    {
                        "name": "RequestID",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EditStatus"
                                },
                                "example": {
                                    "CanEditCore": true,
                                    "CanEditBudget": true,
                                    "CanEditCustom": true,
                                    "CanViewBudget": true
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/RequestTypes": {
            "get": {
                "tags": [
                    "RequestTypes"
                ],
                "summary": "Request Types collection",
                "description": "Returns the entity set of Request Types",
                "operationId": "RequestTypes_Get",
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[RequestType]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "ResourceName": "string",
                                            "RequestTypeName": "string",
                                            "CustomColumnSchema": [
                                                {
                                                    "Name": "string",
                                                    "DataType": 0,
                                                    "MaxLength": 0,
                                                    "Required": true,
                                                    "Label": "string",
                                                    "Description": "string",
                                                    "ControlType": 0,
                                                    "ReadOnly": true,
                                                    "Colspan": 0,
                                                    "CtrlColspan": 0,
                                                    "DefaultValue": {},
                                                    "IsDisplayed": true,
                                                    "LookupID": 0,
                                                    "BuiltinID": 0,
                                                    "LookupValue": "string",
                                                    "Value": {}
                                                }
                                            ],
                                            "TypeColumnSchema": [
                                                {
                                                    "Name": "string",
                                                    "DataType": 0,
                                                    "MaxLength": 0,
                                                    "Required": true,
                                                    "Label": "string",
                                                    "Description": "string",
                                                    "ControlType": 0,
                                                    "ReadOnly": true,
                                                    "Colspan": 0,
                                                    "CtrlColspan": 0,
                                                    "DefaultValue": {},
                                                    "IsDisplayed": true,
                                                    "LookupID": 0,
                                                    "BuiltinID": 0,
                                                    "LookupValue": "string",
                                                    "Value": {}
                                                }
                                            ],
                                            "RequestTypeID": 0,
                                            "TenantID": 0,
                                            "CustomColumns": "string",
                                            "IsActive": true,
                                            "AutoCloseType": 0,
                                            "CloseOlderThan": 0,
                                            "HasIWSPolicy": true
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/RequestTypes({RequestTypeID})": {
            "get": {
                "tags": [
                    "RequestTypes"
                ],
                "summary": "Request Type entity",
                "description": "Returns a single Request Type entity",
                "operationId": "RequestTypes_GetByRequesttypeid",
                "parameters": [
                    {
                        "name": "RequestTypeID",
                        "in": "path",
                        "description": "Format - int64. key: RequestTypeID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[RequestType]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "ResourceName": "string",
                                            "RequestTypeName": "string",
                                            "CustomColumnSchema": [
                                                {
                                                    "Name": "string",
                                                    "DataType": 0,
                                                    "MaxLength": 0,
                                                    "Required": true,
                                                    "Label": "string",
                                                    "Description": "string",
                                                    "ControlType": 0,
                                                    "ReadOnly": true,
                                                    "Colspan": 0,
                                                    "CtrlColspan": 0,
                                                    "DefaultValue": {},
                                                    "IsDisplayed": true,
                                                    "LookupID": 0,
                                                    "BuiltinID": 0,
                                                    "LookupValue": "string",
                                                    "Value": {}
                                                }
                                            ],
                                            "TypeColumnSchema": [
                                                {
                                                    "Name": "string",
                                                    "DataType": 0,
                                                    "MaxLength": 0,
                                                    "Required": true,
                                                    "Label": "string",
                                                    "Description": "string",
                                                    "ControlType": 0,
                                                    "ReadOnly": true,
                                                    "Colspan": 0,
                                                    "CtrlColspan": 0,
                                                    "DefaultValue": {},
                                                    "IsDisplayed": true,
                                                    "LookupID": 0,
                                                    "BuiltinID": 0,
                                                    "LookupValue": "string",
                                                    "Value": {}
                                                }
                                            ],
                                            "RequestTypeID": 0,
                                            "TenantID": 0,
                                            "CustomColumns": "string",
                                            "IsActive": true,
                                            "AutoCloseType": 0,
                                            "CloseOlderThan": 0,
                                            "HasIWSPolicy": true
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/RequestTypes/Metadata": {
            "get": {
                "tags": [
                    "RequestTypes"
                ],
                "summary": "Returns the set of field labels and help texts",
                "description": "cultureCode: en-US, en-GB, en-ZA, en-CA, en-AU, af-ZA, de-DE or xh-ZA etc.",
                "operationId": "RequestTypes_GetMetadata",
                "parameters": [
                    {
                        "name": "cultureCode",
                        "in": "query",
                        "description": "If not provided, the default value is en-US",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FieldMetadataType"
                                },
                                "example": {
                                    "FieldID": "string",
                                    "Label": "string",
                                    "HelpText": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/RequestTypes/Workflows": {
            "get": {
                "tags": [
                    "RequestTypes"
                ],
                "summary": "Request Type Workflow",
                "description": "Returns workflow logic for request types",
                "operationId": "RequestTypes_Workflows",
                "parameters": [
                    {
                        "name": "RequestTypeID",
                        "in": "query",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[String]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        "string"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Suppliers": {
            "get": {
                "tags": [
                    "Suppliers"
                ],
                "summary": "Suppliers collection",
                "description": "Returns the entity set of suppliers",
                "operationId": "Suppliers_Get",
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "CompanyID",
                        "in": "query",
                        "description": "Format - int64.",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[Supplier]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "CustomColumnList": [
                                                {
                                                    "Name": "string",
                                                    "DataType": 0,
                                                    "MaxLength": 0,
                                                    "Required": true,
                                                    "Label": "string",
                                                    "Description": "string",
                                                    "ControlType": 0,
                                                    "ReadOnly": true,
                                                    "Colspan": 0,
                                                    "CtrlColspan": 0,
                                                    "DefaultValue": {},
                                                    "IsDisplayed": true,
                                                    "LookupID": 0,
                                                    "BuiltinID": 0,
                                                    "LookupValue": "string",
                                                    "Value": {}
                                                }
                                            ],
                                            "SupplierID": 0,
                                            "TenantID": 0,
                                            "Code": "string",
                                            "Name": "string",
                                            "Contact": "string",
                                            "PhoneNumber": "string",
                                            "FaxNumber": "string",
                                            "Email": "string",
                                            "RegistrationNumber": "string",
                                            "TaxRegistrationNumber": "string",
                                            "BankAccountNumber": "string",
                                            "BankingInfo": "string",
                                            "PaymentTerms": "string",
                                            "Address1": "string",
                                            "Address2": "string",
                                            "Address3": "string",
                                            "Address4": "string",
                                            "Locality": "string",
                                            "Region": "string",
                                            "PostalCode": "string",
                                            "Country": "string",
                                            "Coordinates": "string",
                                            "IsActive": true,
                                            "CreatedByID": 0,
                                            "CurrentStateID": 0,
                                            "FxSupplierID": "00000000-0000-0000-0000-000000000000",
                                            "IsTravelServiceProvider": true,
                                            "CompanyID": 0,
                                            "CategoryID1": 0,
                                            "CategoryID2": 0,
                                            "CategoryID3": 0,
                                            "ApprovalID": 0,
                                            "IsInvoiceLink": true,
                                            "CurrencyID": 0,
                                            "TaxRateID": 0,
                                            "POEmail": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Suppliers"
                ],
                "summary": "Supplier create",
                "description": "Creates the given Supplier entity <br />\r\nquery parameter: \"currentState\" will create the Supplier in Fraxion as either \"Create\"(default) or Approved. depending on the parameter added.",
                "operationId": "Suppliers_Post",
                "parameters": [
                    {
                        "name": "currentState",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The entity to post",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Supplier"
                            },
                            "example": {
                                "CustomColumnList": [
                                    {
                                        "Name": "string",
                                        "DataType": 0,
                                        "MaxLength": 0,
                                        "Required": true,
                                        "Label": "string",
                                        "Description": "string",
                                        "ControlType": 0,
                                        "ReadOnly": true,
                                        "Colspan": 0,
                                        "CtrlColspan": 0,
                                        "DefaultValue": {},
                                        "IsDisplayed": true,
                                        "LookupID": 0,
                                        "BuiltinID": 0,
                                        "LookupValue": "string",
                                        "Value": {}
                                    }
                                ],
                                "SupplierID": 0,
                                "TenantID": 0,
                                "Code": "string",
                                "Name": "string",
                                "Contact": "string",
                                "PhoneNumber": "string",
                                "FaxNumber": "string",
                                "Email": "string",
                                "RegistrationNumber": "string",
                                "TaxRegistrationNumber": "string",
                                "BankAccountNumber": "string",
                                "BankingInfo": "string",
                                "PaymentTerms": "string",
                                "Address1": "string",
                                "Address2": "string",
                                "Address3": "string",
                                "Address4": "string",
                                "Locality": "string",
                                "Region": "string",
                                "PostalCode": "string",
                                "Country": "string",
                                "Coordinates": "string",
                                "IsActive": true,
                                "CreatedByID": 0,
                                "CurrentStateID": 0,
                                "FxSupplierID": "00000000-0000-0000-0000-000000000000",
                                "IsTravelServiceProvider": true,
                                "CompanyID": 0,
                                "CategoryID1": 0,
                                "CategoryID2": 0,
                                "CategoryID3": 0,
                                "ApprovalID": 0,
                                "IsInvoiceLink": true,
                                "CurrencyID": 0,
                                "TaxRateID": 0,
                                "POEmail": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[Supplier]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "CustomColumnList": [
                                                {
                                                    "Name": "string",
                                                    "DataType": 0,
                                                    "MaxLength": 0,
                                                    "Required": true,
                                                    "Label": "string",
                                                    "Description": "string",
                                                    "ControlType": 0,
                                                    "ReadOnly": true,
                                                    "Colspan": 0,
                                                    "CtrlColspan": 0,
                                                    "DefaultValue": {},
                                                    "IsDisplayed": true,
                                                    "LookupID": 0,
                                                    "BuiltinID": 0,
                                                    "LookupValue": "string",
                                                    "Value": {}
                                                }
                                            ],
                                            "SupplierID": 0,
                                            "TenantID": 0,
                                            "Code": "string",
                                            "Name": "string",
                                            "Contact": "string",
                                            "PhoneNumber": "string",
                                            "FaxNumber": "string",
                                            "Email": "string",
                                            "RegistrationNumber": "string",
                                            "TaxRegistrationNumber": "string",
                                            "BankAccountNumber": "string",
                                            "BankingInfo": "string",
                                            "PaymentTerms": "string",
                                            "Address1": "string",
                                            "Address2": "string",
                                            "Address3": "string",
                                            "Address4": "string",
                                            "Locality": "string",
                                            "Region": "string",
                                            "PostalCode": "string",
                                            "Country": "string",
                                            "Coordinates": "string",
                                            "IsActive": true,
                                            "CreatedByID": 0,
                                            "CurrentStateID": 0,
                                            "FxSupplierID": "00000000-0000-0000-0000-000000000000",
                                            "IsTravelServiceProvider": true,
                                            "CompanyID": 0,
                                            "CategoryID1": 0,
                                            "CategoryID2": 0,
                                            "CategoryID3": 0,
                                            "ApprovalID": 0,
                                            "IsInvoiceLink": true,
                                            "CurrencyID": 0,
                                            "TaxRateID": 0,
                                            "POEmail": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Suppliers({SupplierID})": {
            "get": {
                "tags": [
                    "Suppliers"
                ],
                "summary": "Supplier entity",
                "description": "Returns a single supplier entity",
                "operationId": "Suppliers_Get2BySupplierid",
                "parameters": [
                    {
                        "name": "SupplierID",
                        "in": "path",
                        "description": "Format - int64. key: SupplierID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[Supplier]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "CustomColumnList": [
                                                {
                                                    "Name": "string",
                                                    "DataType": 0,
                                                    "MaxLength": 0,
                                                    "Required": true,
                                                    "Label": "string",
                                                    "Description": "string",
                                                    "ControlType": 0,
                                                    "ReadOnly": true,
                                                    "Colspan": 0,
                                                    "CtrlColspan": 0,
                                                    "DefaultValue": {},
                                                    "IsDisplayed": true,
                                                    "LookupID": 0,
                                                    "BuiltinID": 0,
                                                    "LookupValue": "string",
                                                    "Value": {}
                                                }
                                            ],
                                            "SupplierID": 0,
                                            "TenantID": 0,
                                            "Code": "string",
                                            "Name": "string",
                                            "Contact": "string",
                                            "PhoneNumber": "string",
                                            "FaxNumber": "string",
                                            "Email": "string",
                                            "RegistrationNumber": "string",
                                            "TaxRegistrationNumber": "string",
                                            "BankAccountNumber": "string",
                                            "BankingInfo": "string",
                                            "PaymentTerms": "string",
                                            "Address1": "string",
                                            "Address2": "string",
                                            "Address3": "string",
                                            "Address4": "string",
                                            "Locality": "string",
                                            "Region": "string",
                                            "PostalCode": "string",
                                            "Country": "string",
                                            "Coordinates": "string",
                                            "IsActive": true,
                                            "CreatedByID": 0,
                                            "CurrentStateID": 0,
                                            "FxSupplierID": "00000000-0000-0000-0000-000000000000",
                                            "IsTravelServiceProvider": true,
                                            "CompanyID": 0,
                                            "CategoryID1": 0,
                                            "CategoryID2": 0,
                                            "CategoryID3": 0,
                                            "ApprovalID": 0,
                                            "IsInvoiceLink": true,
                                            "CurrencyID": 0,
                                            "TaxRateID": 0,
                                            "POEmail": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Suppliers"
                ],
                "summary": "Delete entity in EntitySet Suppliers",
                "description": "Delete entity in EntitySet Suppliers",
                "operationId": "Suppliers_DeleteBySupplierid",
                "parameters": [
                    {
                        "name": "SupplierID",
                        "in": "path",
                        "description": "Format - int64. key: SupplierID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "If-Match header",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "put": {
                "tags": [
                    "Suppliers"
                ],
                "summary": "Supplier update",
                "description": "Updates the given Supplier entity",
                "operationId": "Suppliers_PutBySupplierid",
                "parameters": [
                    {
                        "name": "SupplierID",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "userAction",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Supplier"
                            },
                            "example": {
                                "CustomColumnList": [
                                    {
                                        "Name": "string",
                                        "DataType": 0,
                                        "MaxLength": 0,
                                        "Required": true,
                                        "Label": "string",
                                        "Description": "string",
                                        "ControlType": 0,
                                        "ReadOnly": true,
                                        "Colspan": 0,
                                        "CtrlColspan": 0,
                                        "DefaultValue": {},
                                        "IsDisplayed": true,
                                        "LookupID": 0,
                                        "BuiltinID": 0,
                                        "LookupValue": "string",
                                        "Value": {}
                                    }
                                ],
                                "SupplierID": 0,
                                "TenantID": 0,
                                "Code": "string",
                                "Name": "string",
                                "Contact": "string",
                                "PhoneNumber": "string",
                                "FaxNumber": "string",
                                "Email": "string",
                                "RegistrationNumber": "string",
                                "TaxRegistrationNumber": "string",
                                "BankAccountNumber": "string",
                                "BankingInfo": "string",
                                "PaymentTerms": "string",
                                "Address1": "string",
                                "Address2": "string",
                                "Address3": "string",
                                "Address4": "string",
                                "Locality": "string",
                                "Region": "string",
                                "PostalCode": "string",
                                "Country": "string",
                                "Coordinates": "string",
                                "IsActive": true,
                                "CreatedByID": 0,
                                "CurrentStateID": 0,
                                "FxSupplierID": "00000000-0000-0000-0000-000000000000",
                                "IsTravelServiceProvider": true,
                                "CompanyID": 0,
                                "CategoryID1": 0,
                                "CategoryID2": 0,
                                "CategoryID3": 0,
                                "ApprovalID": 0,
                                "IsInvoiceLink": true,
                                "CurrencyID": 0,
                                "TaxRateID": 0,
                                "POEmail": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[Supplier]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "CustomColumnList": [
                                                {
                                                    "Name": "string",
                                                    "DataType": 0,
                                                    "MaxLength": 0,
                                                    "Required": true,
                                                    "Label": "string",
                                                    "Description": "string",
                                                    "ControlType": 0,
                                                    "ReadOnly": true,
                                                    "Colspan": 0,
                                                    "CtrlColspan": 0,
                                                    "DefaultValue": {},
                                                    "IsDisplayed": true,
                                                    "LookupID": 0,
                                                    "BuiltinID": 0,
                                                    "LookupValue": "string",
                                                    "Value": {}
                                                }
                                            ],
                                            "SupplierID": 0,
                                            "TenantID": 0,
                                            "Code": "string",
                                            "Name": "string",
                                            "Contact": "string",
                                            "PhoneNumber": "string",
                                            "FaxNumber": "string",
                                            "Email": "string",
                                            "RegistrationNumber": "string",
                                            "TaxRegistrationNumber": "string",
                                            "BankAccountNumber": "string",
                                            "BankingInfo": "string",
                                            "PaymentTerms": "string",
                                            "Address1": "string",
                                            "Address2": "string",
                                            "Address3": "string",
                                            "Address4": "string",
                                            "Locality": "string",
                                            "Region": "string",
                                            "PostalCode": "string",
                                            "Country": "string",
                                            "Coordinates": "string",
                                            "IsActive": true,
                                            "CreatedByID": 0,
                                            "CurrentStateID": 0,
                                            "FxSupplierID": "00000000-0000-0000-0000-000000000000",
                                            "IsTravelServiceProvider": true,
                                            "CompanyID": 0,
                                            "CategoryID1": 0,
                                            "CategoryID2": 0,
                                            "CategoryID3": 0,
                                            "ApprovalID": 0,
                                            "IsInvoiceLink": true,
                                            "CurrencyID": 0,
                                            "TaxRateID": 0,
                                            "POEmail": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Suppliers/Metadata": {
            "get": {
                "tags": [
                    "Suppliers"
                ],
                "summary": "Returns the set of field labels and help texts",
                "description": "cultureCode: en-US, en-GB, en-ZA, en-CA, en-AU, af-ZA, de-DE or xh-ZA etc.",
                "operationId": "Suppliers_GetMetadata",
                "parameters": [
                    {
                        "name": "cultureCode",
                        "in": "query",
                        "description": "If not provided, the default value is en-US",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FieldMetadataType"
                                },
                                "example": {
                                    "FieldID": "string",
                                    "Label": "string",
                                    "HelpText": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/TaxRates": {
            "get": {
                "tags": [
                    "TaxRates"
                ],
                "summary": "Tax Rates collection",
                "description": "Returns the entity set of tax rates",
                "operationId": "TaxRates_Get",
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "CompanyID",
                        "in": "query",
                        "description": "Format - int64.",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[TaxRate]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "TaxRateID": 0,
                                            "TenantID": 0,
                                            "Code": "string",
                                            "Name": "string",
                                            "Value": 0,
                                            "IsDefault": true,
                                            "IsActive": true
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "TaxRates"
                ],
                "summary": "Tax Rate create",
                "description": "Creates the given Tax Rate entity",
                "operationId": "TaxRates_Post",
                "requestBody": {
                    "description": "The entity to post",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaxRate"
                            },
                            "example": {
                                "TaxRateID": 0,
                                "TenantID": 0,
                                "Code": "string",
                                "Name": "string",
                                "Value": 0,
                                "IsDefault": true,
                                "IsActive": true
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[TaxRate]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "TaxRateID": 0,
                                            "TenantID": 0,
                                            "Code": "string",
                                            "Name": "string",
                                            "Value": 0,
                                            "IsDefault": true,
                                            "IsActive": true
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/TaxRates/Metadata": {
            "get": {
                "tags": [
                    "TaxRates"
                ],
                "summary": "Returns the set of field labels and help texts",
                "description": "cultureCode: en-US, en-GB, en-ZA, en-CA, en-AU, af-ZA, de-DE or xh-ZA etc.",
                "operationId": "TaxRates_GetMetadata",
                "parameters": [
                    {
                        "name": "cultureCode",
                        "in": "query",
                        "description": "If not provided, the default value is en-US",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FieldMetadataType"
                                },
                                "example": {
                                    "FieldID": "string",
                                    "Label": "string",
                                    "HelpText": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/TaxRates/Default": {
            "get": {
                "tags": [
                    "TaxRates"
                ],
                "summary": "Tax Rate entity",
                "description": "Returns the default Tax Rate based on the parameters provided",
                "operationId": "TaxRates_Default",
                "parameters": [
                    {
                        "name": "LocationID",
                        "in": "query",
                        "description": "Format - int64.",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "SupplierID",
                        "in": "query",
                        "description": "Format - int64.",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "CompanyID",
                        "in": "query",
                        "description": "Format - int64.",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[TaxRate]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "TaxRateID": 0,
                                            "TenantID": 0,
                                            "Code": "string",
                                            "Name": "string",
                                            "Value": 0,
                                            "IsDefault": true,
                                            "IsActive": true
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Invoices({InvoiceID})/ErpUpdate": {
            "put": {
                "tags": [
                    "Invoices"
                ],
                "summary": "ERP Update - ID",
                "description": "Updates the given Invoice entity with the ERP Parameters",
                "operationId": "Invoices_ErpUpdate2ByInvoiceid",
                "parameters": [
                    {
                        "name": "InvoiceID",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "ErpRef",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ErpMessage",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "IsSuccess",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/Invoices/ErpUpdate": {
            "put": {
                "tags": [
                    "Invoices"
                ],
                "summary": "ERP Update - Ref's",
                "description": "Updates the given Invoice entity with the ERP Parameters",
                "operationId": "Invoices_ErpUpdate",
                "parameters": [
                    {
                        "name": "FraxionRef",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SupplierCode",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "CompanyCode",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ErpRef",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ErpMessage",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "IsSuccess",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/Invoices/SetExport": {
            "post": {
                "tags": [
                    "Invoices"
                ],
                "summary": "Set Invoice Export",
                "description": "Sets the given Invoices to Exported.",
                "operationId": "Invoices_SetExport",
                "requestBody": {
                    "description": "SetExport action parameters",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Parameters-9"
                            },
                            "example": {
                                "InvoiceIDs": [
                                    0
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/Companies/Default": {
            "get": {
                "tags": [
                    "Companies"
                ],
                "summary": "Company entity",
                "description": "Returns the default Company for the current user",
                "operationId": "Companies_Default",
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[Company]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "CompanyID": 0,
                                            "TenantID": 0,
                                            "Code": "string",
                                            "Name": "string",
                                            "RegistrationNumber": "string",
                                            "TaxRegistrationNumber": "string",
                                            "POReferenceMask": "string",
                                            "IsActive": true,
                                            "CurrencyID": 0,
                                            "Terms": "string",
                                            "POHasAllocation": true,
                                            "POHasDistributionList": true,
                                            "IsInvoiceLink": 0,
                                            "TaxRateID": 0,
                                            "PORevisionMask": "string",
                                            "POTemplateID": 0
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/FinancialPeriods({FinancialPeriodID})": {
            "get": {
                "tags": [
                    "FinancialPeriods"
                ],
                "summary": "Financial Period entity",
                "description": "Returns a single Financial Period entity",
                "operationId": "FinancialPeriods_GetByFinancialperiodid",
                "parameters": [
                    {
                        "name": "FinancialPeriodID",
                        "in": "path",
                        "description": "Format - int64. key: FinancialPeriodID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[FinancialPeriod]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "FinancialPeriodID": 0,
                                            "TenantID": 0,
                                            "FinancialYearID": 0,
                                            "Description": "string",
                                            "PeriodNumber": 0,
                                            "StartDate": "string",
                                            "EndDate": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "FinancialPeriods"
                ],
                "summary": "Financial Period Delete",
                "description": "Deletes the Financial Period",
                "operationId": "FinancialPeriods_DeleteByFinancialperiodid",
                "parameters": [
                    {
                        "name": "FinancialPeriodID",
                        "in": "path",
                        "description": "Format - int64. key: FinancialPeriodID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "If-Match header",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "put": {
                "tags": [
                    "FinancialPeriods"
                ],
                "summary": "Financial Period update",
                "description": "Updates the given Financial Period entity",
                "operationId": "FinancialPeriods_PutByFinancialperiodid",
                "parameters": [
                    {
                        "name": "FinancialPeriodID",
                        "in": "path",
                        "description": "Format - int64. key: FinancialPeriodID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The entity to put",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FinancialPeriod"
                            },
                            "example": {
                                "FinancialPeriodID": 0,
                                "TenantID": 0,
                                "FinancialYearID": 0,
                                "Description": "string",
                                "PeriodNumber": 0,
                                "StartDate": "string",
                                "EndDate": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[FinancialPeriod]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "FinancialPeriodID": 0,
                                            "TenantID": 0,
                                            "FinancialYearID": 0,
                                            "Description": "string",
                                            "PeriodNumber": 0,
                                            "StartDate": "string",
                                            "EndDate": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/FinancialYears({FinancialYearID})": {
            "get": {
                "tags": [
                    "FinancialYears"
                ],
                "summary": "Financial Year entity",
                "description": "Returns a single Financial Year entity",
                "operationId": "FinancialYears_GetByFinancialyearid",
                "parameters": [
                    {
                        "name": "FinancialYearID",
                        "in": "path",
                        "description": "Format - int64. key: FinancialYearID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[FinancialYear]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "FinancialYearID": 0,
                                            "TenantID": 0,
                                            "Description": "string",
                                            "IsActive": true,
                                            "InitialisationFinancialYearID": 0
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "FinancialYears"
                ],
                "summary": "Financial Year Delete",
                "description": "Deletes the Financial Year",
                "operationId": "FinancialYears_DeleteByFinancialyearid",
                "parameters": [
                    {
                        "name": "FinancialYearID",
                        "in": "path",
                        "description": "Format - int64. key: FinancialYearID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "If-Match header",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "put": {
                "tags": [
                    "FinancialYears"
                ],
                "summary": "Financial Year update",
                "description": "Updates the given Financial Year entity",
                "operationId": "FinancialYears_PutByFinancialyearid",
                "parameters": [
                    {
                        "name": "FinancialYearID",
                        "in": "path",
                        "description": "Format - int64. key: FinancialYearID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The entity to put",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FinancialYear"
                            },
                            "example": {
                                "FinancialYearID": 0,
                                "TenantID": 0,
                                "Description": "string",
                                "IsActive": true,
                                "InitialisationFinancialYearID": 0
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[FinancialYear]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "FinancialYearID": 0,
                                            "TenantID": 0,
                                            "Description": "string",
                                            "IsActive": true,
                                            "InitialisationFinancialYearID": 0
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/LookupItems({LookupItemID})": {
            "delete": {
                "tags": [
                    "LookupItems"
                ],
                "summary": "Lookup Item Delete",
                "description": "Deletes the Lookup Item",
                "operationId": "LookupItems_DeleteByLookupitemid",
                "parameters": [
                    {
                        "name": "LookupItemID",
                        "in": "path",
                        "description": "Format - int64. key: LookupItemID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "If-Match header",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "put": {
                "tags": [
                    "LookupItems"
                ],
                "summary": "Lookup Item update",
                "description": "Updates the given Lookup Item entity",
                "operationId": "LookupItems_PutByLookupitemid",
                "parameters": [
                    {
                        "name": "LookupItemID",
                        "in": "path",
                        "description": "Format - int64. key: LookupItemID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The entity to put",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LookupItem"
                            },
                            "example": {
                                "LookupItemID": 0,
                                "TenantID": 0,
                                "LookupID": 0,
                                "Value": "string",
                                "FilterByCompanyID": 0,
                                "FilterByLookupItemID": 0,
                                "IsActive": true,
                                "Custom1": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[LookupItem]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "LookupItemID": 0,
                                            "TenantID": 0,
                                            "LookupID": 0,
                                            "Value": "string",
                                            "FilterByCompanyID": 0,
                                            "FilterByLookupItemID": 0,
                                            "IsActive": true,
                                            "Custom1": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/TaxRates({TaxRateID})": {
            "put": {
                "tags": [
                    "TaxRates"
                ],
                "summary": "Tax Rate update",
                "description": "Updates the given Tax Rate entity",
                "operationId": "TaxRates_PutByTaxrateid",
                "parameters": [
                    {
                        "name": "TaxRateID",
                        "in": "path",
                        "description": "Format - int64. key: TaxRateID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The entity to put",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaxRate"
                            },
                            "example": {
                                "TaxRateID": 0,
                                "TenantID": 0,
                                "Code": "string",
                                "Name": "string",
                                "Value": 0,
                                "IsDefault": true,
                                "IsActive": true
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[TaxRate]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "TaxRateID": 0,
                                            "TenantID": 0,
                                            "Code": "string",
                                            "Name": "string",
                                            "Value": 0,
                                            "IsDefault": true,
                                            "IsActive": true
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "TaxRates"
                ],
                "summary": "Tax Rate Delete",
                "description": "Deletes the Tax Rate",
                "operationId": "TaxRates_DeleteByTaxrateid",
                "parameters": [
                    {
                        "name": "TaxRateID",
                        "in": "path",
                        "description": "Format - int64. key: TaxRateID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "If-Match header",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "get": {
                "tags": [
                    "TaxRates"
                ],
                "summary": "Tax Rate entity",
                "description": "Returns a single tax rate entity",
                "operationId": "TaxRates_Get2ByTaxrateid",
                "parameters": [
                    {
                        "name": "TaxRateID",
                        "in": "path",
                        "description": "Format - int64. key: TaxRateID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[TaxRate]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "TaxRateID": 0,
                                            "TenantID": 0,
                                            "Code": "string",
                                            "Name": "string",
                                            "Value": 0,
                                            "IsDefault": true,
                                            "IsActive": true
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/$metadata": {
            "get": {
                "tags": [
                    "Info"
                ],
                "summary": "api metadata",
                "description": "api metadata",
                "operationId": "metadata_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Api-metadataGet200ApplicationXmlResponse"
                                },
                                "example": "<Api-metadataGet200ApplicationXmlResponse />"
                            }
                        }
                    }
                }
            }
        },
        "/api/Budgets": {
            "get": {
                "tags": [
                    "Budgets"
                ],
                "summary": "Budget Get",
                "description": "Returns the entity set of companies",
                "operationId": "Budgets_Get",
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[BudgetExtended]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "BudgetID": 0,
                                            "TenantID": 0,
                                            "GLAccountID": 0,
                                            "GLSegmentID": 0,
                                            "FinancialPeriodID": 0,
                                            "Value": 0,
                                            "ActualSpend": 0,
                                            "CompanyCode": "string",
                                            "CompanyName": "string",
                                            "PeriodNumber": 0,
                                            "PeriodDescription": "string",
                                            "StructureName": "string",
                                            "StructureCode": "string",
                                            "StructureFullName": "string",
                                            "FinancialYear": "string",
                                            "FinancialYearID": 0,
                                            "UserAction": "string",
                                            "ImportStatus": "string",
                                            "Note": "string",
                                            "StartDate": "string",
                                            "EndDate": "string",
                                            "LastUpdated": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Budgets"
                ],
                "summary": "Budget Post",
                "description": "Post a single BudgetExtended object",
                "operationId": "Budgets_Post",
                "parameters": [
                    {
                        "name": "Source",
                        "in": "query",
                        "description": "String describing the soure application for budget history entries",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The entity to post",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BudgetExtended"
                            },
                            "example": {
                                "BudgetID": 0,
                                "TenantID": 0,
                                "GLAccountID": 0,
                                "GLSegmentID": 0,
                                "FinancialPeriodID": 0,
                                "Value": 0,
                                "ActualSpend": 0,
                                "CompanyCode": "string",
                                "CompanyName": "string",
                                "PeriodNumber": 0,
                                "PeriodDescription": "string",
                                "StructureName": "string",
                                "StructureCode": "string",
                                "StructureFullName": "string",
                                "FinancialYear": "string",
                                "FinancialYearID": 0,
                                "UserAction": "string",
                                "ImportStatus": "string",
                                "Note": "string",
                                "StartDate": "string",
                                "EndDate": "string",
                                "LastUpdated": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[BudgetExtended]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "BudgetID": 0,
                                            "TenantID": 0,
                                            "GLAccountID": 0,
                                            "GLSegmentID": 0,
                                            "FinancialPeriodID": 0,
                                            "Value": 0,
                                            "ActualSpend": 0,
                                            "CompanyCode": "string",
                                            "CompanyName": "string",
                                            "PeriodNumber": 0,
                                            "PeriodDescription": "string",
                                            "StructureName": "string",
                                            "StructureCode": "string",
                                            "StructureFullName": "string",
                                            "FinancialYear": "string",
                                            "FinancialYearID": 0,
                                            "UserAction": "string",
                                            "ImportStatus": "string",
                                            "Note": "string",
                                            "StartDate": "string",
                                            "EndDate": "string",
                                            "LastUpdated": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Budgets({BudgetID})": {
            "get": {
                "tags": [
                    "Budgets"
                ],
                "summary": "Budgets Get(BudgetID)",
                "description": "Lookup both Budget and Actual Spend of the entry by BudgetID",
                "operationId": "Budgets_GetByBudgetid",
                "parameters": [
                    {
                        "name": "BudgetID",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[BudgetExtended]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "BudgetID": 0,
                                            "TenantID": 0,
                                            "GLAccountID": 0,
                                            "GLSegmentID": 0,
                                            "FinancialPeriodID": 0,
                                            "Value": 0,
                                            "ActualSpend": 0,
                                            "CompanyCode": "string",
                                            "CompanyName": "string",
                                            "PeriodNumber": 0,
                                            "PeriodDescription": "string",
                                            "StructureName": "string",
                                            "StructureCode": "string",
                                            "StructureFullName": "string",
                                            "FinancialYear": "string",
                                            "FinancialYearID": 0,
                                            "UserAction": "string",
                                            "ImportStatus": "string",
                                            "Note": "string",
                                            "StartDate": "string",
                                            "EndDate": "string",
                                            "LastUpdated": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Budgets"
                ],
                "summary": "Budgets Delete",
                "description": "Deletes all budgets based on the BudgetID",
                "operationId": "Budgets_DeleteByBudgetid",
                "parameters": [
                    {
                        "name": "BudgetID",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "If-Match header",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/Budgets/GetActual": {
            "get": {
                "tags": [
                    "Budgets"
                ],
                "summary": "Budgets GetActual",
                "description": "Returns the set of Actual spend for specific StructureName, StructureCode, FinancialYear, and CompanyCode (If applicable)",
                "operationId": "Budgets_GetActual",
                "parameters": [
                    {
                        "name": "StructureName",
                        "in": "query",
                        "description": "Structure Name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "StructureCode",
                        "in": "query",
                        "description": "Structure Code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "FinancialYear",
                        "in": "query",
                        "description": "Financial Year",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "CompanyCode",
                        "in": "query",
                        "description": "Company Code",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "PeriodNumber",
                        "in": "query",
                        "description": "Format - int32. Period Number",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[BudgetResponse]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "StructureName": "string",
                                            "CompanyCode": "string",
                                            "CompanyName": "string",
                                            "FinancialYear": "string",
                                            "StructureFullName": "string",
                                            "StructureCode": "string",
                                            "SegmentCode_01": "string",
                                            "SegmentCode_02": "string",
                                            "SegmentCode_03": "string",
                                            "SegmentCode_04": "string",
                                            "SegmentCode_05": "string",
                                            "SegmentCode_06": "string",
                                            "SegmentCode_07": "string",
                                            "SegmentCode_08": "string",
                                            "SegmentCode_09": "string",
                                            "SegmentCode_10": "string",
                                            "SegmentCode_11": "string",
                                            "SegmentCode_12": "string",
                                            "SegmentName_01": "string",
                                            "SegmentName_02": "string",
                                            "SegmentName_03": "string",
                                            "SegmentName_04": "string",
                                            "SegmentName_05": "string",
                                            "SegmentName_06": "string",
                                            "SegmentName_07": "string",
                                            "SegmentName_08": "string",
                                            "SegmentName_09": "string",
                                            "SegmentName_10": "string",
                                            "SegmentName_11": "string",
                                            "SegmentName_12": "string",
                                            "Periods": [
                                                {
                                                    "PeriodNumber": 0,
                                                    "PeriodDescription": "string",
                                                    "PeriodValue": 0,
                                                    "StartDate": "string",
                                                    "EndDate": "string",
                                                    "UserAction": "string",
                                                    "ImportStatus": "string"
                                                }
                                            ],
                                            "UserAction": "string",
                                            "ImportStatus": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Budgets/GetBudget": {
            "get": {
                "tags": [
                    "Budgets"
                ],
                "summary": "Budgets GetBudget",
                "description": "Returns the single set of Budget Values specific StructureName, StructureCode, FinancialYear, and CompanyCode (If applicable)",
                "operationId": "Budgets_GetBudget",
                "parameters": [
                    {
                        "name": "StructureName",
                        "in": "query",
                        "description": "Structure Name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "StructureCode",
                        "in": "query",
                        "description": "Structure Code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "FinancialYear",
                        "in": "query",
                        "description": "Financial Year",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "CompanyCode",
                        "in": "query",
                        "description": "Company Code",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "PeriodNumber",
                        "in": "query",
                        "description": "Format - int32. Period Number",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[BudgetResponse]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "StructureName": "string",
                                            "CompanyCode": "string",
                                            "CompanyName": "string",
                                            "FinancialYear": "string",
                                            "StructureFullName": "string",
                                            "StructureCode": "string",
                                            "SegmentCode_01": "string",
                                            "SegmentCode_02": "string",
                                            "SegmentCode_03": "string",
                                            "SegmentCode_04": "string",
                                            "SegmentCode_05": "string",
                                            "SegmentCode_06": "string",
                                            "SegmentCode_07": "string",
                                            "SegmentCode_08": "string",
                                            "SegmentCode_09": "string",
                                            "SegmentCode_10": "string",
                                            "SegmentCode_11": "string",
                                            "SegmentCode_12": "string",
                                            "SegmentName_01": "string",
                                            "SegmentName_02": "string",
                                            "SegmentName_03": "string",
                                            "SegmentName_04": "string",
                                            "SegmentName_05": "string",
                                            "SegmentName_06": "string",
                                            "SegmentName_07": "string",
                                            "SegmentName_08": "string",
                                            "SegmentName_09": "string",
                                            "SegmentName_10": "string",
                                            "SegmentName_11": "string",
                                            "SegmentName_12": "string",
                                            "Periods": [
                                                {
                                                    "PeriodNumber": 0,
                                                    "PeriodDescription": "string",
                                                    "PeriodValue": 0,
                                                    "StartDate": "string",
                                                    "EndDate": "string",
                                                    "UserAction": "string",
                                                    "ImportStatus": "string"
                                                }
                                            ],
                                            "UserAction": "string",
                                            "ImportStatus": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Budgets/PostActual": {
            "post": {
                "tags": [
                    "Budgets"
                ],
                "summary": "Budgets PostActual",
                "description": "Create Actual Spend records for a specific StructureName, StructureCode, FinancialYear, and CompanyCode (If applicable)",
                "operationId": "Budgets_PostActual",
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Single JSON object of BudgetImport",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BudgetImport"
                            },
                            "example": {
                                "StructureName": "string",
                                "CompanyCode": "string",
                                "FinancialYear": "string",
                                "StructureCode": "string",
                                "SegmentCode_01": "string",
                                "SegmentCode_02": "string",
                                "SegmentCode_03": "string",
                                "SegmentCode_04": "string",
                                "SegmentCode_05": "string",
                                "SegmentCode_06": "string",
                                "SegmentCode_07": "string",
                                "SegmentCode_08": "string",
                                "SegmentCode_09": "string",
                                "SegmentCode_10": "string",
                                "SegmentCode_11": "string",
                                "SegmentCode_12": "string",
                                "Periods": [
                                    {
                                        "PeriodNumber": 0,
                                        "PeriodDescription": "string",
                                        "PeriodValue": 0,
                                        "StartDate": "string",
                                        "EndDate": "string",
                                        "UserAction": "string",
                                        "ImportStatus": "string"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[BudgetResponse]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "StructureName": "string",
                                            "CompanyCode": "string",
                                            "CompanyName": "string",
                                            "FinancialYear": "string",
                                            "StructureFullName": "string",
                                            "StructureCode": "string",
                                            "SegmentCode_01": "string",
                                            "SegmentCode_02": "string",
                                            "SegmentCode_03": "string",
                                            "SegmentCode_04": "string",
                                            "SegmentCode_05": "string",
                                            "SegmentCode_06": "string",
                                            "SegmentCode_07": "string",
                                            "SegmentCode_08": "string",
                                            "SegmentCode_09": "string",
                                            "SegmentCode_10": "string",
                                            "SegmentCode_11": "string",
                                            "SegmentCode_12": "string",
                                            "SegmentName_01": "string",
                                            "SegmentName_02": "string",
                                            "SegmentName_03": "string",
                                            "SegmentName_04": "string",
                                            "SegmentName_05": "string",
                                            "SegmentName_06": "string",
                                            "SegmentName_07": "string",
                                            "SegmentName_08": "string",
                                            "SegmentName_09": "string",
                                            "SegmentName_10": "string",
                                            "SegmentName_11": "string",
                                            "SegmentName_12": "string",
                                            "Periods": [
                                                {
                                                    "PeriodNumber": 0,
                                                    "PeriodDescription": "string",
                                                    "PeriodValue": 0,
                                                    "StartDate": "string",
                                                    "EndDate": "string",
                                                    "UserAction": "string",
                                                    "ImportStatus": "string"
                                                }
                                            ],
                                            "UserAction": "string",
                                            "ImportStatus": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/CurrentStates({CurrentStateID})": {
            "get": {
                "tags": [
                    "CurrentStates"
                ],
                "summary": "Current States collection",
                "description": "Returns the entity set of Current States with custom states for the current Tenant \r\nand language resources based on the culturecode provided.",
                "operationId": "CurrentStates_GetByCurrentstateid",
                "parameters": [
                    {
                        "name": "CurrentStateID",
                        "in": "path",
                        "description": "Format - int64. key: CurrentStateID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "culturecode",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeExportPending",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[CurrentState]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "CurrentStateID": 0,
                                            "ResourceName": "string",
                                            "Description": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Budgets/GetActuals": {
            "get": {
                "tags": [
                    "Budgets"
                ],
                "summary": "Budgets GetActuals",
                "description": "Returns a collection containing Actual Spend Values",
                "operationId": "Budgets_GetActuals",
                "parameters": [
                    {
                        "name": "StructureName",
                        "in": "query",
                        "description": "Structure Name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "CompanyCode",
                        "in": "query",
                        "description": "Company Code",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[BudgetResponse]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "StructureName": "string",
                                            "CompanyCode": "string",
                                            "CompanyName": "string",
                                            "FinancialYear": "string",
                                            "StructureFullName": "string",
                                            "StructureCode": "string",
                                            "SegmentCode_01": "string",
                                            "SegmentCode_02": "string",
                                            "SegmentCode_03": "string",
                                            "SegmentCode_04": "string",
                                            "SegmentCode_05": "string",
                                            "SegmentCode_06": "string",
                                            "SegmentCode_07": "string",
                                            "SegmentCode_08": "string",
                                            "SegmentCode_09": "string",
                                            "SegmentCode_10": "string",
                                            "SegmentCode_11": "string",
                                            "SegmentCode_12": "string",
                                            "SegmentName_01": "string",
                                            "SegmentName_02": "string",
                                            "SegmentName_03": "string",
                                            "SegmentName_04": "string",
                                            "SegmentName_05": "string",
                                            "SegmentName_06": "string",
                                            "SegmentName_07": "string",
                                            "SegmentName_08": "string",
                                            "SegmentName_09": "string",
                                            "SegmentName_10": "string",
                                            "SegmentName_11": "string",
                                            "SegmentName_12": "string",
                                            "Periods": [
                                                {
                                                    "PeriodNumber": 0,
                                                    "PeriodDescription": "string",
                                                    "PeriodValue": 0,
                                                    "StartDate": "string",
                                                    "EndDate": "string",
                                                    "UserAction": "string",
                                                    "ImportStatus": "string"
                                                }
                                            ],
                                            "UserAction": "string",
                                            "ImportStatus": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Budgets/GetBudgets": {
            "get": {
                "tags": [
                    "Budgets"
                ],
                "summary": "Budgets GetBudgets",
                "description": "Returns a collection of Budget Values",
                "operationId": "Budgets_GetBudgets",
                "parameters": [
                    {
                        "name": "StructureName",
                        "in": "query",
                        "description": "Structure Name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "CompanyCode",
                        "in": "query",
                        "description": "Company Code",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[BudgetResponse]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "StructureName": "string",
                                            "CompanyCode": "string",
                                            "CompanyName": "string",
                                            "FinancialYear": "string",
                                            "StructureFullName": "string",
                                            "StructureCode": "string",
                                            "SegmentCode_01": "string",
                                            "SegmentCode_02": "string",
                                            "SegmentCode_03": "string",
                                            "SegmentCode_04": "string",
                                            "SegmentCode_05": "string",
                                            "SegmentCode_06": "string",
                                            "SegmentCode_07": "string",
                                            "SegmentCode_08": "string",
                                            "SegmentCode_09": "string",
                                            "SegmentCode_10": "string",
                                            "SegmentCode_11": "string",
                                            "SegmentCode_12": "string",
                                            "SegmentName_01": "string",
                                            "SegmentName_02": "string",
                                            "SegmentName_03": "string",
                                            "SegmentName_04": "string",
                                            "SegmentName_05": "string",
                                            "SegmentName_06": "string",
                                            "SegmentName_07": "string",
                                            "SegmentName_08": "string",
                                            "SegmentName_09": "string",
                                            "SegmentName_10": "string",
                                            "SegmentName_11": "string",
                                            "SegmentName_12": "string",
                                            "Periods": [
                                                {
                                                    "PeriodNumber": 0,
                                                    "PeriodDescription": "string",
                                                    "PeriodValue": 0,
                                                    "StartDate": "string",
                                                    "EndDate": "string",
                                                    "UserAction": "string",
                                                    "ImportStatus": "string"
                                                }
                                            ],
                                            "UserAction": "string",
                                            "ImportStatus": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Budgets/ActualBatch": {
            "post": {
                "tags": [
                    "Budgets"
                ],
                "summary": "Budgets ActualBatch",
                "description": "Creates the given Actual Spend entries from provided Batch",
                "operationId": "Budgets_ActualBatch",
                "requestBody": {
                    "description": "JSON Array of BudgetImport as Actuals containing an array of Period as Periods",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Parameters-1"
                            },
                            "example": {
                                "Actuals": [
                                    {
                                        "StructureName": "string",
                                        "CompanyCode": "string",
                                        "FinancialYear": "string",
                                        "StructureCode": "string",
                                        "SegmentCode_01": "string",
                                        "SegmentCode_02": "string",
                                        "SegmentCode_03": "string",
                                        "SegmentCode_04": "string",
                                        "SegmentCode_05": "string",
                                        "SegmentCode_06": "string",
                                        "SegmentCode_07": "string",
                                        "SegmentCode_08": "string",
                                        "SegmentCode_09": "string",
                                        "SegmentCode_10": "string",
                                        "SegmentCode_11": "string",
                                        "SegmentCode_12": "string",
                                        "Periods": [
                                            {
                                                "PeriodNumber": 0,
                                                "PeriodDescription": "string",
                                                "PeriodValue": 0,
                                                "StartDate": "string",
                                                "EndDate": "string",
                                                "UserAction": "string",
                                                "ImportStatus": "string"
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[BudgetResponse]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "StructureName": "string",
                                            "CompanyCode": "string",
                                            "CompanyName": "string",
                                            "FinancialYear": "string",
                                            "StructureFullName": "string",
                                            "StructureCode": "string",
                                            "SegmentCode_01": "string",
                                            "SegmentCode_02": "string",
                                            "SegmentCode_03": "string",
                                            "SegmentCode_04": "string",
                                            "SegmentCode_05": "string",
                                            "SegmentCode_06": "string",
                                            "SegmentCode_07": "string",
                                            "SegmentCode_08": "string",
                                            "SegmentCode_09": "string",
                                            "SegmentCode_10": "string",
                                            "SegmentCode_11": "string",
                                            "SegmentCode_12": "string",
                                            "SegmentName_01": "string",
                                            "SegmentName_02": "string",
                                            "SegmentName_03": "string",
                                            "SegmentName_04": "string",
                                            "SegmentName_05": "string",
                                            "SegmentName_06": "string",
                                            "SegmentName_07": "string",
                                            "SegmentName_08": "string",
                                            "SegmentName_09": "string",
                                            "SegmentName_10": "string",
                                            "SegmentName_11": "string",
                                            "SegmentName_12": "string",
                                            "Periods": [
                                                {
                                                    "PeriodNumber": 0,
                                                    "PeriodDescription": "string",
                                                    "PeriodValue": 0,
                                                    "StartDate": "string",
                                                    "EndDate": "string",
                                                    "UserAction": "string",
                                                    "ImportStatus": "string"
                                                }
                                            ],
                                            "UserAction": "string",
                                            "ImportStatus": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Budgets/BudgetBatch": {
            "post": {
                "tags": [
                    "Budgets"
                ],
                "summary": "Budgets BudgetBatch",
                "description": "Creates the given Budget entries from provided Batch",
                "operationId": "Budgets_BudgetBatch",
                "requestBody": {
                    "description": "JSON Array of BudgetImport as Budgets containing an array of Period as Periods",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Parameters-3"
                            },
                            "example": {
                                "Budgets": [
                                    {
                                        "StructureName": "string",
                                        "CompanyCode": "string",
                                        "FinancialYear": "string",
                                        "StructureCode": "string",
                                        "SegmentCode_01": "string",
                                        "SegmentCode_02": "string",
                                        "SegmentCode_03": "string",
                                        "SegmentCode_04": "string",
                                        "SegmentCode_05": "string",
                                        "SegmentCode_06": "string",
                                        "SegmentCode_07": "string",
                                        "SegmentCode_08": "string",
                                        "SegmentCode_09": "string",
                                        "SegmentCode_10": "string",
                                        "SegmentCode_11": "string",
                                        "SegmentCode_12": "string",
                                        "Periods": [
                                            {
                                                "PeriodNumber": 0,
                                                "PeriodDescription": "string",
                                                "PeriodValue": 0,
                                                "StartDate": "string",
                                                "EndDate": "string",
                                                "UserAction": "string",
                                                "ImportStatus": "string"
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[BudgetResponse]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "StructureName": "string",
                                            "CompanyCode": "string",
                                            "CompanyName": "string",
                                            "FinancialYear": "string",
                                            "StructureFullName": "string",
                                            "StructureCode": "string",
                                            "SegmentCode_01": "string",
                                            "SegmentCode_02": "string",
                                            "SegmentCode_03": "string",
                                            "SegmentCode_04": "string",
                                            "SegmentCode_05": "string",
                                            "SegmentCode_06": "string",
                                            "SegmentCode_07": "string",
                                            "SegmentCode_08": "string",
                                            "SegmentCode_09": "string",
                                            "SegmentCode_10": "string",
                                            "SegmentCode_11": "string",
                                            "SegmentCode_12": "string",
                                            "SegmentName_01": "string",
                                            "SegmentName_02": "string",
                                            "SegmentName_03": "string",
                                            "SegmentName_04": "string",
                                            "SegmentName_05": "string",
                                            "SegmentName_06": "string",
                                            "SegmentName_07": "string",
                                            "SegmentName_08": "string",
                                            "SegmentName_09": "string",
                                            "SegmentName_10": "string",
                                            "SegmentName_11": "string",
                                            "SegmentName_12": "string",
                                            "Periods": [
                                                {
                                                    "PeriodNumber": 0,
                                                    "PeriodDescription": "string",
                                                    "PeriodValue": 0,
                                                    "StartDate": "string",
                                                    "EndDate": "string",
                                                    "UserAction": "string",
                                                    "ImportStatus": "string"
                                                }
                                            ],
                                            "UserAction": "string",
                                            "ImportStatus": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Currencies/Batch": {
            "post": {
                "tags": [
                    "Currencies"
                ],
                "summary": "Import Currencies",
                "description": "Updates/Creates the given Currencies records from Batch <br /><br />\r\nCurrencyCode is the unique key and will be matched to the CurrencyCodes in the Fraxion system to determine an update or create <br /><br />",
                "operationId": "Currencies_Batch",
                "requestBody": {
                    "description": "Batch action parameters",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Parameters-5"
                            },
                            "example": {
                                "importCurrencies": [
                                    {
                                        "CurrencyCode": "string",
                                        "CurrencyName": "string",
                                        "IsActive": true
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[CurrencyResponse]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "CurrencyID": 0,
                                            "UserAction": "string",
                                            "ImportStatus": "string",
                                            "CurrencyCode": "string",
                                            "CurrencyName": "string",
                                            "IsActive": true
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/ExchangeRates/Batch": {
            "post": {
                "tags": [
                    "ExchangeRates"
                ],
                "summary": "Import Exchange Rates",
                "description": "Updates/Creates the given Exchange Rate records from Batch  <br /><br />\r\nSourceCurrencyCode, TargetCurrencyCode and Type combination is the unique key <br />\r\nand will be matched to the SourceCurrencyCode, TargetCurrencyCode and Type in the Fraxion system to determine an update or create<br /><br />\r\nparameter - defaultSourceCurrency would be used for any SourceCurrencyCode missing in the data provided in importExchangeRates. <br />\r\ndefaultSourceCurrency can be left blank. <br />\r\nparameter - defaultTargetCurrency would be used for any TargetCurrencyCode missing in the data provided in importExchangeRates. <br />\r\ndefaultTargetCurrency can be left blank. <br />",
                "operationId": "ExchangeRates_Batch",
                "parameters": [
                    {
                        "name": "defaultSourceCurrency",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "defaultTargetCurrency",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Batch action parameters",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Parameters-6"
                            },
                            "example": {
                                "importExchangeRates": [
                                    {
                                        "SourceCurrencyCode": "string",
                                        "TargetCurrencyCode": "string",
                                        "Type": "string",
                                        "Value": 0,
                                        "IsDefault": true,
                                        "IsActive": true
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[ExchangeRateResponse]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "ExchangeRateID": 0,
                                            "UserAction": "string",
                                            "ImportStatus": "string",
                                            "SourceCurrencyCode": "string",
                                            "TargetCurrencyCode": "string",
                                            "Type": "string",
                                            "Value": 0,
                                            "IsDefault": true,
                                            "IsActive": true
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/FinancialPeriods/Batch": {
            "post": {
                "tags": [
                    "FinancialPeriods"
                ],
                "summary": "Import Financial Periods",
                "description": "Updates/Creates the given Financial Periods records from Batch <br /><br />\r\nFinancialYearDescription and PeriodNumber combination is the unique key <br />\r\nand will be matched to the Financial Year and Period Number in the Fraxion system to determine an update or create <br /><br />\r\nparameter - defaultFinancialYear would be used for any FinancialYearDescription missing in the data provided in importExchangeRates. <br />\r\ndefaultFinancialYear can be left blank. <br />",
                "operationId": "FinancialPeriods_Batch",
                "parameters": [
                    {
                        "name": "defaultFinancialYear",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Batch action parameters",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Parameters-7"
                            },
                            "example": {
                                "importFinancialPeriods": [
                                    {
                                        "FinancialYearDescription": "string",
                                        "FinancialPeriodDescription": "string",
                                        "PeriodNumber": 0,
                                        "StartDate": "string",
                                        "EndDate": "string"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[FinancialPeriodResponse]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "FinancialPeriodID": 0,
                                            "UserAction": "string",
                                            "ImportStatus": "string",
                                            "FinancialYearDescription": "string",
                                            "FinancialPeriodDescription": "string",
                                            "PeriodNumber": 0,
                                            "StartDate": "string",
                                            "EndDate": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/FinancialYears/Batch": {
            "post": {
                "tags": [
                    "FinancialYears"
                ],
                "summary": "Import Financial Years",
                "description": "Updates/Creates the given Financial Years records from Batch  <br /><br />\r\nFinancialYearDescription combination is the unique key. <br />\r\nIt will be matched to the Financial Year Description in the Fraxion system to determine an update or create <br /><br />",
                "operationId": "FinancialYears_Batch",
                "requestBody": {
                    "description": "Batch action parameters",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Parameters-8"
                            },
                            "example": {
                                "importFinancialYears": [
                                    {
                                        "FinancialYearDescription": "string",
                                        "IsActive": true
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[FinancialYearResponse]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "FinancialYearID": 0,
                                            "UserAction": "string",
                                            "ImportStatus": "string",
                                            "FinancialYearDescription": "string",
                                            "IsActive": true
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/LookupItems/Batch": {
            "post": {
                "tags": [
                    "LookupItems"
                ],
                "summary": "Import LookupItems",
                "description": "Updates/Creates the given LookupItem records from Batch  <br /><br />\r\nLookupName and Value combination is the unique key <br />\r\nand will be matched to the Lookup Name and Lookup Item Value in the Fraxion system to determine an update or create <br /><br />\r\nCustom1 refers to any custom field for the Lookup itmes within a Lookup. <br />\r\nexample: Custom1 for Lookup Mileage Rate referes to the multiplier. <br />\r\nparameter - defaultLookup would be used for any LookupName missing in the data provided in importLookupItems. \r\ndefaultLookup can be left empty. <br />",
                "operationId": "LookupItems_Batch",
                "parameters": [
                    {
                        "name": "defaultLookup",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Batch action parameters",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Parameters-10"
                            },
                            "example": {
                                "importLookupItems": [
                                    {
                                        "LookupName": "string",
                                        "Value": "string",
                                        "Custom1": "string",
                                        "FilterByCompanyCode": "string",
                                        "FilterByLookupItemValue": "string",
                                        "FilterLookupName": "string",
                                        "IsActive": true
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[LookupItemResponse]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "LookupItemID": 0,
                                            "UserAction": "string",
                                            "ImportStatus": "string",
                                            "LookupName": "string",
                                            "Value": "string",
                                            "Custom1": "string",
                                            "FilterByCompanyCode": "string",
                                            "FilterByLookupItemValue": "string",
                                            "FilterLookupName": "string",
                                            "IsActive": true
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Segments": {
            "get": {
                "tags": [
                    "Segments"
                ],
                "summary": "Segments Get",
                "description": "Returns the entity set of Account Segments for a particular Segment Name by existing Account Segments based upon a Mask.",
                "operationId": "Segments_Get",
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "SegmentName",
                        "in": "query",
                        "description": "Segment Name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "CompanyCode",
                        "in": "query",
                        "description": "Company Code",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[SegmentImport]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "SegmentCode": "string",
                                            "Name": "string",
                                            "IsActive": true,
                                            "SegmentName": "string",
                                            "CompanyCode": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Segments"
                ],
                "summary": "Segments Post",
                "description": "Creates/Updates the given GL Segment\r\nPass the userAction to perform a workflow action",
                "operationId": "Segments_Post",
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "requestBody": {
                    "description": "SegmentImport parameter",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SegmentImport"
                            },
                            "example": {
                                "SegmentCode": "string",
                                "Name": "string",
                                "IsActive": true,
                                "SegmentName": "string",
                                "CompanyCode": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[SegmentResponse]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "UserAction": "string",
                                            "ImportStatus": "string",
                                            "SegmentCode": "string",
                                            "Name": "string",
                                            "IsActive": true,
                                            "SegmentName": "string",
                                            "CompanyCode": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Segments('{SegmentName}', '{SegmentCode}')": {
            "get": {
                "tags": [
                    "Segments"
                ],
                "summary": "Segments Get('SegmentName', 'SegmentCode')",
                "description": "Returns the entity set of Account Segments for a particular Segment Name by existing Account Segments based upon a Mask.",
                "operationId": "Segments_GetBySegmentnameAndSegmentcode",
                "parameters": [
                    {
                        "name": "SegmentName",
                        "in": "path",
                        "description": "Segment Name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SegmentCode",
                        "in": "path",
                        "description": "GL Segment Code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "CompanyCode",
                        "in": "query",
                        "description": "Company Code",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[SegmentImport]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "SegmentCode": "string",
                                            "Name": "string",
                                            "IsActive": true,
                                            "SegmentName": "string",
                                            "CompanyCode": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Segments"
                ],
                "summary": "Segments Put('SegmentName', 'SegmentCode')",
                "description": "Updates the IsActive flag and Name (Description) on a single Account Segments",
                "operationId": "Segments_PutBySegmentnameAndSegmentcode",
                "parameters": [
                    {
                        "name": "SegmentName",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SegmentCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SegmentImport"
                            },
                            "example": {
                                "SegmentCode": "string",
                                "Name": "string",
                                "IsActive": true,
                                "SegmentName": "string",
                                "CompanyCode": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[SegmentResponse]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "UserAction": "string",
                                            "ImportStatus": "string",
                                            "SegmentCode": "string",
                                            "Name": "string",
                                            "IsActive": true,
                                            "SegmentName": "string",
                                            "CompanyCode": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Segments"
                ],
                "summary": "Segments Delete('SegmentName', 'SegmentCode')",
                "description": "Removes Unused Account Segments",
                "operationId": "Segments_DeleteBySegmentnameAndSegmentcode",
                "parameters": [
                    {
                        "name": "SegmentName",
                        "in": "path",
                        "description": "Segment Name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SegmentCode",
                        "in": "path",
                        "description": "Segment Code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "CompanyCode",
                        "in": "query",
                        "description": "Company Code",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/Segments/Batch": {
            "post": {
                "tags": [
                    "Segments"
                ],
                "summary": "Segments Batch",
                "description": "Creates the given Segments entity from Batch",
                "operationId": "Segments_Batch",
                "requestBody": {
                    "description": "Batch action parameters",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Parameters-12"
                            },
                            "example": {
                                "Segments": [
                                    {
                                        "SegmentCode": "string",
                                        "Name": "string",
                                        "IsActive": true,
                                        "SegmentName": "string",
                                        "CompanyCode": "string"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[SegmentResponse]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "UserAction": "string",
                                            "ImportStatus": "string",
                                            "SegmentCode": "string",
                                            "Name": "string",
                                            "IsActive": true,
                                            "SegmentName": "string",
                                            "CompanyCode": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Structures": {
            "get": {
                "tags": [
                    "Structures"
                ],
                "summary": "Structures Get",
                "description": "Returns a set of Structure",
                "operationId": "Structures_Get",
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "StructureName",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "CompanyCode",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[StructureResponse]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "UserAction": "string",
                                            "ImportStatus": "string",
                                            "StructureName": "string",
                                            "StructureCode": "string",
                                            "CompanyCode": "string",
                                            "FullName": "string",
                                            "SegmentCode_01": "string",
                                            "Separator_01": "string",
                                            "SegmentCode_02": "string",
                                            "Separator_02": "string",
                                            "SegmentCode_03": "string",
                                            "Separator_03": "string",
                                            "SegmentCode_04": "string",
                                            "Separator_04": "string",
                                            "SegmentCode_05": "string",
                                            "Separator_05": "string",
                                            "SegmentCode_06": "string",
                                            "Separator_06": "string",
                                            "SegmentCode_07": "string",
                                            "Separator_07": "string",
                                            "SegmentCode_08": "string",
                                            "Separator_08": "string",
                                            "SegmentCode_09": "string",
                                            "Separator_09": "string",
                                            "SegmentCode_10": "string",
                                            "Separator_10": "string",
                                            "SegmentCode_11": "string",
                                            "Separator_11": "string",
                                            "SegmentCode_12": "string",
                                            "SegmentName_01": "string",
                                            "SegmentName_02": "string",
                                            "SegmentName_03": "string",
                                            "SegmentName_04": "string",
                                            "SegmentName_05": "string",
                                            "SegmentName_06": "string",
                                            "SegmentName_07": "string",
                                            "SegmentName_08": "string",
                                            "SegmentName_09": "string",
                                            "SegmentName_10": "string",
                                            "SegmentName_11": "string",
                                            "SegmentName_12": "string",
                                            "Name_01": "string",
                                            "Name_02": "string",
                                            "Name_03": "string",
                                            "Name_04": "string",
                                            "Name_05": "string",
                                            "Name_06": "string",
                                            "Name_07": "string",
                                            "Name_08": "string",
                                            "Name_09": "string",
                                            "Name_10": "string",
                                            "Name_11": "string",
                                            "Name_12": "string",
                                            "Segments": [
                                                {
                                                    "SegmentCode": "string",
                                                    "Name": "string",
                                                    "IsActive": true,
                                                    "SegmentName": "string",
                                                    "CompanyCode": "string"
                                                }
                                            ],
                                            "IsActive": true
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Structures"
                ],
                "summary": "Structures Post",
                "description": "Creates/Updates the given StructureName/StructureCode\r\nPass the userAction to perform a workflow action",
                "operationId": "Structures_Post",
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The entity to post",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StructureImport"
                            },
                            "example": {
                                "StructureName": "string",
                                "StructureCode": "string",
                                "CompanyCode": "string",
                                "FullName": "string",
                                "SegmentCode_01": "string",
                                "Separator_01": "string",
                                "SegmentCode_02": "string",
                                "Separator_02": "string",
                                "SegmentCode_03": "string",
                                "Separator_03": "string",
                                "SegmentCode_04": "string",
                                "Separator_04": "string",
                                "SegmentCode_05": "string",
                                "Separator_05": "string",
                                "SegmentCode_06": "string",
                                "Separator_06": "string",
                                "SegmentCode_07": "string",
                                "Separator_07": "string",
                                "SegmentCode_08": "string",
                                "Separator_08": "string",
                                "SegmentCode_09": "string",
                                "Separator_09": "string",
                                "SegmentCode_10": "string",
                                "Separator_10": "string",
                                "SegmentCode_11": "string",
                                "Separator_11": "string",
                                "SegmentCode_12": "string",
                                "SegmentName_01": "string",
                                "SegmentName_02": "string",
                                "SegmentName_03": "string",
                                "SegmentName_04": "string",
                                "SegmentName_05": "string",
                                "SegmentName_06": "string",
                                "SegmentName_07": "string",
                                "SegmentName_08": "string",
                                "SegmentName_09": "string",
                                "SegmentName_10": "string",
                                "SegmentName_11": "string",
                                "SegmentName_12": "string",
                                "Name_01": "string",
                                "Name_02": "string",
                                "Name_03": "string",
                                "Name_04": "string",
                                "Name_05": "string",
                                "Name_06": "string",
                                "Name_07": "string",
                                "Name_08": "string",
                                "Name_09": "string",
                                "Name_10": "string",
                                "Name_11": "string",
                                "Name_12": "string",
                                "Segments": [
                                    {
                                        "SegmentCode": "string",
                                        "Name": "string",
                                        "IsActive": true,
                                        "SegmentName": "string",
                                        "CompanyCode": "string"
                                    }
                                ],
                                "IsActive": true
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[StructureResponse]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "UserAction": "string",
                                            "ImportStatus": "string",
                                            "StructureName": "string",
                                            "StructureCode": "string",
                                            "CompanyCode": "string",
                                            "FullName": "string",
                                            "SegmentCode_01": "string",
                                            "Separator_01": "string",
                                            "SegmentCode_02": "string",
                                            "Separator_02": "string",
                                            "SegmentCode_03": "string",
                                            "Separator_03": "string",
                                            "SegmentCode_04": "string",
                                            "Separator_04": "string",
                                            "SegmentCode_05": "string",
                                            "Separator_05": "string",
                                            "SegmentCode_06": "string",
                                            "Separator_06": "string",
                                            "SegmentCode_07": "string",
                                            "Separator_07": "string",
                                            "SegmentCode_08": "string",
                                            "Separator_08": "string",
                                            "SegmentCode_09": "string",
                                            "Separator_09": "string",
                                            "SegmentCode_10": "string",
                                            "Separator_10": "string",
                                            "SegmentCode_11": "string",
                                            "Separator_11": "string",
                                            "SegmentCode_12": "string",
                                            "SegmentName_01": "string",
                                            "SegmentName_02": "string",
                                            "SegmentName_03": "string",
                                            "SegmentName_04": "string",
                                            "SegmentName_05": "string",
                                            "SegmentName_06": "string",
                                            "SegmentName_07": "string",
                                            "SegmentName_08": "string",
                                            "SegmentName_09": "string",
                                            "SegmentName_10": "string",
                                            "SegmentName_11": "string",
                                            "SegmentName_12": "string",
                                            "Name_01": "string",
                                            "Name_02": "string",
                                            "Name_03": "string",
                                            "Name_04": "string",
                                            "Name_05": "string",
                                            "Name_06": "string",
                                            "Name_07": "string",
                                            "Name_08": "string",
                                            "Name_09": "string",
                                            "Name_10": "string",
                                            "Name_11": "string",
                                            "Name_12": "string",
                                            "Segments": [
                                                {
                                                    "SegmentCode": "string",
                                                    "Name": "string",
                                                    "IsActive": true,
                                                    "SegmentName": "string",
                                                    "CompanyCode": "string"
                                                }
                                            ],
                                            "IsActive": true
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Structures('{StructureName}', '{StructureCode}')": {
            "get": {
                "tags": [
                    "Structures"
                ],
                "summary": "Structures Get(StructureName, StructureCode)",
                "description": "Returns a single Structure entity",
                "operationId": "Structures_GetByStructurenameAndStructurecode",
                "parameters": [
                    {
                        "name": "StructureName",
                        "in": "path",
                        "description": "Structure Name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "StructureCode",
                        "in": "path",
                        "description": "Account Code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "CompanyCode",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[StructureResponse]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "UserAction": "string",
                                            "ImportStatus": "string",
                                            "StructureName": "string",
                                            "StructureCode": "string",
                                            "CompanyCode": "string",
                                            "FullName": "string",
                                            "SegmentCode_01": "string",
                                            "Separator_01": "string",
                                            "SegmentCode_02": "string",
                                            "Separator_02": "string",
                                            "SegmentCode_03": "string",
                                            "Separator_03": "string",
                                            "SegmentCode_04": "string",
                                            "Separator_04": "string",
                                            "SegmentCode_05": "string",
                                            "Separator_05": "string",
                                            "SegmentCode_06": "string",
                                            "Separator_06": "string",
                                            "SegmentCode_07": "string",
                                            "Separator_07": "string",
                                            "SegmentCode_08": "string",
                                            "Separator_08": "string",
                                            "SegmentCode_09": "string",
                                            "Separator_09": "string",
                                            "SegmentCode_10": "string",
                                            "Separator_10": "string",
                                            "SegmentCode_11": "string",
                                            "Separator_11": "string",
                                            "SegmentCode_12": "string",
                                            "SegmentName_01": "string",
                                            "SegmentName_02": "string",
                                            "SegmentName_03": "string",
                                            "SegmentName_04": "string",
                                            "SegmentName_05": "string",
                                            "SegmentName_06": "string",
                                            "SegmentName_07": "string",
                                            "SegmentName_08": "string",
                                            "SegmentName_09": "string",
                                            "SegmentName_10": "string",
                                            "SegmentName_11": "string",
                                            "SegmentName_12": "string",
                                            "Name_01": "string",
                                            "Name_02": "string",
                                            "Name_03": "string",
                                            "Name_04": "string",
                                            "Name_05": "string",
                                            "Name_06": "string",
                                            "Name_07": "string",
                                            "Name_08": "string",
                                            "Name_09": "string",
                                            "Name_10": "string",
                                            "Name_11": "string",
                                            "Name_12": "string",
                                            "Segments": [
                                                {
                                                    "SegmentCode": "string",
                                                    "Name": "string",
                                                    "IsActive": true,
                                                    "SegmentName": "string",
                                                    "CompanyCode": "string"
                                                }
                                            ],
                                            "IsActive": true
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Structures"
                ],
                "summary": "Structures Put(StructureName, StructureCode)",
                "description": "Updates the IsActive flag on a single Structure",
                "operationId": "Structures_PutByStructurenameAndStructurecode",
                "parameters": [
                    {
                        "name": "StructureName",
                        "in": "path",
                        "description": "Structure Name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "StructureCode",
                        "in": "path",
                        "description": "Account Code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "CompanyCode",
                        "in": "query",
                        "description": "Company Code",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StructureImport"
                            },
                            "example": {
                                "StructureName": "string",
                                "StructureCode": "string",
                                "CompanyCode": "string",
                                "FullName": "string",
                                "SegmentCode_01": "string",
                                "Separator_01": "string",
                                "SegmentCode_02": "string",
                                "Separator_02": "string",
                                "SegmentCode_03": "string",
                                "Separator_03": "string",
                                "SegmentCode_04": "string",
                                "Separator_04": "string",
                                "SegmentCode_05": "string",
                                "Separator_05": "string",
                                "SegmentCode_06": "string",
                                "Separator_06": "string",
                                "SegmentCode_07": "string",
                                "Separator_07": "string",
                                "SegmentCode_08": "string",
                                "Separator_08": "string",
                                "SegmentCode_09": "string",
                                "Separator_09": "string",
                                "SegmentCode_10": "string",
                                "Separator_10": "string",
                                "SegmentCode_11": "string",
                                "Separator_11": "string",
                                "SegmentCode_12": "string",
                                "SegmentName_01": "string",
                                "SegmentName_02": "string",
                                "SegmentName_03": "string",
                                "SegmentName_04": "string",
                                "SegmentName_05": "string",
                                "SegmentName_06": "string",
                                "SegmentName_07": "string",
                                "SegmentName_08": "string",
                                "SegmentName_09": "string",
                                "SegmentName_10": "string",
                                "SegmentName_11": "string",
                                "SegmentName_12": "string",
                                "Name_01": "string",
                                "Name_02": "string",
                                "Name_03": "string",
                                "Name_04": "string",
                                "Name_05": "string",
                                "Name_06": "string",
                                "Name_07": "string",
                                "Name_08": "string",
                                "Name_09": "string",
                                "Name_10": "string",
                                "Name_11": "string",
                                "Name_12": "string",
                                "Segments": [
                                    {
                                        "SegmentCode": "string",
                                        "Name": "string",
                                        "IsActive": true,
                                        "SegmentName": "string",
                                        "CompanyCode": "string"
                                    }
                                ],
                                "IsActive": true
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[StructureResponse]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "UserAction": "string",
                                            "ImportStatus": "string",
                                            "StructureName": "string",
                                            "StructureCode": "string",
                                            "CompanyCode": "string",
                                            "FullName": "string",
                                            "SegmentCode_01": "string",
                                            "Separator_01": "string",
                                            "SegmentCode_02": "string",
                                            "Separator_02": "string",
                                            "SegmentCode_03": "string",
                                            "Separator_03": "string",
                                            "SegmentCode_04": "string",
                                            "Separator_04": "string",
                                            "SegmentCode_05": "string",
                                            "Separator_05": "string",
                                            "SegmentCode_06": "string",
                                            "Separator_06": "string",
                                            "SegmentCode_07": "string",
                                            "Separator_07": "string",
                                            "SegmentCode_08": "string",
                                            "Separator_08": "string",
                                            "SegmentCode_09": "string",
                                            "Separator_09": "string",
                                            "SegmentCode_10": "string",
                                            "Separator_10": "string",
                                            "SegmentCode_11": "string",
                                            "Separator_11": "string",
                                            "SegmentCode_12": "string",
                                            "SegmentName_01": "string",
                                            "SegmentName_02": "string",
                                            "SegmentName_03": "string",
                                            "SegmentName_04": "string",
                                            "SegmentName_05": "string",
                                            "SegmentName_06": "string",
                                            "SegmentName_07": "string",
                                            "SegmentName_08": "string",
                                            "SegmentName_09": "string",
                                            "SegmentName_10": "string",
                                            "SegmentName_11": "string",
                                            "SegmentName_12": "string",
                                            "Name_01": "string",
                                            "Name_02": "string",
                                            "Name_03": "string",
                                            "Name_04": "string",
                                            "Name_05": "string",
                                            "Name_06": "string",
                                            "Name_07": "string",
                                            "Name_08": "string",
                                            "Name_09": "string",
                                            "Name_10": "string",
                                            "Name_11": "string",
                                            "Name_12": "string",
                                            "Segments": [
                                                {
                                                    "SegmentCode": "string",
                                                    "Name": "string",
                                                    "IsActive": true,
                                                    "SegmentName": "string",
                                                    "CompanyCode": "string"
                                                }
                                            ],
                                            "IsActive": true
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Structures"
                ],
                "summary": "Structures Delete(StructureName, StructureCode)",
                "description": "Removes Unused Account Structures",
                "operationId": "Structures_DeleteByStructurenameAndStructurecode",
                "parameters": [
                    {
                        "name": "StructureName",
                        "in": "path",
                        "description": "Structure Name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "StructureCode",
                        "in": "path",
                        "description": "Account Code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "CompanyCode",
                        "in": "query",
                        "description": "Company Code",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/Structures/Batch": {
            "post": {
                "tags": [
                    "Structures"
                ],
                "summary": "Structures Batch",
                "description": "Creates the given Account Structure entity from a Batch",
                "operationId": "Structures_Batch",
                "requestBody": {
                    "description": "Batch action parameters",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Parameters-13"
                            },
                            "example": {
                                "Structures": [
                                    {
                                        "StructureName": "string",
                                        "StructureCode": "string",
                                        "CompanyCode": "string",
                                        "FullName": "string",
                                        "SegmentCode_01": "string",
                                        "Separator_01": "string",
                                        "SegmentCode_02": "string",
                                        "Separator_02": "string",
                                        "SegmentCode_03": "string",
                                        "Separator_03": "string",
                                        "SegmentCode_04": "string",
                                        "Separator_04": "string",
                                        "SegmentCode_05": "string",
                                        "Separator_05": "string",
                                        "SegmentCode_06": "string",
                                        "Separator_06": "string",
                                        "SegmentCode_07": "string",
                                        "Separator_07": "string",
                                        "SegmentCode_08": "string",
                                        "Separator_08": "string",
                                        "SegmentCode_09": "string",
                                        "Separator_09": "string",
                                        "SegmentCode_10": "string",
                                        "Separator_10": "string",
                                        "SegmentCode_11": "string",
                                        "Separator_11": "string",
                                        "SegmentCode_12": "string",
                                        "SegmentName_01": "string",
                                        "SegmentName_02": "string",
                                        "SegmentName_03": "string",
                                        "SegmentName_04": "string",
                                        "SegmentName_05": "string",
                                        "SegmentName_06": "string",
                                        "SegmentName_07": "string",
                                        "SegmentName_08": "string",
                                        "SegmentName_09": "string",
                                        "SegmentName_10": "string",
                                        "SegmentName_11": "string",
                                        "SegmentName_12": "string",
                                        "Name_01": "string",
                                        "Name_02": "string",
                                        "Name_03": "string",
                                        "Name_04": "string",
                                        "Name_05": "string",
                                        "Name_06": "string",
                                        "Name_07": "string",
                                        "Name_08": "string",
                                        "Name_09": "string",
                                        "Name_10": "string",
                                        "Name_11": "string",
                                        "Name_12": "string",
                                        "Segments": [
                                            {
                                                "SegmentCode": "string",
                                                "Name": "string",
                                                "IsActive": true,
                                                "SegmentName": "string",
                                                "CompanyCode": "string"
                                            }
                                        ],
                                        "IsActive": true
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[StructureResponse]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "UserAction": "string",
                                            "ImportStatus": "string",
                                            "StructureName": "string",
                                            "StructureCode": "string",
                                            "CompanyCode": "string",
                                            "FullName": "string",
                                            "SegmentCode_01": "string",
                                            "Separator_01": "string",
                                            "SegmentCode_02": "string",
                                            "Separator_02": "string",
                                            "SegmentCode_03": "string",
                                            "Separator_03": "string",
                                            "SegmentCode_04": "string",
                                            "Separator_04": "string",
                                            "SegmentCode_05": "string",
                                            "Separator_05": "string",
                                            "SegmentCode_06": "string",
                                            "Separator_06": "string",
                                            "SegmentCode_07": "string",
                                            "Separator_07": "string",
                                            "SegmentCode_08": "string",
                                            "Separator_08": "string",
                                            "SegmentCode_09": "string",
                                            "Separator_09": "string",
                                            "SegmentCode_10": "string",
                                            "Separator_10": "string",
                                            "SegmentCode_11": "string",
                                            "Separator_11": "string",
                                            "SegmentCode_12": "string",
                                            "SegmentName_01": "string",
                                            "SegmentName_02": "string",
                                            "SegmentName_03": "string",
                                            "SegmentName_04": "string",
                                            "SegmentName_05": "string",
                                            "SegmentName_06": "string",
                                            "SegmentName_07": "string",
                                            "SegmentName_08": "string",
                                            "SegmentName_09": "string",
                                            "SegmentName_10": "string",
                                            "SegmentName_11": "string",
                                            "SegmentName_12": "string",
                                            "Name_01": "string",
                                            "Name_02": "string",
                                            "Name_03": "string",
                                            "Name_04": "string",
                                            "Name_05": "string",
                                            "Name_06": "string",
                                            "Name_07": "string",
                                            "Name_08": "string",
                                            "Name_09": "string",
                                            "Name_10": "string",
                                            "Name_11": "string",
                                            "Name_12": "string",
                                            "Segments": [
                                                {
                                                    "SegmentCode": "string",
                                                    "Name": "string",
                                                    "IsActive": true,
                                                    "SegmentName": "string",
                                                    "CompanyCode": "string"
                                                }
                                            ],
                                            "IsActive": true
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Suppliers/Batch": {
            "post": {
                "tags": [
                    "Suppliers"
                ],
                "summary": "Import Suppliers",
                "description": "Updates/Creates the given Supplier records from Batch  <br /><br />\r\nCompanyCode and SupplierCode combination is the unique key. <br />\r\nIt will be matched to the Company Code and Supplier Code in the Fraxion system to determine an update or create <br /><br />\r\nquery parameter: \"currentState\" will create, only the new Suppliers, in Fraxion as either \"Create\"(default) or Approved. depending on the parameter added.",
                "operationId": "Suppliers_Batch",
                "parameters": [
                    {
                        "name": "currentState",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Batch action parameters",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Parameters-14"
                            },
                            "example": {
                                "importSuppliers": [
                                    {
                                        "CompanyCode": "string",
                                        "SupplierCode": "string",
                                        "SupplierName": "string",
                                        "Contact": "string",
                                        "PhoneNumber": "string",
                                        "FaxNumber": "string",
                                        "Email": "string",
                                        "RegistrationNumber": "string",
                                        "TaxRegistrationNumber": "string",
                                        "BankAccountNumber": "string",
                                        "BankingInfo": "string",
                                        "PaymentTerms": "string",
                                        "Address1": "string",
                                        "Address2": "string",
                                        "Address3": "string",
                                        "Address4": "string",
                                        "Locality": "string",
                                        "Region": "string",
                                        "PostalCode": "string",
                                        "Country": "string",
                                        "Coordinates": "string",
                                        "FxSupplierID": "string",
                                        "CustomColumns": "string",
                                        "CategoryCode1": "string",
                                        "CategoryCode2": "string",
                                        "CategoryCode3": "string",
                                        "CategoryCode4": "string",
                                        "IsTravelServiceProvider": true,
                                        "IsInvoiceLink": true,
                                        "IsActive": true,
                                        "CurrencyCode": "string",
                                        "TaxRateCode": "string"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[SupplierResponse]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "SupplierID": 0,
                                            "UserAction": "string",
                                            "ImportStatus": "string",
                                            "CompanyCode": "string",
                                            "SupplierCode": "string",
                                            "SupplierName": "string",
                                            "Contact": "string",
                                            "PhoneNumber": "string",
                                            "FaxNumber": "string",
                                            "Email": "string",
                                            "RegistrationNumber": "string",
                                            "TaxRegistrationNumber": "string",
                                            "BankAccountNumber": "string",
                                            "BankingInfo": "string",
                                            "PaymentTerms": "string",
                                            "Address1": "string",
                                            "Address2": "string",
                                            "Address3": "string",
                                            "Address4": "string",
                                            "Locality": "string",
                                            "Region": "string",
                                            "PostalCode": "string",
                                            "Country": "string",
                                            "Coordinates": "string",
                                            "FxSupplierID": "string",
                                            "CustomColumns": "string",
                                            "CategoryCode1": "string",
                                            "CategoryCode2": "string",
                                            "CategoryCode3": "string",
                                            "CategoryCode4": "string",
                                            "IsTravelServiceProvider": true,
                                            "IsInvoiceLink": true,
                                            "IsActive": true,
                                            "CurrencyCode": "string",
                                            "TaxRateCode": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/TaxRates/Batch": {
            "post": {
                "tags": [
                    "TaxRates"
                ],
                "summary": "Import TaxRates",
                "description": "Updates/Creates the given TaxRates records from Batch <br /><br />\r\nTaxRateCode is the unique key and will be matched to the TaxRateCodes in the Fraxion system to determine an update or create <br /><br />",
                "operationId": "TaxRates_Batch",
                "requestBody": {
                    "description": "Batch action parameters",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Parameters-15"
                            },
                            "example": {
                                "importTaxRates": [
                                    {
                                        "TaxRateCode": "string",
                                        "TaxRateName": "string",
                                        "Value": 0,
                                        "IsDefault": true,
                                        "IsActive": true,
                                        "CompanyCode": "string"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[TaxRateResponse]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "TaxRateID": 0,
                                            "UserAction": "string",
                                            "ImportStatus": "string",
                                            "TaxRateCode": "string",
                                            "TaxRateName": "string",
                                            "Value": 0,
                                            "IsDefault": true,
                                            "IsActive": true,
                                            "CompanyCode": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Budgets/GetActualPeriods": {
            "get": {
                "tags": [
                    "Budgets"
                ],
                "summary": "Budgets GetActualPeriods",
                "description": "Returns a collection containing Actual Spend Values",
                "operationId": "Budgets_GetActualPeriods",
                "parameters": [
                    {
                        "name": "StructureName",
                        "in": "query",
                        "description": "Structure Name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "CompanyCode",
                        "in": "query",
                        "description": "Company Code",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[BudgetPeriod]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "StructureName": "string",
                                            "CompanyCode": "string",
                                            "CompanyName": "string",
                                            "FinancialYear": "string",
                                            "StructureCode": "string",
                                            "StructureFullName": "string",
                                            "SegmentCode_01": "string",
                                            "SegmentCode_02": "string",
                                            "SegmentCode_03": "string",
                                            "SegmentCode_04": "string",
                                            "SegmentCode_05": "string",
                                            "SegmentCode_06": "string",
                                            "SegmentCode_07": "string",
                                            "SegmentCode_08": "string",
                                            "SegmentCode_09": "string",
                                            "SegmentCode_10": "string",
                                            "SegmentCode_11": "string",
                                            "SegmentCode_12": "string",
                                            "SegmentName_01": "string",
                                            "SegmentName_02": "string",
                                            "SegmentName_03": "string",
                                            "SegmentName_04": "string",
                                            "SegmentName_05": "string",
                                            "SegmentName_06": "string",
                                            "SegmentName_07": "string",
                                            "SegmentName_08": "string",
                                            "SegmentName_09": "string",
                                            "SegmentName_10": "string",
                                            "SegmentName_11": "string",
                                            "SegmentName_12": "string",
                                            "UserAction": "string",
                                            "ImportStatus": "string",
                                            "PeriodNumber": 0,
                                            "PeriodDescription": "string",
                                            "PeriodValue": 0,
                                            "StartDate": "string",
                                            "EndDate": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Budgets/GetActualPeriod": {
            "get": {
                "tags": [
                    "Budgets"
                ],
                "summary": "Budgets GetActualPeriod",
                "description": "Returns the set of Actual spend for specific StructureName, StructureCode, FinancialYear, and CompanyCode (If applicable)",
                "operationId": "Budgets_GetActualPeriod",
                "parameters": [
                    {
                        "name": "StructureName",
                        "in": "query",
                        "description": "Structure Name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "StructureCode",
                        "in": "query",
                        "description": "Structure Code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "FinancialYear",
                        "in": "query",
                        "description": "Financial Year",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "PeriodNumber",
                        "in": "query",
                        "description": "Format - int32. Period Number",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "CompanyCode",
                        "in": "query",
                        "description": "Company Code",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[BudgetPeriod]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "StructureName": "string",
                                            "CompanyCode": "string",
                                            "CompanyName": "string",
                                            "FinancialYear": "string",
                                            "StructureCode": "string",
                                            "StructureFullName": "string",
                                            "SegmentCode_01": "string",
                                            "SegmentCode_02": "string",
                                            "SegmentCode_03": "string",
                                            "SegmentCode_04": "string",
                                            "SegmentCode_05": "string",
                                            "SegmentCode_06": "string",
                                            "SegmentCode_07": "string",
                                            "SegmentCode_08": "string",
                                            "SegmentCode_09": "string",
                                            "SegmentCode_10": "string",
                                            "SegmentCode_11": "string",
                                            "SegmentCode_12": "string",
                                            "SegmentName_01": "string",
                                            "SegmentName_02": "string",
                                            "SegmentName_03": "string",
                                            "SegmentName_04": "string",
                                            "SegmentName_05": "string",
                                            "SegmentName_06": "string",
                                            "SegmentName_07": "string",
                                            "SegmentName_08": "string",
                                            "SegmentName_09": "string",
                                            "SegmentName_10": "string",
                                            "SegmentName_11": "string",
                                            "SegmentName_12": "string",
                                            "UserAction": "string",
                                            "ImportStatus": "string",
                                            "PeriodNumber": 0,
                                            "PeriodDescription": "string",
                                            "PeriodValue": 0,
                                            "StartDate": "string",
                                            "EndDate": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Budgets/GetBudgetPeriods": {
            "get": {
                "tags": [
                    "Budgets"
                ],
                "summary": "Budgets GetBudgetPeriods",
                "description": "Returns a collection of Budget Values",
                "operationId": "Budgets_GetBudgetPeriods",
                "parameters": [
                    {
                        "name": "StructureName",
                        "in": "query",
                        "description": "Structure Name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "CompanyCode",
                        "in": "query",
                        "description": "Company Code",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[BudgetPeriod]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "StructureName": "string",
                                            "CompanyCode": "string",
                                            "CompanyName": "string",
                                            "FinancialYear": "string",
                                            "StructureCode": "string",
                                            "StructureFullName": "string",
                                            "SegmentCode_01": "string",
                                            "SegmentCode_02": "string",
                                            "SegmentCode_03": "string",
                                            "SegmentCode_04": "string",
                                            "SegmentCode_05": "string",
                                            "SegmentCode_06": "string",
                                            "SegmentCode_07": "string",
                                            "SegmentCode_08": "string",
                                            "SegmentCode_09": "string",
                                            "SegmentCode_10": "string",
                                            "SegmentCode_11": "string",
                                            "SegmentCode_12": "string",
                                            "SegmentName_01": "string",
                                            "SegmentName_02": "string",
                                            "SegmentName_03": "string",
                                            "SegmentName_04": "string",
                                            "SegmentName_05": "string",
                                            "SegmentName_06": "string",
                                            "SegmentName_07": "string",
                                            "SegmentName_08": "string",
                                            "SegmentName_09": "string",
                                            "SegmentName_10": "string",
                                            "SegmentName_11": "string",
                                            "SegmentName_12": "string",
                                            "UserAction": "string",
                                            "ImportStatus": "string",
                                            "PeriodNumber": 0,
                                            "PeriodDescription": "string",
                                            "PeriodValue": 0,
                                            "StartDate": "string",
                                            "EndDate": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Budgets/GetBudgetPeriod": {
            "get": {
                "tags": [
                    "Budgets"
                ],
                "summary": "Budgets GetBudgetPeriod",
                "description": "Returns the single set of Budget Values specific StructureName, StructureCode, FinancialYear, and CompanyCode (If applicable)",
                "operationId": "Budgets_GetBudgetPeriod",
                "parameters": [
                    {
                        "name": "StructureName",
                        "in": "query",
                        "description": "Structure Name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "StructureCode",
                        "in": "query",
                        "description": "Structure Code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "FinancialYear",
                        "in": "query",
                        "description": "Financial Year",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "PeriodNumber",
                        "in": "query",
                        "description": "Format - int32. Period Number",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "CompanyCode",
                        "in": "query",
                        "description": "Company Code",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[BudgetPeriod]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "StructureName": "string",
                                            "CompanyCode": "string",
                                            "CompanyName": "string",
                                            "FinancialYear": "string",
                                            "StructureCode": "string",
                                            "StructureFullName": "string",
                                            "SegmentCode_01": "string",
                                            "SegmentCode_02": "string",
                                            "SegmentCode_03": "string",
                                            "SegmentCode_04": "string",
                                            "SegmentCode_05": "string",
                                            "SegmentCode_06": "string",
                                            "SegmentCode_07": "string",
                                            "SegmentCode_08": "string",
                                            "SegmentCode_09": "string",
                                            "SegmentCode_10": "string",
                                            "SegmentCode_11": "string",
                                            "SegmentCode_12": "string",
                                            "SegmentName_01": "string",
                                            "SegmentName_02": "string",
                                            "SegmentName_03": "string",
                                            "SegmentName_04": "string",
                                            "SegmentName_05": "string",
                                            "SegmentName_06": "string",
                                            "SegmentName_07": "string",
                                            "SegmentName_08": "string",
                                            "SegmentName_09": "string",
                                            "SegmentName_10": "string",
                                            "SegmentName_11": "string",
                                            "SegmentName_12": "string",
                                            "UserAction": "string",
                                            "ImportStatus": "string",
                                            "PeriodNumber": 0,
                                            "PeriodDescription": "string",
                                            "PeriodValue": 0,
                                            "StartDate": "string",
                                            "EndDate": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Budgets/PostActualPeriod": {
            "post": {
                "tags": [
                    "Budgets"
                ],
                "summary": "Budgets PostActualPeriod",
                "description": "Create Actual Spend records for a specific StructureName, StructureCode, FinancialYear, and CompanyCode (If applicable)",
                "operationId": "Budgets_PostActualPeriod",
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Single JSON object of BudgetPeriod",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BudgetPeriod"
                            },
                            "example": {
                                "StructureName": "string",
                                "CompanyCode": "string",
                                "CompanyName": "string",
                                "FinancialYear": "string",
                                "StructureCode": "string",
                                "StructureFullName": "string",
                                "SegmentCode_01": "string",
                                "SegmentCode_02": "string",
                                "SegmentCode_03": "string",
                                "SegmentCode_04": "string",
                                "SegmentCode_05": "string",
                                "SegmentCode_06": "string",
                                "SegmentCode_07": "string",
                                "SegmentCode_08": "string",
                                "SegmentCode_09": "string",
                                "SegmentCode_10": "string",
                                "SegmentCode_11": "string",
                                "SegmentCode_12": "string",
                                "SegmentName_01": "string",
                                "SegmentName_02": "string",
                                "SegmentName_03": "string",
                                "SegmentName_04": "string",
                                "SegmentName_05": "string",
                                "SegmentName_06": "string",
                                "SegmentName_07": "string",
                                "SegmentName_08": "string",
                                "SegmentName_09": "string",
                                "SegmentName_10": "string",
                                "SegmentName_11": "string",
                                "SegmentName_12": "string",
                                "UserAction": "string",
                                "ImportStatus": "string",
                                "PeriodNumber": 0,
                                "PeriodDescription": "string",
                                "PeriodValue": 0,
                                "StartDate": "string",
                                "EndDate": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[BudgetPeriod]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "StructureName": "string",
                                            "CompanyCode": "string",
                                            "CompanyName": "string",
                                            "FinancialYear": "string",
                                            "StructureCode": "string",
                                            "StructureFullName": "string",
                                            "SegmentCode_01": "string",
                                            "SegmentCode_02": "string",
                                            "SegmentCode_03": "string",
                                            "SegmentCode_04": "string",
                                            "SegmentCode_05": "string",
                                            "SegmentCode_06": "string",
                                            "SegmentCode_07": "string",
                                            "SegmentCode_08": "string",
                                            "SegmentCode_09": "string",
                                            "SegmentCode_10": "string",
                                            "SegmentCode_11": "string",
                                            "SegmentCode_12": "string",
                                            "SegmentName_01": "string",
                                            "SegmentName_02": "string",
                                            "SegmentName_03": "string",
                                            "SegmentName_04": "string",
                                            "SegmentName_05": "string",
                                            "SegmentName_06": "string",
                                            "SegmentName_07": "string",
                                            "SegmentName_08": "string",
                                            "SegmentName_09": "string",
                                            "SegmentName_10": "string",
                                            "SegmentName_11": "string",
                                            "SegmentName_12": "string",
                                            "UserAction": "string",
                                            "ImportStatus": "string",
                                            "PeriodNumber": 0,
                                            "PeriodDescription": "string",
                                            "PeriodValue": 0,
                                            "StartDate": "string",
                                            "EndDate": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Budgets/ActualPeriodBatch": {
            "post": {
                "tags": [
                    "Budgets"
                ],
                "summary": "Budgets ActualPeriodBatch",
                "description": "Creates the given Actual Spend entries from provided Batch",
                "operationId": "Budgets_ActualPeriodBatch",
                "requestBody": {
                    "description": "JSON Array of BudgetPeriod as ActualPeriods",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Parameters-2"
                            },
                            "example": {
                                "ActualPeriods": [
                                    {
                                        "StructureName": "string",
                                        "CompanyCode": "string",
                                        "CompanyName": "string",
                                        "FinancialYear": "string",
                                        "StructureCode": "string",
                                        "StructureFullName": "string",
                                        "SegmentCode_01": "string",
                                        "SegmentCode_02": "string",
                                        "SegmentCode_03": "string",
                                        "SegmentCode_04": "string",
                                        "SegmentCode_05": "string",
                                        "SegmentCode_06": "string",
                                        "SegmentCode_07": "string",
                                        "SegmentCode_08": "string",
                                        "SegmentCode_09": "string",
                                        "SegmentCode_10": "string",
                                        "SegmentCode_11": "string",
                                        "SegmentCode_12": "string",
                                        "SegmentName_01": "string",
                                        "SegmentName_02": "string",
                                        "SegmentName_03": "string",
                                        "SegmentName_04": "string",
                                        "SegmentName_05": "string",
                                        "SegmentName_06": "string",
                                        "SegmentName_07": "string",
                                        "SegmentName_08": "string",
                                        "SegmentName_09": "string",
                                        "SegmentName_10": "string",
                                        "SegmentName_11": "string",
                                        "SegmentName_12": "string",
                                        "UserAction": "string",
                                        "ImportStatus": "string",
                                        "PeriodNumber": 0,
                                        "PeriodDescription": "string",
                                        "PeriodValue": 0,
                                        "StartDate": "string",
                                        "EndDate": "string"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[BudgetPeriod]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "StructureName": "string",
                                            "CompanyCode": "string",
                                            "CompanyName": "string",
                                            "FinancialYear": "string",
                                            "StructureCode": "string",
                                            "StructureFullName": "string",
                                            "SegmentCode_01": "string",
                                            "SegmentCode_02": "string",
                                            "SegmentCode_03": "string",
                                            "SegmentCode_04": "string",
                                            "SegmentCode_05": "string",
                                            "SegmentCode_06": "string",
                                            "SegmentCode_07": "string",
                                            "SegmentCode_08": "string",
                                            "SegmentCode_09": "string",
                                            "SegmentCode_10": "string",
                                            "SegmentCode_11": "string",
                                            "SegmentCode_12": "string",
                                            "SegmentName_01": "string",
                                            "SegmentName_02": "string",
                                            "SegmentName_03": "string",
                                            "SegmentName_04": "string",
                                            "SegmentName_05": "string",
                                            "SegmentName_06": "string",
                                            "SegmentName_07": "string",
                                            "SegmentName_08": "string",
                                            "SegmentName_09": "string",
                                            "SegmentName_10": "string",
                                            "SegmentName_11": "string",
                                            "SegmentName_12": "string",
                                            "UserAction": "string",
                                            "ImportStatus": "string",
                                            "PeriodNumber": 0,
                                            "PeriodDescription": "string",
                                            "PeriodValue": 0,
                                            "StartDate": "string",
                                            "EndDate": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Budgets/PostBudgetPeriod": {
            "post": {
                "tags": [
                    "Budgets"
                ],
                "summary": "Budgets PostBudgetPeriod",
                "description": "Create Budget records for a specific StructureName, StructureCode, FinancialYear, and CompanyCode (If applicable)",
                "operationId": "Budgets_PostBudgetPeriod",
                "requestBody": {
                    "description": "Single JSON object of BudgetPeriod",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BudgetPeriod"
                            },
                            "example": {
                                "StructureName": "string",
                                "CompanyCode": "string",
                                "CompanyName": "string",
                                "FinancialYear": "string",
                                "StructureCode": "string",
                                "StructureFullName": "string",
                                "SegmentCode_01": "string",
                                "SegmentCode_02": "string",
                                "SegmentCode_03": "string",
                                "SegmentCode_04": "string",
                                "SegmentCode_05": "string",
                                "SegmentCode_06": "string",
                                "SegmentCode_07": "string",
                                "SegmentCode_08": "string",
                                "SegmentCode_09": "string",
                                "SegmentCode_10": "string",
                                "SegmentCode_11": "string",
                                "SegmentCode_12": "string",
                                "SegmentName_01": "string",
                                "SegmentName_02": "string",
                                "SegmentName_03": "string",
                                "SegmentName_04": "string",
                                "SegmentName_05": "string",
                                "SegmentName_06": "string",
                                "SegmentName_07": "string",
                                "SegmentName_08": "string",
                                "SegmentName_09": "string",
                                "SegmentName_10": "string",
                                "SegmentName_11": "string",
                                "SegmentName_12": "string",
                                "UserAction": "string",
                                "ImportStatus": "string",
                                "PeriodNumber": 0,
                                "PeriodDescription": "string",
                                "PeriodValue": 0,
                                "StartDate": "string",
                                "EndDate": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[BudgetPeriod]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "StructureName": "string",
                                            "CompanyCode": "string",
                                            "CompanyName": "string",
                                            "FinancialYear": "string",
                                            "StructureCode": "string",
                                            "StructureFullName": "string",
                                            "SegmentCode_01": "string",
                                            "SegmentCode_02": "string",
                                            "SegmentCode_03": "string",
                                            "SegmentCode_04": "string",
                                            "SegmentCode_05": "string",
                                            "SegmentCode_06": "string",
                                            "SegmentCode_07": "string",
                                            "SegmentCode_08": "string",
                                            "SegmentCode_09": "string",
                                            "SegmentCode_10": "string",
                                            "SegmentCode_11": "string",
                                            "SegmentCode_12": "string",
                                            "SegmentName_01": "string",
                                            "SegmentName_02": "string",
                                            "SegmentName_03": "string",
                                            "SegmentName_04": "string",
                                            "SegmentName_05": "string",
                                            "SegmentName_06": "string",
                                            "SegmentName_07": "string",
                                            "SegmentName_08": "string",
                                            "SegmentName_09": "string",
                                            "SegmentName_10": "string",
                                            "SegmentName_11": "string",
                                            "SegmentName_12": "string",
                                            "UserAction": "string",
                                            "ImportStatus": "string",
                                            "PeriodNumber": 0,
                                            "PeriodDescription": "string",
                                            "PeriodValue": 0,
                                            "StartDate": "string",
                                            "EndDate": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Budgets/BudgetPeriodBatch": {
            "post": {
                "tags": [
                    "Budgets"
                ],
                "summary": "Budgets BudgetPeriodBatch",
                "description": "Creates the given Budget entries from provided Batch",
                "operationId": "Budgets_BudgetPeriodBatch",
                "requestBody": {
                    "description": "JSON Array of BudgetPeriod as BudgetPeriods",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Parameters-4"
                            },
                            "example": {
                                "BudgetPeriods": [
                                    {
                                        "StructureName": "string",
                                        "CompanyCode": "string",
                                        "CompanyName": "string",
                                        "FinancialYear": "string",
                                        "StructureCode": "string",
                                        "StructureFullName": "string",
                                        "SegmentCode_01": "string",
                                        "SegmentCode_02": "string",
                                        "SegmentCode_03": "string",
                                        "SegmentCode_04": "string",
                                        "SegmentCode_05": "string",
                                        "SegmentCode_06": "string",
                                        "SegmentCode_07": "string",
                                        "SegmentCode_08": "string",
                                        "SegmentCode_09": "string",
                                        "SegmentCode_10": "string",
                                        "SegmentCode_11": "string",
                                        "SegmentCode_12": "string",
                                        "SegmentName_01": "string",
                                        "SegmentName_02": "string",
                                        "SegmentName_03": "string",
                                        "SegmentName_04": "string",
                                        "SegmentName_05": "string",
                                        "SegmentName_06": "string",
                                        "SegmentName_07": "string",
                                        "SegmentName_08": "string",
                                        "SegmentName_09": "string",
                                        "SegmentName_10": "string",
                                        "SegmentName_11": "string",
                                        "SegmentName_12": "string",
                                        "UserAction": "string",
                                        "ImportStatus": "string",
                                        "PeriodNumber": 0,
                                        "PeriodDescription": "string",
                                        "PeriodValue": 0,
                                        "StartDate": "string",
                                        "EndDate": "string"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[BudgetResponse]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "StructureName": "string",
                                            "CompanyCode": "string",
                                            "CompanyName": "string",
                                            "FinancialYear": "string",
                                            "StructureFullName": "string",
                                            "StructureCode": "string",
                                            "SegmentCode_01": "string",
                                            "SegmentCode_02": "string",
                                            "SegmentCode_03": "string",
                                            "SegmentCode_04": "string",
                                            "SegmentCode_05": "string",
                                            "SegmentCode_06": "string",
                                            "SegmentCode_07": "string",
                                            "SegmentCode_08": "string",
                                            "SegmentCode_09": "string",
                                            "SegmentCode_10": "string",
                                            "SegmentCode_11": "string",
                                            "SegmentCode_12": "string",
                                            "SegmentName_01": "string",
                                            "SegmentName_02": "string",
                                            "SegmentName_03": "string",
                                            "SegmentName_04": "string",
                                            "SegmentName_05": "string",
                                            "SegmentName_06": "string",
                                            "SegmentName_07": "string",
                                            "SegmentName_08": "string",
                                            "SegmentName_09": "string",
                                            "SegmentName_10": "string",
                                            "SegmentName_11": "string",
                                            "SegmentName_12": "string",
                                            "Periods": [
                                                {
                                                    "PeriodNumber": 0,
                                                    "PeriodDescription": "string",
                                                    "PeriodValue": 0,
                                                    "StartDate": "string",
                                                    "EndDate": "string",
                                                    "UserAction": "string",
                                                    "ImportStatus": "string"
                                                }
                                            ],
                                            "UserAction": "string",
                                            "ImportStatus": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Budgets/DeleteBudgets": {
            "delete": {
                "tags": [
                    "Budgets"
                ],
                "summary": "Budgets DeleteBudgets",
                "description": "Deletes all budgets based on Structure and FInancialYear",
                "operationId": "Budgets_DeleteBudgets",
                "parameters": [
                    {
                        "name": "StructureName",
                        "in": "query",
                        "description": "Structure Name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "StructureCode",
                        "in": "query",
                        "description": "Structure Code for the Structure",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "FinancialYear",
                        "in": "query",
                        "description": "Fininacial Year",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "CompanyCode",
                        "in": "query",
                        "description": "Company Code (Can be optional)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "PeriodNumber",
                        "in": "query",
                        "description": "Format - int32. Period Number (If missing all periods are deleted for the Finincial Year)",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/Budgets/DeleteActuals": {
            "delete": {
                "tags": [
                    "Budgets"
                ],
                "summary": "Budgets DeleteActuals",
                "description": "Deletes all Actuals based on Structure and FInancialYear",
                "operationId": "Budgets_DeleteActuals",
                "parameters": [
                    {
                        "name": "StructureName",
                        "in": "query",
                        "description": "Structure Name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "StructureCode",
                        "in": "query",
                        "description": "Structure Code for the Structure",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "FinancialYear",
                        "in": "query",
                        "description": "Fininacial Year",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "CompanyCode",
                        "in": "query",
                        "description": "Company Code (Can be optional)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "PeriodNumber",
                        "in": "query",
                        "description": "Format - int32. Period Number (If missing all periods are deleted for the Finincial Year)",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/Budgets/Batch": {
            "post": {
                "tags": [
                    "Budgets"
                ],
                "summary": "Batch Budget Updates",
                "description": "Post a collection of BudgetExtended objects",
                "operationId": "Budgets_Batch",
                "parameters": [
                    {
                        "name": "Source",
                        "in": "query",
                        "description": "String describing the soure application for budget history entries",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Batch action parameters",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Parameters"
                            },
                            "example": {
                                "Budgets": [
                                    {
                                        "BudgetID": 0,
                                        "TenantID": 0,
                                        "GLAccountID": 0,
                                        "GLSegmentID": 0,
                                        "FinancialPeriodID": 0,
                                        "Value": 0,
                                        "ActualSpend": 0,
                                        "CompanyCode": "string",
                                        "CompanyName": "string",
                                        "PeriodNumber": 0,
                                        "PeriodDescription": "string",
                                        "StructureName": "string",
                                        "StructureCode": "string",
                                        "StructureFullName": "string",
                                        "FinancialYear": "string",
                                        "FinancialYearID": 0,
                                        "UserAction": "string",
                                        "ImportStatus": "string",
                                        "Note": "string",
                                        "StartDate": "string",
                                        "EndDate": "string",
                                        "LastUpdated": "string"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[BudgetExtended]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "BudgetID": 0,
                                            "TenantID": 0,
                                            "GLAccountID": 0,
                                            "GLSegmentID": 0,
                                            "FinancialPeriodID": 0,
                                            "Value": 0,
                                            "ActualSpend": 0,
                                            "CompanyCode": "string",
                                            "CompanyName": "string",
                                            "PeriodNumber": 0,
                                            "PeriodDescription": "string",
                                            "StructureName": "string",
                                            "StructureCode": "string",
                                            "StructureFullName": "string",
                                            "FinancialYear": "string",
                                            "FinancialYearID": 0,
                                            "UserAction": "string",
                                            "ImportStatus": "string",
                                            "Note": "string",
                                            "StartDate": "string",
                                            "EndDate": "string",
                                            "LastUpdated": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Budgets/PostBudget": {
            "post": {
                "tags": [
                    "Budgets"
                ],
                "summary": "Budgets PostBudget",
                "description": "Create Budget records for a specific StructureName, StructureCode, FinancialYear, and CompanyCode (If applicable)",
                "operationId": "Budgets_PostBudget",
                "requestBody": {
                    "description": "Single JSON object of BudgetImport containing a JSON Array of Period as Periods",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BudgetImport"
                            },
                            "example": {
                                "StructureName": "string",
                                "CompanyCode": "string",
                                "FinancialYear": "string",
                                "StructureCode": "string",
                                "SegmentCode_01": "string",
                                "SegmentCode_02": "string",
                                "SegmentCode_03": "string",
                                "SegmentCode_04": "string",
                                "SegmentCode_05": "string",
                                "SegmentCode_06": "string",
                                "SegmentCode_07": "string",
                                "SegmentCode_08": "string",
                                "SegmentCode_09": "string",
                                "SegmentCode_10": "string",
                                "SegmentCode_11": "string",
                                "SegmentCode_12": "string",
                                "Periods": [
                                    {
                                        "PeriodNumber": 0,
                                        "PeriodDescription": "string",
                                        "PeriodValue": 0,
                                        "StartDate": "string",
                                        "EndDate": "string",
                                        "UserAction": "string",
                                        "ImportStatus": "string"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[BudgetResponse]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "StructureName": "string",
                                            "CompanyCode": "string",
                                            "CompanyName": "string",
                                            "FinancialYear": "string",
                                            "StructureFullName": "string",
                                            "StructureCode": "string",
                                            "SegmentCode_01": "string",
                                            "SegmentCode_02": "string",
                                            "SegmentCode_03": "string",
                                            "SegmentCode_04": "string",
                                            "SegmentCode_05": "string",
                                            "SegmentCode_06": "string",
                                            "SegmentCode_07": "string",
                                            "SegmentCode_08": "string",
                                            "SegmentCode_09": "string",
                                            "SegmentCode_10": "string",
                                            "SegmentCode_11": "string",
                                            "SegmentCode_12": "string",
                                            "SegmentName_01": "string",
                                            "SegmentName_02": "string",
                                            "SegmentName_03": "string",
                                            "SegmentName_04": "string",
                                            "SegmentName_05": "string",
                                            "SegmentName_06": "string",
                                            "SegmentName_07": "string",
                                            "SegmentName_08": "string",
                                            "SegmentName_09": "string",
                                            "SegmentName_10": "string",
                                            "SegmentName_11": "string",
                                            "SegmentName_12": "string",
                                            "Periods": [
                                                {
                                                    "PeriodNumber": 0,
                                                    "PeriodDescription": "string",
                                                    "PeriodValue": 0,
                                                    "StartDate": "string",
                                                    "EndDate": "string",
                                                    "UserAction": "string",
                                                    "ImportStatus": "string"
                                                }
                                            ],
                                            "UserAction": "string",
                                            "ImportStatus": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Invoices({InvoiceID})/Notes": {
            "get": {
                "tags": [
                    "Invoices"
                ],
                "summary": "Inovice Notes collection",
                "description": "Returns the list of notes for the given Invoice.",
                "operationId": "Invoices_NotesByInvoiceid",
                "parameters": [
                    {
                        "name": "InvoiceID",
                        "in": "path",
                        "description": "Format - int64. InvoiceID of given Invoice",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DocumentNote"
                                },
                                "example": {
                                    "DocumentNoteID": 0,
                                    "TenantID": 0,
                                    "RequestID": 0,
                                    "InvoiceID": 0,
                                    "CreationDate": "string",
                                    "NoteText": "string",
                                    "EmployeeID": 0,
                                    "CurrentStateID": 0,
                                    "POID": 0,
                                    "SupplierID": 0
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Invoices"
                ],
                "summary": "Invoice Notes",
                "description": "Inserts a note for the given Invoice",
                "operationId": "Invoices_PutNoteByInvoiceid_1",
                "parameters": [
                    {
                        "name": "InvoiceID",
                        "in": "path",
                        "description": "Format - int64. InvoiceID of given Invoice",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DocumentNote"
                            },
                            "example": {
                                "DocumentNoteID": 0,
                                "TenantID": 0,
                                "RequestID": 0,
                                "InvoiceID": 0,
                                "CreationDate": "string",
                                "NoteText": "string",
                                "EmployeeID": 0,
                                "CurrentStateID": 0,
                                "POID": 0,
                                "SupplierID": 0
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DocumentNote"
                                },
                                "example": {
                                    "DocumentNoteID": 0,
                                    "TenantID": 0,
                                    "RequestID": 0,
                                    "InvoiceID": 0,
                                    "CreationDate": "string",
                                    "NoteText": "string",
                                    "EmployeeID": 0,
                                    "CurrentStateID": 0,
                                    "POID": 0,
                                    "SupplierID": 0
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Invoices"
                ],
                "summary": "Invoice Notes",
                "description": "Inserts a note for the given Invoice",
                "operationId": "Invoices_PutNoteByInvoiceid_2",
                "parameters": [
                    {
                        "name": "InvoiceID",
                        "in": "path",
                        "description": "Format - int64. InvoiceID of given Invoice",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DocumentNote"
                            },
                            "example": {
                                "DocumentNoteID": 0,
                                "TenantID": 0,
                                "RequestID": 0,
                                "InvoiceID": 0,
                                "CreationDate": "string",
                                "NoteText": "string",
                                "EmployeeID": 0,
                                "CurrentStateID": 0,
                                "POID": 0,
                                "SupplierID": 0
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DocumentNote"
                                },
                                "example": {
                                    "DocumentNoteID": 0,
                                    "TenantID": 0,
                                    "RequestID": 0,
                                    "InvoiceID": 0,
                                    "CreationDate": "string",
                                    "NoteText": "string",
                                    "EmployeeID": 0,
                                    "CurrentStateID": 0,
                                    "POID": 0,
                                    "SupplierID": 0
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Invoices"
                ],
                "summary": "Invoice Note Delete",
                "description": "Deletes a note for the given Invoice",
                "operationId": "Invoices_DeleteNoteByInvoiceid",
                "parameters": [
                    {
                        "name": "InvoiceID",
                        "in": "path",
                        "description": "Format - int64. InvoiceID of given Invoice",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "DocumentNoteID",
                        "in": "query",
                        "description": "Format - int64. DocumentNoteID of given Note",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/Notifications/OneSignal/{userMail}/{subject}/{message}": {
            "post": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Notifications_OneSignalNofity",
                "operationId": "Notifications_OneSignalNofity",
                "parameters": [
                    {
                        "name": "userMail",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subject",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "message",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fxTenantID",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fxUserID",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiNotificationsOneSignalUserMailSubjectMessagePost200ApplicationJsonRespons"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiNotificationsOneSignalUserMailSubjectMessagePost200TextJsonResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiNotificationsOneSignalUserMailSubjectMessagePost200ApplicationXmlResponse"
                                },
                                "example": "<ApiNotificationsOneSignalUserMailSubjectMessagePost200ApplicationXmlResponse />"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiNotificationsOneSignalUserMailSubjectMessagePost200TextXmlResponse"
                                },
                                "example": "<ApiNotificationsOneSignalUserMailSubjectMessagePost200TextXmlResponse />"
                            }
                        }
                    }
                }
            }
        },
        "/api/resources/{subset}/{cultureCode}": {
            "get": {
                "tags": [
                    "Resources"
                ],
                "summary": "Language Resources",
                "description": "Returns a set of resource strings based on the culturecode provided and subset requested.\r\n            \r\nsubset: the set of resources required. each subsequent subset delimited by a '.'<br />\r\nexamples: History<br />\r\n          Views.Shared<br />\r\n          Views.Home<br />\r\n          Views<br />\r\n          Models<br />\r\n          Models.Invoice<br />\r\n             \r\ncultureCode: en-US, en-GB, en-ZA, en-CA, en-AU, af-ZA, de-DE or xh-ZA etc.",
                "operationId": "Resources_LanguageResources3",
                "parameters": [
                    {
                        "name": "subset",
                        "in": "path",
                        "description": "If not provided, the default fetches the full set",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cultureCode",
                        "in": "path",
                        "description": "If not provided, the default value is en-US",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResourcesSubsetCultureCodeGet200ApplicationJsonResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResourcesSubsetCultureCodeGet200TextJsonResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResourcesSubsetCultureCodeGet200ApplicationXmlResponse"
                                },
                                "example": "<ApiResourcesSubsetCultureCodeGet200ApplicationXmlResponse />"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResourcesSubsetCultureCodeGet200TextXmlResponse"
                                },
                                "example": "<ApiResourcesSubsetCultureCodeGet200TextXmlResponse />"
                            }
                        }
                    }
                }
            }
        },
        "/api/resources/{cultureCode}": {
            "get": {
                "tags": [
                    "Resources"
                ],
                "summary": "Resources_LanguageResources2",
                "operationId": "Resources_LanguageResources2",
                "parameters": [
                    {
                        "name": "cultureCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subset",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResourcesCultureCodeGet200ApplicationJsonResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResourcesCultureCodeGet200TextJsonResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResourcesCultureCodeGet200ApplicationXmlResponse"
                                },
                                "example": "<ApiResourcesCultureCodeGet200ApplicationXmlResponse />"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResourcesCultureCodeGet200TextXmlResponse"
                                },
                                "example": "<ApiResourcesCultureCodeGet200TextXmlResponse />"
                            }
                        }
                    }
                }
            }
        },
        "/api/GLCodeMasks": {
            "get": {
                "tags": [
                    "GLCodeMasks"
                ],
                "summary": "GL Code Mask collection",
                "description": "Returns the entity set of GL Code Mask",
                "operationId": "GLCodeMasks_Get",
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[GLCodeMask]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "GLCodeMaskID": 0,
                                            "TenantID": 0,
                                            "GLSegmentNameID_01": 0,
                                            "GLSegmentNameID_02": 0,
                                            "GLSegmentNameID_03": 0,
                                            "GLSegmentNameID_04": 0,
                                            "GLSegmentNameID_05": 0,
                                            "GLSegmentNameID_06": 0,
                                            "GLSegmentNameID_07": 0,
                                            "GLSegmentNameID_08": 0,
                                            "GLSegmentNameID_09": 0,
                                            "GLSegmentNameID_10": 0,
                                            "GLSegmentNameID_11": 0,
                                            "GLSegmentNameID_12": 0,
                                            "Separator_01": "string",
                                            "Separator_02": "string",
                                            "Separator_03": "string",
                                            "Separator_04": "string",
                                            "Separator_05": "string",
                                            "Separator_06": "string",
                                            "Separator_07": "string",
                                            "Separator_08": "string",
                                            "Separator_09": "string",
                                            "Separator_10": "string",
                                            "Separator_11": "string",
                                            "IsDynamic": true,
                                            "IsActive": true,
                                            "IsLinkToCompany": true,
                                            "IsImportedActuals": true,
                                            "UseEmployeeCAA": true,
                                            "DefaultApprovalID": 0
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "GLCodeMasks"
                ],
                "summary": "Post a new entity to EntitySet GLCodeMasks",
                "description": "Post a new entity to EntitySet GLCodeMasks",
                "operationId": "GLCodeMasks_Post",
                "requestBody": {
                    "description": "The entity to post",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GLCodeMask"
                            },
                            "example": {
                                "GLCodeMaskID": 0,
                                "TenantID": 0,
                                "GLSegmentNameID_01": 0,
                                "GLSegmentNameID_02": 0,
                                "GLSegmentNameID_03": 0,
                                "GLSegmentNameID_04": 0,
                                "GLSegmentNameID_05": 0,
                                "GLSegmentNameID_06": 0,
                                "GLSegmentNameID_07": 0,
                                "GLSegmentNameID_08": 0,
                                "GLSegmentNameID_09": 0,
                                "GLSegmentNameID_10": 0,
                                "GLSegmentNameID_11": 0,
                                "GLSegmentNameID_12": 0,
                                "Separator_01": "string",
                                "Separator_02": "string",
                                "Separator_03": "string",
                                "Separator_04": "string",
                                "Separator_05": "string",
                                "Separator_06": "string",
                                "Separator_07": "string",
                                "Separator_08": "string",
                                "Separator_09": "string",
                                "Separator_10": "string",
                                "Separator_11": "string",
                                "IsDynamic": true,
                                "IsActive": true,
                                "IsLinkToCompany": true,
                                "IsImportedActuals": true,
                                "UseEmployeeCAA": true,
                                "DefaultApprovalID": 0
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[GLCodeMask]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "GLCodeMaskID": 0,
                                            "TenantID": 0,
                                            "GLSegmentNameID_01": 0,
                                            "GLSegmentNameID_02": 0,
                                            "GLSegmentNameID_03": 0,
                                            "GLSegmentNameID_04": 0,
                                            "GLSegmentNameID_05": 0,
                                            "GLSegmentNameID_06": 0,
                                            "GLSegmentNameID_07": 0,
                                            "GLSegmentNameID_08": 0,
                                            "GLSegmentNameID_09": 0,
                                            "GLSegmentNameID_10": 0,
                                            "GLSegmentNameID_11": 0,
                                            "GLSegmentNameID_12": 0,
                                            "Separator_01": "string",
                                            "Separator_02": "string",
                                            "Separator_03": "string",
                                            "Separator_04": "string",
                                            "Separator_05": "string",
                                            "Separator_06": "string",
                                            "Separator_07": "string",
                                            "Separator_08": "string",
                                            "Separator_09": "string",
                                            "Separator_10": "string",
                                            "Separator_11": "string",
                                            "IsDynamic": true,
                                            "IsActive": true,
                                            "IsLinkToCompany": true,
                                            "IsImportedActuals": true,
                                            "UseEmployeeCAA": true,
                                            "DefaultApprovalID": 0
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/GLCodeMasks({GLCodeMaskID})": {
            "get": {
                "tags": [
                    "GLCodeMasks"
                ],
                "summary": "GL Code Mask entity",
                "description": "Returns a single GL Code Mask entity",
                "operationId": "GLCodeMasks_GetByGlcodemaskid",
                "parameters": [
                    {
                        "name": "GLCodeMaskID",
                        "in": "path",
                        "description": "Format - int64. key: GLCodeMaskID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[GLCodeMask]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "GLCodeMaskID": 0,
                                            "TenantID": 0,
                                            "GLSegmentNameID_01": 0,
                                            "GLSegmentNameID_02": 0,
                                            "GLSegmentNameID_03": 0,
                                            "GLSegmentNameID_04": 0,
                                            "GLSegmentNameID_05": 0,
                                            "GLSegmentNameID_06": 0,
                                            "GLSegmentNameID_07": 0,
                                            "GLSegmentNameID_08": 0,
                                            "GLSegmentNameID_09": 0,
                                            "GLSegmentNameID_10": 0,
                                            "GLSegmentNameID_11": 0,
                                            "GLSegmentNameID_12": 0,
                                            "Separator_01": "string",
                                            "Separator_02": "string",
                                            "Separator_03": "string",
                                            "Separator_04": "string",
                                            "Separator_05": "string",
                                            "Separator_06": "string",
                                            "Separator_07": "string",
                                            "Separator_08": "string",
                                            "Separator_09": "string",
                                            "Separator_10": "string",
                                            "Separator_11": "string",
                                            "IsDynamic": true,
                                            "IsActive": true,
                                            "IsLinkToCompany": true,
                                            "IsImportedActuals": true,
                                            "UseEmployeeCAA": true,
                                            "DefaultApprovalID": 0
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "GLCodeMasks"
                ],
                "summary": "Replace entity in EntitySet GLCodeMasks",
                "description": "Replace entity in EntitySet GLCodeMasks",
                "operationId": "GLCodeMasks_PutByGlcodemaskid",
                "parameters": [
                    {
                        "name": "GLCodeMaskID",
                        "in": "path",
                        "description": "Format - int64. key: GLCodeMaskID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The entity to put",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GLCodeMask"
                            },
                            "example": {
                                "GLCodeMaskID": 0,
                                "TenantID": 0,
                                "GLSegmentNameID_01": 0,
                                "GLSegmentNameID_02": 0,
                                "GLSegmentNameID_03": 0,
                                "GLSegmentNameID_04": 0,
                                "GLSegmentNameID_05": 0,
                                "GLSegmentNameID_06": 0,
                                "GLSegmentNameID_07": 0,
                                "GLSegmentNameID_08": 0,
                                "GLSegmentNameID_09": 0,
                                "GLSegmentNameID_10": 0,
                                "GLSegmentNameID_11": 0,
                                "GLSegmentNameID_12": 0,
                                "Separator_01": "string",
                                "Separator_02": "string",
                                "Separator_03": "string",
                                "Separator_04": "string",
                                "Separator_05": "string",
                                "Separator_06": "string",
                                "Separator_07": "string",
                                "Separator_08": "string",
                                "Separator_09": "string",
                                "Separator_10": "string",
                                "Separator_11": "string",
                                "IsDynamic": true,
                                "IsActive": true,
                                "IsLinkToCompany": true,
                                "IsImportedActuals": true,
                                "UseEmployeeCAA": true,
                                "DefaultApprovalID": 0
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[GLCodeMask]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "GLCodeMaskID": 0,
                                            "TenantID": 0,
                                            "GLSegmentNameID_01": 0,
                                            "GLSegmentNameID_02": 0,
                                            "GLSegmentNameID_03": 0,
                                            "GLSegmentNameID_04": 0,
                                            "GLSegmentNameID_05": 0,
                                            "GLSegmentNameID_06": 0,
                                            "GLSegmentNameID_07": 0,
                                            "GLSegmentNameID_08": 0,
                                            "GLSegmentNameID_09": 0,
                                            "GLSegmentNameID_10": 0,
                                            "GLSegmentNameID_11": 0,
                                            "GLSegmentNameID_12": 0,
                                            "Separator_01": "string",
                                            "Separator_02": "string",
                                            "Separator_03": "string",
                                            "Separator_04": "string",
                                            "Separator_05": "string",
                                            "Separator_06": "string",
                                            "Separator_07": "string",
                                            "Separator_08": "string",
                                            "Separator_09": "string",
                                            "Separator_10": "string",
                                            "Separator_11": "string",
                                            "IsDynamic": true,
                                            "IsActive": true,
                                            "IsLinkToCompany": true,
                                            "IsImportedActuals": true,
                                            "UseEmployeeCAA": true,
                                            "DefaultApprovalID": 0
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "GLCodeMasks"
                ],
                "summary": "GL Segment Name Delete",
                "description": "Deletes the GL Segment Name",
                "operationId": "GLCodeMasks_DeleteByGlcodemaskid",
                "parameters": [
                    {
                        "name": "GLCodeMaskID",
                        "in": "path",
                        "description": "Format - int64. key: GLCodeMaskID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "If-Match header",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/GLSegmentNames": {
            "get": {
                "tags": [
                    "GLSegmentNames"
                ],
                "summary": "GL Segment Name collection",
                "description": "Returns the entity set of GL Segment Names",
                "operationId": "GLSegmentNames_Get",
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[GLSegmentName]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "GLSegmentNameID": 0,
                                            "TenantID": 0,
                                            "Name": "string",
                                            "IsActive": true
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "GLSegmentNames"
                ],
                "summary": "Post a new entity to EntitySet GLSegmentNames",
                "description": "Post a new entity to EntitySet GLSegmentNames",
                "operationId": "GLSegmentNames_Post",
                "requestBody": {
                    "description": "The entity to post",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GLSegmentName"
                            },
                            "example": {
                                "GLSegmentNameID": 0,
                                "TenantID": 0,
                                "Name": "string",
                                "IsActive": true
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[GLSegmentName]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "GLSegmentNameID": 0,
                                            "TenantID": 0,
                                            "Name": "string",
                                            "IsActive": true
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/GLSegmentNames({GLSegmentNameID})": {
            "get": {
                "tags": [
                    "GLSegmentNames"
                ],
                "summary": "GL Segment Name entity",
                "description": "Returns a single GL Segment Name entity",
                "operationId": "GLSegmentNames_GetByGlsegmentnameid",
                "parameters": [
                    {
                        "name": "GLSegmentNameID",
                        "in": "path",
                        "description": "Format - int64. key: GLSegmentNameID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[GLSegmentName]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "GLSegmentNameID": 0,
                                            "TenantID": 0,
                                            "Name": "string",
                                            "IsActive": true
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "GLSegmentNames"
                ],
                "summary": "Replace entity in EntitySet GLSegmentNames",
                "description": "Replace entity in EntitySet GLSegmentNames",
                "operationId": "GLSegmentNames_PutByGlsegmentnameid",
                "parameters": [
                    {
                        "name": "GLSegmentNameID",
                        "in": "path",
                        "description": "Format - int64. key: GLSegmentNameID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The entity to put",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GLSegmentName"
                            },
                            "example": {
                                "GLSegmentNameID": 0,
                                "TenantID": 0,
                                "Name": "string",
                                "IsActive": true
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[GLSegmentName]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "GLSegmentNameID": 0,
                                            "TenantID": 0,
                                            "Name": "string",
                                            "IsActive": true
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "GLSegmentNames"
                ],
                "summary": "GL Segment Name Delete",
                "description": "Deletes the GL Segment Name",
                "operationId": "GLSegmentNames_DeleteByGlsegmentnameid",
                "parameters": [
                    {
                        "name": "GLSegmentNameID",
                        "in": "path",
                        "description": "Format - int64. key: GLSegmentNameID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "If-Match header",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/TaxRates/DeleteCompany": {
            "delete": {
                "tags": [
                    "TaxRates"
                ],
                "summary": "TaxRates_DeleteCompany",
                "operationId": "TaxRates_DeleteCompany",
                "parameters": [
                    {
                        "name": "TaxRateID",
                        "in": "query",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "CompanyID",
                        "in": "query",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/Tenants/CurrentTenant": {
            "get": {
                "tags": [
                    "Tenants"
                ],
                "summary": "Current User Tenant entity",
                "description": "Returns the single tenant entity for the Current Tenant",
                "operationId": "Tenants_CurrentTenant",
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[Tenant]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "TenantID": 0,
                                            "Code": "string",
                                            "Name": "string",
                                            "LoginName": "string",
                                            "LoginPassword": "string",
                                            "Email": "string",
                                            "CreationDate": "string",
                                            "CancelledDate": "string",
                                            "TimeZoneID": "string",
                                            "IsActive": true,
                                            "AllowMultipleLeaveItems": true,
                                            "ShortName": "string",
                                            "AnyoneCanReceipt": true,
                                            "UseEmployeeCompany": true,
                                            "UseFraxionMP": true,
                                            "UseFraxionCAT": true,
                                            "FxTenantID": "00000000-0000-0000-0000-000000000000",
                                            "UseSupplierCompany": true,
                                            "UseFraxionCONT": true,
                                            "AnyoneCanViewBudget": true,
                                            "UseAAD": true,
                                            "AADTenantID": "00000000-0000-0000-0000-000000000000",
                                            "UseGLCompany": true,
                                            "UseFraxionIWS": true,
                                            "UseMoneyFourDecimals": true,
                                            "AnyoneCanAssist": true,
                                            "UseFraxionPunchout": true,
                                            "UseCatalogQuoting": true,
                                            "AllowInvoiceHeaderTax": true,
                                            "UseOrderRevision": true,
                                            "FilterGLByCompany": true,
                                            "UseTaxRateCompany": true,
                                            "UseNewCAADate": "string",
                                            "ReportingCurrencyID": 0
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/POes": {
            "get": {
                "tags": [
                    "PO"
                ],
                "summary": "PO collection",
                "description": "Returns the entity set of POes",
                "operationId": "PO_Get",
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[PO]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "FormattedPurchaseDate": "string",
                                            "ExclOrderAmount": "string",
                                            "TaxOrderAmount": "string",
                                            "InclOrderAmount": "string",
                                            "RequestTitle": "string",
                                            "POID": 0,
                                            "TenantID": 0,
                                            "CurrentStateID": 0,
                                            "Reference": "string",
                                            "CreatedByID": 0,
                                            "CreationDate": "string",
                                            "CompanyID": 0,
                                            "POCompanyID": 0,
                                            "SupplierID": 0,
                                            "POSupplierID": 0,
                                            "PhysicalLocationID": 0,
                                            "POPhysicalLocationID": 0,
                                            "InvoiceLocationID": 0,
                                            "POInvoiceLocationID": 0,
                                            "PurchaserID": 0,
                                            "POPurchaserID": 0,
                                            "PurchaseDate": "string",
                                            "Comments": "string",
                                            "ExReference": "string",
                                            "ExIsError": true,
                                            "EmailDate": "string",
                                            "IsEmailError": true,
                                            "ReportFileID": 0,
                                            "Revision": "string",
                                            "IsRevisionSubmitted": true,
                                            "RevisionNumber": 0,
                                            "RecipientInfo": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/POes({POID})": {
            "get": {
                "tags": [
                    "PO"
                ],
                "summary": "PO entity",
                "description": "Returns a single PO entity",
                "operationId": "PO_GetByPOID",
                "parameters": [
                    {
                        "name": "POID",
                        "in": "path",
                        "description": "Format - int64. key: POID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[PO]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "FormattedPurchaseDate": "string",
                                            "ExclOrderAmount": "string",
                                            "TaxOrderAmount": "string",
                                            "InclOrderAmount": "string",
                                            "RequestTitle": "string",
                                            "POID": 0,
                                            "TenantID": 0,
                                            "CurrentStateID": 0,
                                            "Reference": "string",
                                            "CreatedByID": 0,
                                            "CreationDate": "string",
                                            "CompanyID": 0,
                                            "POCompanyID": 0,
                                            "SupplierID": 0,
                                            "POSupplierID": 0,
                                            "PhysicalLocationID": 0,
                                            "POPhysicalLocationID": 0,
                                            "InvoiceLocationID": 0,
                                            "POInvoiceLocationID": 0,
                                            "PurchaserID": 0,
                                            "POPurchaserID": 0,
                                            "PurchaseDate": "string",
                                            "Comments": "string",
                                            "ExReference": "string",
                                            "ExIsError": true,
                                            "EmailDate": "string",
                                            "IsEmailError": true,
                                            "ReportFileID": 0,
                                            "Revision": "string",
                                            "IsRevisionSubmitted": true,
                                            "RevisionNumber": 0,
                                            "RecipientInfo": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/POItems": {
            "get": {
                "tags": [
                    "POItems"
                ],
                "summary": "POItem collection",
                "description": "Returns the entity set of POItems",
                "operationId": "POItems_Get",
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[POItem]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "CanLink": true,
                                            "POItemID": 0,
                                            "TenantID": 0,
                                            "POID": 0,
                                            "RequestItemID": 0,
                                            "PODeliveryLocationID": 0,
                                            "Description": "string",
                                            "Quantity": 0,
                                            "UnitCostSrc": 0,
                                            "IsInclusive": true,
                                            "CurrencyID": 0,
                                            "CurrencyCode": "string",
                                            "ExchangeRate": 0,
                                            "TaxRateID": 0,
                                            "TaxRateCode": "string",
                                            "TaxAmount": 0,
                                            "ExclUnitCostSrc": 0,
                                            "UnitTaxSrc": 0,
                                            "InclUnitCostSrc": 0,
                                            "ItemTaxSrc": 0,
                                            "ExclItemCostSrc": 0,
                                            "InclItemCostSrc": 0,
                                            "ExclUnitCost": 0,
                                            "UnitTax": 0,
                                            "InclUnitCost": 0,
                                            "ItemTax": 0,
                                            "ExclItemCost": 0,
                                            "InclItemCost": 0,
                                            "Info": "string",
                                            "IsItemBudgetEdit": true
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/POItems({POItemID})": {
            "get": {
                "tags": [
                    "POItems"
                ],
                "summary": "POItem entity",
                "description": "Returns a single POItem entity",
                "operationId": "POItems_GetByPoitemid",
                "parameters": [
                    {
                        "name": "POItemID",
                        "in": "path",
                        "description": "Format - int64. key: POItemID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[POItem]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "CanLink": true,
                                            "POItemID": 0,
                                            "TenantID": 0,
                                            "POID": 0,
                                            "RequestItemID": 0,
                                            "PODeliveryLocationID": 0,
                                            "Description": "string",
                                            "Quantity": 0,
                                            "UnitCostSrc": 0,
                                            "IsInclusive": true,
                                            "CurrencyID": 0,
                                            "CurrencyCode": "string",
                                            "ExchangeRate": 0,
                                            "TaxRateID": 0,
                                            "TaxRateCode": "string",
                                            "TaxAmount": 0,
                                            "ExclUnitCostSrc": 0,
                                            "UnitTaxSrc": 0,
                                            "InclUnitCostSrc": 0,
                                            "ItemTaxSrc": 0,
                                            "ExclItemCostSrc": 0,
                                            "InclItemCostSrc": 0,
                                            "ExclUnitCost": 0,
                                            "UnitTax": 0,
                                            "InclUnitCost": 0,
                                            "ItemTax": 0,
                                            "ExclItemCost": 0,
                                            "InclItemCost": 0,
                                            "Info": "string",
                                            "IsItemBudgetEdit": true
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user/register": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "User_Get",
                "operationId": "User_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiUserRegisterGet200ApplicationJsonResponse"
                                },
                                "example": "string"
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiUserRegisterGet200TextJsonResponse"
                                },
                                "example": "string"
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiUserRegisterGet200ApplicationXmlResponse"
                                },
                                "example": "<ApiUserRegisterGet200ApplicationXmlResponse>string</ApiUserRegisterGet200ApplicationXmlResponse>"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiUserRegisterGet200TextXmlResponse"
                                },
                                "example": "<ApiUserRegisterGet200TextXmlResponse>string</ApiUserRegisterGet200TextXmlResponse>"
                            }
                        }
                    }
                }
            }
        },
        "/api/Employees": {
            "get": {
                "tags": [
                    "Employees"
                ],
                "summary": "Employees collection",
                "description": "Returns the entity set of Employees",
                "operationId": "Employees_Get",
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "CompanyID",
                        "in": "query",
                        "description": "Format - int64.",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[Employee]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "EmployeeID": 0,
                                            "TenantID": 0,
                                            "FxUserID": "00000000-0000-0000-0000-000000000000",
                                            "FirstName": "string",
                                            "LastName": "string",
                                            "EmployeeRef": "string",
                                            "Email": "string",
                                            "IsAway": true,
                                            "TimeZoneID": "string",
                                            "IsActive": true,
                                            "DefaultCompanyID": 0,
                                            "AADUserID": "00000000-0000-0000-0000-000000000000",
                                            "LDAPUserID": "string",
                                            "LocationID": 0,
                                            "DefaultInvoiceLocationID": 0,
                                            "DefaultPhysicalLocationID": 0
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Employees/CurrentUser": {
            "get": {
                "tags": [
                    "Employees"
                ],
                "summary": "Current User Employee entity",
                "description": "Returns the single employee entity for the Current User",
                "operationId": "Employees_CurrentProfile",
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a Boolean condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selects which properties to include in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Sorts the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Format - int32. Returns only the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Format - int32. Skips the first n results.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "$count",
                        "in": "query",
                        "description": "Includes a count of the matching results in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ODataResponse[List[Employee]]"
                                },
                                "example": {
                                    "@odata.context": "string",
                                    "value": [
                                        {
                                            "EmployeeID": 0,
                                            "TenantID": 0,
                                            "FxUserID": "00000000-0000-0000-0000-000000000000",
                                            "FirstName": "string",
                                            "LastName": "string",
                                            "EmployeeRef": "string",
                                            "Email": "string",
                                            "IsAway": true,
                                            "TimeZoneID": "string",
                                            "IsActive": true,
                                            "DefaultCompanyID": 0,
                                            "AADUserID": "00000000-0000-0000-0000-000000000000",
                                            "LDAPUserID": "string",
                                            "LocationID": 0,
                                            "DefaultInvoiceLocationID": 0,
                                            "DefaultPhysicalLocationID": 0
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Requests({RequestID})/ErpUpdate": {
            "put": {
                "tags": [
                    "Requests"
                ],
                "summary": "ERP Update - ID",
                "description": "Updates the given Request entity with the ERP Parameters",
                "operationId": "Requests_ErpUpdate2ByRequestid",
                "parameters": [
                    {
                        "name": "RequestID",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "ErpRef",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ErpMessage",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "IsSuccess",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/Requests/ErpUpdate": {
            "put": {
                "tags": [
                    "Requests"
                ],
                "summary": "ERP Update - Ref's",
                "description": "Updates the given Request entity with the ERP Parameters",
                "operationId": "Requests_ErpUpdate",
                "parameters": [
                    {
                        "name": "FraxionRef",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ErpRef",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ErpMessage",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "IsSuccess",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/Requests/SetExport": {
            "post": {
                "tags": [
                    "Requests"
                ],
                "summary": "Set Request Export",
                "description": "Sets the given Requests to Exported.",
                "operationId": "Requests_SetExport",
                "requestBody": {
                    "description": "SetExport action parameters",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Parameters-11"
                            },
                            "example": {
                                "RequestIDs": [
                                    0
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "ActionResult": {
                "type": "object"
            },
            "TimeZones": {
                "type": "object",
                "properties": {
                    "TimeZoneID": {
                        "type": "string"
                    },
                    "DisplayName": {
                        "type": "string"
                    }
                }
            },
            "NavigationLink": {
                "type": "object",
                "properties": {
                    "LinkID": {
                        "type": "string"
                    },
                    "LinkType": {
                        "type": "string"
                    },
                    "Enabled": {
                        "type": "boolean"
                    },
                    "Link": {
                        "type": "string"
                    }
                }
            },
            "ODataResponse[List[viewAlert]]": {
                "type": "object",
                "properties": {
                    "@odata.context": {
                        "type": "string"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/viewAlert"
                        }
                    }
                }
            },
            "viewAlert": {
                "type": "object",
                "properties": {
                    "AlertID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "AlertTypeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "AlertPolicyID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "Description": {
                        "type": "string"
                    },
                    "RequestID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "InvoiceID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "ProformaInvoiceID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "POID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "SupplierID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "DocumentDescription": {
                        "type": "string"
                    },
                    "RequestTypeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "CreationDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "Info": {
                        "type": "string"
                    },
                    "IsActive": {
                        "type": "boolean"
                    },
                    "IsStatus": {
                        "type": "boolean"
                    },
                    "RecipientID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "AlertRecipientID": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "AlertType": {
                "required": [
                    "ResourceName"
                ],
                "type": "object",
                "properties": {
                    "AlertTypeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "ResourceName": {
                        "maxLength": 40,
                        "minLength": 0,
                        "type": "string"
                    },
                    "Description": {
                        "type": "string"
                    }
                }
            },
            "AlertPolicy": {
                "required": [
                    "AlertTypeID",
                    "Description",
                    "IsActive"
                ],
                "type": "object",
                "properties": {
                    "AlertPolicyID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "TenantID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "AlertTypeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "Description": {
                        "maxLength": 80,
                        "minLength": 0,
                        "type": "string"
                    },
                    "Rule": {
                        "type": "string"
                    },
                    "IsActive": {
                        "type": "boolean"
                    },
                    "PolicyRule": {
                        "type": "object"
                    }
                }
            },
            "Alert": {
                "type": "object",
                "properties": {
                    "AlertID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "AlertPolicyID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "RequestID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "InvoiceID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "POID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "SupplierID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "CreationDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "Info": {
                        "type": "string"
                    },
                    "IsActive": {
                        "type": "boolean"
                    },
                    "ProformaInvoiceID": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "AlertPolicySubscription": {
                "type": "object",
                "properties": {
                    "AlertPolicySubscriptionID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "AlertPolicyID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "ApprovalID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "EmployeeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "RoleID": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "AlertPolicyRuleHistory": {
                "type": "object",
                "properties": {
                    "AlertPolicyRuleHistoryID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "AlertPolicyID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "EmployeeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "DateStamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "UserAction": {
                        "type": "string"
                    },
                    "Info": {
                        "type": "string"
                    }
                }
            },
            "AlertPolicySubscriberHistory": {
                "type": "object",
                "properties": {
                    "AlertPolicySubscriberHistoryID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "AlertPolicyID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "ApprovalID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "SubscribedEmployeeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "RoleTypeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "EmployeeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "DateStamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "UserAction": {
                        "type": "string"
                    }
                }
            },
            "AlertNotificationHistory": {
                "type": "object",
                "properties": {
                    "AlertNotificationHistoryID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "AlertPolicyID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "AlertRecipientID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "EmployeeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "DateStamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "UserAction": {
                        "type": "string"
                    },
                    "SupplierID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "POID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "ProformaInvoiceID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "InvoiceID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "RequestID": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "Invoice": {
                "required": [
                    "CurrentStateID",
                    "InvoiceRef",
                    "InvoiceDate",
                    "SupplierID",
                    "ProcessorID",
                    "CompanyID",
                    "PostingDate"
                ],
                "type": "object",
                "properties": {
                    "InvoiceID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "TenantID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "RequestTypeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "CurrentStateID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "InvoiceRef": {
                        "maxLength": 40,
                        "minLength": 0,
                        "type": "string"
                    },
                    "InvoiceDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "SupplierID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "ProcessorID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "CompanyID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "TypeColumns": {
                        "type": "string"
                    },
                    "CustomColumns": {
                        "type": "string"
                    },
                    "InvoiceMpID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "ExIsError": {
                        "type": "boolean"
                    },
                    "ExInvoiceRef": {
                        "type": "string"
                    },
                    "ItemTaxTotal": {
                        "type": "number",
                        "format": "double"
                    },
                    "IsItemTax": {
                        "type": "boolean"
                    },
                    "PostingDate": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "PO": {
                "required": [
                    "CurrentStateID",
                    "CreatedByID",
                    "CreationDate",
                    "CompanyID",
                    "POCompanyID",
                    "SupplierID",
                    "POSupplierID"
                ],
                "type": "object",
                "properties": {
                    "FormattedPurchaseDate": {
                        "type": "string"
                    },
                    "ExclOrderAmount": {
                        "type": "string"
                    },
                    "TaxOrderAmount": {
                        "type": "string"
                    },
                    "InclOrderAmount": {
                        "type": "string"
                    },
                    "RequestTitle": {
                        "type": "string"
                    },
                    "POID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "TenantID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "CurrentStateID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "Reference": {
                        "maxLength": 40,
                        "minLength": 0,
                        "type": "string"
                    },
                    "CreatedByID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "CreationDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "CompanyID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "POCompanyID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "SupplierID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "POSupplierID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "PhysicalLocationID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "POPhysicalLocationID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "InvoiceLocationID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "POInvoiceLocationID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "PurchaserID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "POPurchaserID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "PurchaseDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "Comments": {
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string"
                    },
                    "ExReference": {
                        "type": "string"
                    },
                    "ExIsError": {
                        "type": "boolean"
                    },
                    "EmailDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "IsEmailError": {
                        "type": "boolean"
                    },
                    "ReportFileID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "Revision": {
                        "maxLength": 20,
                        "minLength": 0,
                        "type": "string"
                    },
                    "IsRevisionSubmitted": {
                        "type": "boolean"
                    },
                    "RevisionNumber": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "RecipientInfo": {
                        "type": "string"
                    }
                }
            },
            "Request": {
                "required": [
                    "CurrentStateID",
                    "Title",
                    "RequestorID",
                    "CompanyID"
                ],
                "type": "object",
                "properties": {
                    "TypeColumnList": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CustomColumn"
                        }
                    },
                    "CustomColumnList": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CustomColumn"
                        }
                    },
                    "RequestID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "TenantID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "RequestTypeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "CurrentStateID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "ReferenceNumber": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "Title": {
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string"
                    },
                    "RequestorID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "AssistantID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "CompanyID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "TypeColumns": {
                        "type": "string"
                    },
                    "CustomColumns": {
                        "type": "string"
                    },
                    "ExIsError": {
                        "type": "boolean"
                    },
                    "ExReferenceNumber": {
                        "maxLength": 40,
                        "minLength": 0,
                        "type": "string"
                    },
                    "RevisedPOID": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "Supplier": {
                "required": [
                    "Code",
                    "Name",
                    "IsActive",
                    "CurrentStateID",
                    "IsInvoiceLink"
                ],
                "type": "object",
                "properties": {
                    "CustomColumnList": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CustomColumn"
                        }
                    },
                    "SupplierID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "TenantID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "Code": {
                        "maxLength": 52,
                        "minLength": 0,
                        "type": "string"
                    },
                    "Name": {
                        "maxLength": 100,
                        "minLength": 0,
                        "type": "string"
                    },
                    "Contact": {
                        "maxLength": 40,
                        "minLength": 0,
                        "type": "string"
                    },
                    "PhoneNumber": {
                        "maxLength": 20,
                        "minLength": 0,
                        "type": "string"
                    },
                    "FaxNumber": {
                        "maxLength": 20,
                        "minLength": 0,
                        "type": "string"
                    },
                    "Email": {
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string"
                    },
                    "RegistrationNumber": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string"
                    },
                    "TaxRegistrationNumber": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string"
                    },
                    "BankAccountNumber": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string"
                    },
                    "BankingInfo": {
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string"
                    },
                    "PaymentTerms": {
                        "maxLength": 60,
                        "minLength": 0,
                        "type": "string"
                    },
                    "Address1": {
                        "maxLength": 80,
                        "minLength": 0,
                        "type": "string"
                    },
                    "Address2": {
                        "maxLength": 80,
                        "minLength": 0,
                        "type": "string"
                    },
                    "Address3": {
                        "maxLength": 80,
                        "minLength": 0,
                        "type": "string"
                    },
                    "Address4": {
                        "maxLength": 80,
                        "minLength": 0,
                        "type": "string"
                    },
                    "Locality": {
                        "maxLength": 80,
                        "minLength": 0,
                        "type": "string"
                    },
                    "Region": {
                        "maxLength": 80,
                        "minLength": 0,
                        "type": "string"
                    },
                    "PostalCode": {
                        "maxLength": 20,
                        "minLength": 0,
                        "type": "string"
                    },
                    "Country": {
                        "maxLength": 60,
                        "minLength": 0,
                        "type": "string"
                    },
                    "Coordinates": {
                        "maxLength": 30,
                        "minLength": 0,
                        "type": "string"
                    },
                    "IsActive": {
                        "type": "boolean"
                    },
                    "CreatedByID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "CurrentStateID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "FxSupplierID": {
                        "type": "string",
                        "format": "uuid",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "IsTravelServiceProvider": {
                        "type": "boolean"
                    },
                    "CompanyID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "CategoryID1": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "CategoryID2": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "CategoryID3": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "ApprovalID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "IsInvoiceLink": {
                        "type": "boolean"
                    },
                    "CurrencyID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "TaxRateID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "POEmail": {
                        "maxLength": 4096,
                        "minLength": 0,
                        "type": "string"
                    }
                }
            },
            "AlertRecipient": {
                "type": "object",
                "properties": {
                    "AlertRecipientID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "AlertID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "RecipientID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "CreationDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "AcknowledgedByID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "AcknowledgedDate": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "ProformaInvoice": {
                "required": [
                    "CurrentStateID",
                    "InvoiceRef",
                    "SupplierID",
                    "CompanyID",
                    "InvoiceDate",
                    "InclCostSrc",
                    "CurrencyID",
                    "CreatedByID"
                ],
                "type": "object",
                "properties": {
                    "SubmitButtonList": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommandButton"
                        }
                    },
                    "SubmitLinkList": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommandButton"
                        }
                    },
                    "ProformaInvoiceID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "TenantID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "CurrentStateID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "InvoiceRef": {
                        "maxLength": 40,
                        "minLength": 0,
                        "type": "string"
                    },
                    "SupplierID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "CompanyID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "InvoiceDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "InclCostSrc": {
                        "type": "number",
                        "format": "decimal"
                    },
                    "CurrencyID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "CreatedByID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "POReference": {
                        "maxLength": 1024,
                        "minLength": 0,
                        "type": "string"
                    },
                    "Remarks": {
                        "maxLength": 1024,
                        "minLength": 0,
                        "type": "string"
                    },
                    "InvoiceID": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "Employee": {
                "required": [
                    "TenantID",
                    "FirstName",
                    "LastName"
                ],
                "type": "object",
                "properties": {
                    "EmployeeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "TenantID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "FxUserID": {
                        "type": "string",
                        "format": "uuid",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "FirstName": {
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string"
                    },
                    "LastName": {
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string"
                    },
                    "EmployeeRef": {
                        "maxLength": 40,
                        "minLength": 0,
                        "type": "string"
                    },
                    "Email": {
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string"
                    },
                    "IsAway": {
                        "type": "boolean"
                    },
                    "TimeZoneID": {
                        "type": "string"
                    },
                    "IsActive": {
                        "type": "boolean"
                    },
                    "DefaultCompanyID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "AADUserID": {
                        "type": "string",
                        "format": "uuid",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "LDAPUserID": {
                        "type": "string"
                    },
                    "LocationID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "DefaultInvoiceLocationID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "DefaultPhysicalLocationID": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "Role": {
                "required": [
                    "RoleID"
                ],
                "type": "object",
                "properties": {
                    "RoleID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "ResourceName": {
                        "type": "string"
                    }
                }
            },
            "Approval": {
                "required": [
                    "Name",
                    "IsActive"
                ],
                "type": "object",
                "properties": {
                    "ApprovalID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "TenantID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "Name": {
                        "maxLength": 40,
                        "minLength": 0,
                        "type": "string"
                    },
                    "IsActive": {
                        "type": "boolean"
                    },
                    "IsRequest": {
                        "type": "boolean"
                    },
                    "IsInvoice": {
                        "type": "boolean"
                    },
                    "IsSupplier": {
                        "type": "boolean"
                    }
                }
            },
            "Company": {
                "required": [
                    "Code",
                    "Name",
                    "POReferenceMask",
                    "IsActive",
                    "CurrencyID",
                    "POHasAllocation",
                    "POHasDistributionList",
                    "IsInvoiceLink",
                    "PORevisionMask"
                ],
                "type": "object",
                "properties": {
                    "CompanyID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "TenantID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "Code": {
                        "maxLength": 20,
                        "minLength": 0,
                        "type": "string"
                    },
                    "Name": {
                        "maxLength": 80,
                        "minLength": 0,
                        "type": "string"
                    },
                    "RegistrationNumber": {
                        "maxLength": 40,
                        "minLength": 0,
                        "type": "string"
                    },
                    "TaxRegistrationNumber": {
                        "maxLength": 40,
                        "minLength": 0,
                        "type": "string"
                    },
                    "POReferenceMask": {
                        "maxLength": 40,
                        "minLength": 0,
                        "type": "string"
                    },
                    "IsActive": {
                        "type": "boolean"
                    },
                    "CurrencyID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "Terms": {
                        "type": "string"
                    },
                    "POHasAllocation": {
                        "type": "boolean"
                    },
                    "POHasDistributionList": {
                        "type": "boolean"
                    },
                    "IsInvoiceLink": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "TaxRateID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "PORevisionMask": {
                        "maxLength": 20,
                        "minLength": 0,
                        "type": "string"
                    },
                    "POTemplateID": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "CurrentState": {
                "required": [
                    "ResourceName"
                ],
                "type": "object",
                "properties": {
                    "CurrentStateID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "ResourceName": {
                        "maxLength": 40,
                        "minLength": 0,
                        "type": "string"
                    },
                    "Description": {
                        "type": "string"
                    }
                }
            },
            "DocumentFile": {
                "type": "object",
                "properties": {
                    "DocumentFileID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "RequestID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "RequestItemID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "InvoiceID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "InvoiceItemID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "FileID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "CompanyID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "SupplierID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "ReceiptID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "InvoiceMpID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "ProformaInvoiceID": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "DocumentNote": {
                "required": [
                    "NoteText",
                    "EmployeeID",
                    "CurrentStateID"
                ],
                "type": "object",
                "properties": {
                    "DocumentNoteID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "TenantID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "RequestID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "InvoiceID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "CreationDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "NoteText": {
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string"
                    },
                    "EmployeeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "CurrentStateID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "POID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "SupplierID": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "RequestTypeBase": {
                "required": [
                    "ResourceName",
                    "IsActive"
                ],
                "type": "object",
                "properties": {
                    "Description": {
                        "type": "string"
                    },
                    "RequestTypeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "ResourceName": {
                        "maxLength": 40,
                        "minLength": 0,
                        "type": "string"
                    },
                    "TypeColumns": {
                        "type": "string"
                    },
                    "Workflow": {
                        "type": "string"
                    },
                    "IsActive": {
                        "type": "boolean"
                    },
                    "WorkflowJSON": {
                        "type": "string"
                    }
                }
            },
            "InvoiceHistory": {
                "type": "object",
                "properties": {
                    "InvoiceHistoryID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "InvoiceID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "EmployeeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "CurrentStateID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "DateStamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "UserAction": {
                        "type": "string"
                    },
                    "Info": {
                        "type": "string"
                    },
                    "Note": {
                        "type": "string"
                    }
                }
            },
            "InvoiceItem": {
                "required": [
                    "Description",
                    "Quantity",
                    "UnitCostSrc",
                    "IsInclusive",
                    "CurrencyID",
                    "ExchangeRate",
                    "TaxRateID",
                    "TaxAmount"
                ],
                "type": "object",
                "properties": {
                    "InvoiceItemID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "TenantID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "RequestItemTypeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "InvoiceID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "Description": {
                        "maxLength": 120,
                        "minLength": 0,
                        "type": "string"
                    },
                    "Quantity": {
                        "type": "number",
                        "format": "double"
                    },
                    "UnitCostSrc": {
                        "type": "number",
                        "format": "double"
                    },
                    "IsInclusive": {
                        "type": "boolean"
                    },
                    "CurrencyID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "ExchangeRate": {
                        "type": "number",
                        "format": "double"
                    },
                    "TaxRateID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "TaxAmount": {
                        "type": "number",
                        "format": "double"
                    },
                    "POItemID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "TypeColumns": {
                        "type": "string"
                    },
                    "CustomColumns": {
                        "type": "string"
                    },
                    "ExclUnitCostSrc": {
                        "type": "number",
                        "format": "double"
                    },
                    "UnitTaxSrc": {
                        "type": "number",
                        "format": "double"
                    },
                    "InclUnitCostSrc": {
                        "type": "number",
                        "format": "double"
                    },
                    "ItemTaxSrc": {
                        "type": "number",
                        "format": "double"
                    },
                    "ExclItemCostSrc": {
                        "type": "number",
                        "format": "double"
                    },
                    "InclItemCostSrc": {
                        "type": "number",
                        "format": "double"
                    },
                    "ExclUnitCost": {
                        "type": "number",
                        "format": "double"
                    },
                    "UnitTax": {
                        "type": "number",
                        "format": "double"
                    },
                    "InclUnitCost": {
                        "type": "number",
                        "format": "double"
                    },
                    "ItemTax": {
                        "type": "number",
                        "format": "double"
                    },
                    "ExclItemCost": {
                        "type": "number",
                        "format": "double"
                    },
                    "InclItemCost": {
                        "type": "number",
                        "format": "double"
                    },
                    "POID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "ApprovalID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "FileUploadFileID": {
                        "type": "string"
                    },
                    "BudgetColumnList": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BudgetColumn"
                        }
                    }
                }
            },
            "ExportDocument": {
                "type": "object",
                "properties": {
                    "ExportDocumentID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "ExportID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "RequestID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "InvoiceID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "POID": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "DocumentAssignment": {
                "required": [
                    "AssignmentStateID",
                    "AssigneeID"
                ],
                "type": "object",
                "properties": {
                    "DocumentAssignmentID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "RequestID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "InvoiceID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "AssignmentStateID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "FirstAssignorID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "AssignorID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "AssigneeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "HistoryNote": {
                        "type": "string"
                    },
                    "OldAssigneeID": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "InvoiceMp": {
                "type": "object",
                "properties": {
                    "InvoiceMpID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "TenantID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "CurrentStateID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "CreationDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "InvoiceRef": {
                        "maxLength": 40,
                        "minLength": 0,
                        "type": "string"
                    },
                    "InvoiceDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "InclTotalCostSrc": {
                        "type": "number",
                        "format": "decimal"
                    },
                    "ExInvoiceID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "ExCreatedByName": {
                        "type": "string"
                    },
                    "ExCompanyID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "ExCompanyName": {
                        "type": "string"
                    },
                    "ExCurrencyCode": {
                        "type": "string"
                    },
                    "FxSupplierID": {
                        "type": "string",
                        "format": "uuid",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "ExApplicationID": {
                        "type": "string",
                        "format": "uuid",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "ExTenantID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "SubmitButtonList": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommandButton"
                        }
                    },
                    "SubmitLinkList": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommandButton"
                        }
                    }
                }
            },
            "DocumentApproval": {
                "type": "object",
                "properties": {
                    "DocumentApprovalID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "RequestID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "InvoiceID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "SupplierID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "ApprovalID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "ApprovalOrder": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "EmployeeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "IsFinal": {
                        "type": "boolean"
                    }
                }
            },
            "CommandButton": {
                "type": "object",
                "properties": {
                    "ID": {
                        "type": "string"
                    },
                    "Text": {
                        "type": "string"
                    },
                    "DescriptionText": {
                        "type": "string"
                    },
                    "UserAction": {
                        "enum": [
                            0,
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7,
                            8,
                            9,
                            10,
                            11,
                            12,
                            13,
                            14,
                            15,
                            16,
                            17,
                            18,
                            19,
                            20,
                            21,
                            22,
                            23,
                            24,
                            25,
                            26,
                            27,
                            28,
                            29,
                            30,
                            31,
                            32,
                            33
                        ],
                        "type": "integer",
                        "format": "int32"
                    },
                    "ButtonStyle": {
                        "type": "string"
                    },
                    "Icon": {
                        "type": "string"
                    },
                    "LinkType": {
                        "type": "string"
                    },
                    "Enabled": {
                        "type": "boolean"
                    },
                    "Link": {
                        "type": "string"
                    }
                }
            },
            "CustomColumn": {
                "type": "object",
                "properties": {
                    "Name": {
                        "type": "string"
                    },
                    "DataType": {
                        "enum": [
                            0,
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7
                        ],
                        "type": "integer",
                        "format": "int32"
                    },
                    "MaxLength": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Required": {
                        "type": "boolean"
                    },
                    "Label": {
                        "type": "string"
                    },
                    "Description": {
                        "type": "string"
                    },
                    "ControlType": {
                        "enum": [
                            0,
                            1,
                            2,
                            3,
                            4,
                            5
                        ],
                        "type": "integer",
                        "format": "int32"
                    },
                    "ReadOnly": {
                        "type": "boolean"
                    },
                    "Colspan": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "CtrlColspan": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "DefaultValue": {
                        "type": "object"
                    },
                    "IsDisplayed": {
                        "type": "boolean"
                    },
                    "LookupID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "BuiltinID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "LookupValue": {
                        "type": "string"
                    },
                    "Value": {
                        "type": "object"
                    }
                }
            },
            "Location": {
                "required": [
                    "Name",
                    "IsActive"
                ],
                "type": "object",
                "properties": {
                    "LocationID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "TenantID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "Name": {
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string"
                    },
                    "Address1": {
                        "maxLength": 80,
                        "minLength": 0,
                        "type": "string"
                    },
                    "Address2": {
                        "maxLength": 80,
                        "minLength": 0,
                        "type": "string"
                    },
                    "Address3": {
                        "maxLength": 80,
                        "minLength": 0,
                        "type": "string"
                    },
                    "Address4": {
                        "maxLength": 80,
                        "minLength": 0,
                        "type": "string"
                    },
                    "Locality": {
                        "maxLength": 80,
                        "minLength": 0,
                        "type": "string"
                    },
                    "Region": {
                        "maxLength": 80,
                        "minLength": 0,
                        "type": "string"
                    },
                    "PostalCode": {
                        "maxLength": 20,
                        "minLength": 0,
                        "type": "string"
                    },
                    "Country": {
                        "maxLength": 60,
                        "minLength": 0,
                        "type": "string"
                    },
                    "Coordinates": {
                        "maxLength": 30,
                        "minLength": 0,
                        "type": "string"
                    },
                    "Contact": {
                        "maxLength": 40,
                        "minLength": 0,
                        "type": "string"
                    },
                    "PhoneNumber": {
                        "maxLength": 20,
                        "minLength": 0,
                        "type": "string"
                    },
                    "FaxNumber": {
                        "maxLength": 20,
                        "minLength": 0,
                        "type": "string"
                    },
                    "Email": {
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string"
                    },
                    "IsActive": {
                        "type": "boolean"
                    },
                    "TaxRateID": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "POCompany": {
                "type": "object",
                "properties": {
                    "POCompanyID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "Name": {
                        "type": "string"
                    }
                }
            },
            "POLocation": {
                "type": "object",
                "properties": {
                    "Description": {
                        "type": "string"
                    },
                    "LongDescription": {
                        "type": "string"
                    },
                    "POLocationID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "Name": {
                        "type": "string"
                    },
                    "Address1": {
                        "type": "string"
                    },
                    "Address2": {
                        "type": "string"
                    },
                    "Address3": {
                        "type": "string"
                    },
                    "Address4": {
                        "type": "string"
                    },
                    "Locality": {
                        "type": "string"
                    },
                    "Region": {
                        "type": "string"
                    },
                    "PostalCode": {
                        "type": "string"
                    },
                    "Country": {
                        "type": "string"
                    },
                    "Coordinates": {
                        "type": "string"
                    },
                    "Contact": {
                        "type": "string"
                    },
                    "PhoneNumber": {
                        "type": "string"
                    },
                    "FaxNumber": {
                        "type": "string"
                    },
                    "Email": {
                        "type": "string"
                    }
                }
            },
            "POPurchaser": {
                "required": [
                    "POPurchaserID",
                    "Name"
                ],
                "type": "object",
                "properties": {
                    "POPurchaserID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "Name": {
                        "maxLength": 40,
                        "minLength": 0,
                        "type": "string"
                    },
                    "PhoneNumber": {
                        "maxLength": 20,
                        "minLength": 0,
                        "type": "string"
                    },
                    "FaxNumber": {
                        "maxLength": 20,
                        "minLength": 0,
                        "type": "string"
                    },
                    "Email": {
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string"
                    }
                }
            },
            "POSupplier": {
                "type": "object",
                "properties": {
                    "Description": {
                        "type": "string"
                    },
                    "LongDescription": {
                        "type": "string"
                    },
                    "POSupplierID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "Name": {
                        "type": "string"
                    },
                    "Contact": {
                        "type": "string"
                    },
                    "PhoneNumber": {
                        "type": "string"
                    },
                    "FaxNumber": {
                        "type": "string"
                    },
                    "Email": {
                        "type": "string"
                    },
                    "RegistrationNumber": {
                        "type": "string"
                    },
                    "TaxRegistrationNumber": {
                        "type": "string"
                    },
                    "BankAccountNumber": {
                        "type": "string"
                    },
                    "BankingInfo": {
                        "type": "string"
                    },
                    "PaymentTerms": {
                        "type": "string"
                    },
                    "Address1": {
                        "type": "string"
                    },
                    "Address2": {
                        "type": "string"
                    },
                    "Address3": {
                        "type": "string"
                    },
                    "Address4": {
                        "type": "string"
                    },
                    "Locality": {
                        "type": "string"
                    },
                    "Region": {
                        "type": "string"
                    },
                    "PostalCode": {
                        "type": "string"
                    },
                    "Country": {
                        "type": "string"
                    },
                    "Coordinates": {
                        "type": "string"
                    },
                    "POEmail": {
                        "type": "string"
                    }
                }
            },
            "POHistory": {
                "type": "object",
                "properties": {
                    "POHistoryID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "POID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "EmployeeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "CurrentStateID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "DateStamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "UserAction": {
                        "type": "string"
                    },
                    "Info": {
                        "type": "string"
                    },
                    "Note": {
                        "type": "string"
                    }
                }
            },
            "POItem": {
                "required": [
                    "Description",
                    "Quantity",
                    "UnitCostSrc",
                    "CurrencyID",
                    "CurrencyCode",
                    "ExchangeRate",
                    "TaxAmount"
                ],
                "type": "object",
                "properties": {
                    "CanLink": {
                        "type": "boolean"
                    },
                    "POItemID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "TenantID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "POID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "RequestItemID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "PODeliveryLocationID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "Description": {
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string"
                    },
                    "Quantity": {
                        "type": "number",
                        "format": "decimal"
                    },
                    "UnitCostSrc": {
                        "type": "number",
                        "format": "decimal"
                    },
                    "IsInclusive": {
                        "type": "boolean"
                    },
                    "CurrencyID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "CurrencyCode": {
                        "maxLength": 20,
                        "minLength": 0,
                        "type": "string"
                    },
                    "ExchangeRate": {
                        "type": "number",
                        "format": "decimal"
                    },
                    "TaxRateID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "TaxRateCode": {
                        "maxLength": 20,
                        "minLength": 0,
                        "type": "string"
                    },
                    "TaxAmount": {
                        "type": "number",
                        "format": "decimal"
                    },
                    "ExclUnitCostSrc": {
                        "type": "number",
                        "format": "double"
                    },
                    "UnitTaxSrc": {
                        "type": "number",
                        "format": "double"
                    },
                    "InclUnitCostSrc": {
                        "type": "number",
                        "format": "double"
                    },
                    "ItemTaxSrc": {
                        "type": "number",
                        "format": "decimal"
                    },
                    "ExclItemCostSrc": {
                        "type": "number",
                        "format": "double"
                    },
                    "InclItemCostSrc": {
                        "type": "number",
                        "format": "double"
                    },
                    "ExclUnitCost": {
                        "type": "number",
                        "format": "double"
                    },
                    "UnitTax": {
                        "type": "number",
                        "format": "double"
                    },
                    "InclUnitCost": {
                        "type": "number",
                        "format": "double"
                    },
                    "ItemTax": {
                        "type": "number",
                        "format": "double"
                    },
                    "ExclItemCost": {
                        "type": "number",
                        "format": "double"
                    },
                    "InclItemCost": {
                        "type": "number",
                        "format": "double"
                    },
                    "Info": {
                        "type": "string"
                    },
                    "IsItemBudgetEdit": {
                        "type": "boolean"
                    }
                }
            },
            "PO2Marketplace": {
                "type": "object",
                "properties": {
                    "POID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "FileName": {
                        "type": "string"
                    },
                    "ContentType": {
                        "type": "string"
                    },
                    "FileImage": {
                        "type": "string",
                        "format": "byte"
                    },
                    "CreationDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "TransferDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "ErrorCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "CurrentStateID": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "InvoiceMpPO": {
                "type": "object",
                "properties": {
                    "InvoiceMpID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "POID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "ExPOID": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "UniquePOItem": {
                "type": "object",
                "properties": {
                    "RequestItemID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "DateStamp": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "RequestHistory": {
                "type": "object",
                "properties": {
                    "RequestHistoryID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "RequestID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "EmployeeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "CurrentStateID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "DateStamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "UserAction": {
                        "type": "string"
                    },
                    "Info": {
                        "type": "string"
                    },
                    "Note": {
                        "type": "string"
                    }
                }
            },
            "RequestItem": {
                "required": [
                    "Description",
                    "Quantity",
                    "UnitCostSrc",
                    "IsInclusive",
                    "CurrencyID",
                    "ExchangeRate",
                    "TaxAmount"
                ],
                "type": "object",
                "properties": {
                    "FileUploadFileID": {
                        "type": "string"
                    },
                    "TypeColumnList": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CustomColumn"
                        }
                    },
                    "CustomColumnList": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CustomColumn"
                        }
                    },
                    "BudgetColumnList": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BudgetColumn"
                        }
                    },
                    "RequestItemID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "TenantID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "RequestItemTypeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "RequestID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "Description": {
                        "maxLength": 120,
                        "minLength": 0,
                        "type": "string"
                    },
                    "DateStamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "Quantity": {
                        "type": "number",
                        "format": "double"
                    },
                    "UnitCostSrc": {
                        "type": "number",
                        "format": "double"
                    },
                    "IsInclusive": {
                        "type": "boolean"
                    },
                    "CurrencyID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "ExchangeRate": {
                        "type": "number",
                        "format": "double"
                    },
                    "TaxRateID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "TaxAmount": {
                        "type": "number",
                        "format": "double"
                    },
                    "ApprovalID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "SupplierID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "DeliveryLocationID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "TypeColumns": {
                        "type": "string"
                    },
                    "CustomColumns": {
                        "type": "string"
                    },
                    "ExclUnitCostSrc": {
                        "type": "number",
                        "format": "double"
                    },
                    "UnitTaxSrc": {
                        "type": "number",
                        "format": "double"
                    },
                    "InclUnitCostSrc": {
                        "type": "number",
                        "format": "double"
                    },
                    "ItemTaxSrc": {
                        "type": "number",
                        "format": "double"
                    },
                    "ExclItemCostSrc": {
                        "type": "number",
                        "format": "double"
                    },
                    "InclItemCostSrc": {
                        "type": "number",
                        "format": "double"
                    },
                    "ExclUnitCost": {
                        "type": "number",
                        "format": "double"
                    },
                    "UnitTax": {
                        "type": "number",
                        "format": "double"
                    },
                    "InclUnitCost": {
                        "type": "number",
                        "format": "double"
                    },
                    "ItemTax": {
                        "type": "number",
                        "format": "double"
                    },
                    "ExclItemCost": {
                        "type": "number",
                        "format": "double"
                    },
                    "InclItemCost": {
                        "type": "number",
                        "format": "double"
                    },
                    "RequestorID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "ServiceSupplierID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "RevisedPOItemID": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "viewRequestLastDate": {
                "type": "object",
                "properties": {
                    "RequestID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "Create": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "Assign": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "Quote": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "Review": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "Submit": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "Recall": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "Reject": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "Approve": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "Purchase": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "Close": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "SupplierHistory": {
                "type": "object",
                "properties": {
                    "SupplierHistoryID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "SupplierID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "EmployeeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "DateStamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "UserAction": {
                        "type": "string"
                    },
                    "Info": {
                        "type": "string"
                    },
                    "Note": {
                        "type": "string"
                    },
                    "CurrentStateID": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "LookupItem": {
                "required": [
                    "Value",
                    "IsActive"
                ],
                "type": "object",
                "properties": {
                    "LookupItemID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "TenantID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "LookupID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "Value": {
                        "maxLength": 80,
                        "minLength": 0,
                        "type": "string"
                    },
                    "FilterByCompanyID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "FilterByLookupItemID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "IsActive": {
                        "type": "boolean"
                    },
                    "Custom1": {
                        "maxLength": 80,
                        "minLength": 0,
                        "type": "string"
                    }
                }
            },
            "Currency": {
                "required": [
                    "Code",
                    "Name",
                    "IsActive"
                ],
                "type": "object",
                "properties": {
                    "CurrencyID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "TenantID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "Code": {
                        "maxLength": 20,
                        "minLength": 0,
                        "type": "string"
                    },
                    "Name": {
                        "maxLength": 80,
                        "minLength": 0,
                        "type": "string"
                    },
                    "IsActive": {
                        "type": "boolean"
                    }
                }
            },
            "TaxRate": {
                "required": [
                    "Code",
                    "Name",
                    "Value",
                    "IsDefault",
                    "IsActive"
                ],
                "type": "object",
                "properties": {
                    "TaxRateID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "TenantID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "Code": {
                        "maxLength": 20,
                        "minLength": 0,
                        "type": "string"
                    },
                    "Name": {
                        "maxLength": 80,
                        "minLength": 0,
                        "type": "string"
                    },
                    "Value": {
                        "type": "number",
                        "format": "decimal"
                    },
                    "IsDefault": {
                        "type": "boolean"
                    },
                    "IsActive": {
                        "type": "boolean"
                    }
                }
            },
            "ProformaInvoiceHistory": {
                "type": "object",
                "properties": {
                    "ProformaInvoiceHistoryID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "ProformaInvoiceID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "EmployeeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "CurrentStateID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "DateStamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "UserAction": {
                        "type": "string"
                    },
                    "Info": {
                        "type": "string"
                    },
                    "Note": {
                        "type": "string"
                    }
                }
            },
            "ProcessRole": {
                "required": [
                    "RequestTypeID",
                    "EmployeeID",
                    "RoleID"
                ],
                "type": "object",
                "properties": {
                    "IsStatus": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "RequestTypeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "EmployeeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "RoleID": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "RequestItemHistory": {
                "type": "object",
                "properties": {
                    "RequestItemHistoryID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "RequestItemID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "EmployeeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "DateStamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "UserAction": {
                        "type": "string"
                    },
                    "Info": {
                        "type": "string"
                    }
                }
            },
            "RequestTypeWorkflow": {
                "required": [
                    "Description",
                    "CreatedByID",
                    "IsValid",
                    "IsActive"
                ],
                "type": "object",
                "properties": {
                    "RequestTypeWorkflowID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "TenantID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "RequestTypeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "Description": {
                        "type": "string"
                    },
                    "Workflow": {
                        "type": "string"
                    },
                    "CreatedByID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "CreationDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "ModifiedByID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "ModifiedDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "ActivatedByID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "ActivatedDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "IsValid": {
                        "type": "boolean"
                    },
                    "IsActive": {
                        "type": "boolean"
                    },
                    "WorkflowJSON": {
                        "type": "string"
                    }
                }
            },
            "Invitation": {
                "required": [
                    "Email"
                ],
                "type": "object",
                "properties": {
                    "InvitationID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "TenantID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "InviterID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "DateStamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "Email": {
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string"
                    },
                    "FxUserID": {
                        "type": "string",
                        "format": "uuid",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "Roles": {
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string"
                    },
                    "InviterName": {
                        "type": "string"
                    },
                    "InviterEmail": {
                        "type": "string"
                    },
                    "IsStatus": {
                        "type": "boolean"
                    },
                    "Note": {
                        "type": "string"
                    },
                    "AllowDuplicate": {
                        "type": "boolean"
                    }
                }
            },
            "Export": {
                "required": [
                    "CreatedByID",
                    "RequestTypeID",
                    "IsActive"
                ],
                "type": "object",
                "properties": {
                    "ExportID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "TenantID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "CreatedByID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "CreationDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "RequestTypeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "IsActive": {
                        "type": "boolean"
                    },
                    "HasRequest": {
                        "type": "boolean"
                    },
                    "HasPO": {
                        "type": "boolean"
                    },
                    "HasInvoice": {
                        "type": "boolean"
                    },
                    "Description": {
                        "type": "string"
                    },
                    "CreatedByName": {
                        "type": "string"
                    },
                    "RequestTypeName": {
                        "type": "string"
                    },
                    "HistoryNote": {
                        "type": "string"
                    },
                    "HasReceipt": {
                        "type": "boolean"
                    }
                }
            },
            "ExportHistory": {
                "type": "object",
                "properties": {
                    "ExportHistoryID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "ExportID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "EmployeeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "DateStamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "Note": {
                        "type": "string"
                    }
                }
            },
            "ReceiptHistory": {
                "type": "object",
                "properties": {
                    "ReceiptHistoryID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "ReceiptID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "EmployeeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "DateStamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "UserAction": {
                        "type": "string"
                    },
                    "Info": {
                        "type": "string"
                    },
                    "Note": {
                        "type": "string"
                    }
                }
            },
            "InvoiceMpHistory": {
                "type": "object",
                "properties": {
                    "InvoiceMpHistoryID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "InvoiceMpID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "EmployeeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "CurrentStateID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "DateStamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "UserAction": {
                        "type": "string"
                    },
                    "Info": {
                        "type": "string"
                    },
                    "Note": {
                        "type": "string"
                    }
                }
            },
            "InvoiceMp2Marketplace": {
                "type": "object",
                "properties": {
                    "InvoiceMpID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "CreationDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "ActionDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "TransferDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "ErrorCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "CurrentStateID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "EmployeeID": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "InvoiceItemHistory": {
                "type": "object",
                "properties": {
                    "InvoiceItemHistoryID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "InvoiceItemID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "EmployeeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "DateStamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "UserAction": {
                        "type": "string"
                    },
                    "Info": {
                        "type": "string"
                    }
                }
            },
            "Approver": {
                "required": [
                    "ApprovalID",
                    "EmployeeID",
                    "ApprovalOrder"
                ],
                "type": "object",
                "properties": {
                    "ApproverID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "TenantID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "ApprovalID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "EmployeeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "ApprovalOrder": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "CanEditCore": {
                        "type": "boolean"
                    },
                    "CanEditBudget": {
                        "type": "boolean"
                    },
                    "CanEditCustom": {
                        "type": "boolean"
                    },
                    "Rule": {
                        "type": "string"
                    },
                    "IsApprover": {
                        "type": "boolean"
                    },
                    "PolicyRule": {
                        "type": "object"
                    },
                    "Proxies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Employee"
                        }
                    }
                }
            },
            "Receipt": {
                "required": [
                    "Quantity",
                    "UnitCostSrc",
                    "IsActive",
                    "DateReceived",
                    "ReceiverID"
                ],
                "type": "object",
                "properties": {
                    "CustomColumnList": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CustomColumn"
                        }
                    },
                    "ReceiptID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "TenantID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "POItemID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "Quantity": {
                        "type": "number",
                        "format": "decimal"
                    },
                    "UnitCostSrc": {
                        "type": "number",
                        "format": "decimal"
                    },
                    "IsActive": {
                        "type": "boolean"
                    },
                    "DeliveryNoteNumber": {
                        "maxLength": 1024,
                        "minLength": 0,
                        "type": "string"
                    },
                    "DateReceived": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "ReceiverID": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "ReportFile": {
                "type": "object",
                "properties": {
                    "ReportFileID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "TenantID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "EmployeeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "StartDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "ReadyDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "FileName": {
                        "type": "string"
                    },
                    "ContentType": {
                        "type": "string"
                    },
                    "FileImage": {
                        "type": "string",
                        "format": "byte"
                    },
                    "CreationDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "IsError": {
                        "type": "boolean"
                    },
                    "ReportAction": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "DocumentTypeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "FileCulture": {
                        "type": "string"
                    },
                    "DocumentID": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "EmployeeHistory": {
                "type": "object",
                "properties": {
                    "EmployeeHistoryID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "EmployeeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "DateStamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "UserAction": {
                        "type": "string"
                    },
                    "Info": {
                        "type": "string"
                    },
                    "CurrentUserID": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "ApprovalHistory": {
                "type": "object",
                "properties": {
                    "ApprovalHistoryID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "ApprovalID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "CurrentUserID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "DateStamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "UserAction": {
                        "type": "string"
                    },
                    "Info": {
                        "type": "string"
                    }
                }
            },
            "CostCenter": {
                "type": "object",
                "properties": {
                    "CostCenterID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "TenantID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "CostCenterMaskID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLAccountID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLSegmentID": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "CompanyHistory": {
                "type": "object",
                "properties": {
                    "CompanyHistoryID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "CompanyID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "EmployeeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "DateStamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "UserAction": {
                        "type": "string"
                    },
                    "Info": {
                        "type": "string"
                    }
                }
            },
            "CompanyLocationHistory": {
                "type": "object",
                "properties": {
                    "CompanyLocationHistoryID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "CompanyID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "EmployeeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "DateStamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "UserAction": {
                        "type": "string"
                    },
                    "Info": {
                        "type": "string"
                    }
                }
            },
            "InvitationHistory": {
                "type": "object",
                "properties": {
                    "InvitationHistoryID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "InvitationID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "EmployeeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "DateStamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "UserAction": {
                        "type": "string"
                    },
                    "Info": {
                        "type": "string"
                    }
                }
            },
            "CostCenterMaskHistory": {
                "type": "object",
                "properties": {
                    "CostCenterMaskHistoryID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLCodeMaskID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "EmployeeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "DateStamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "UserAction": {
                        "type": "string"
                    },
                    "Info": {
                        "type": "string"
                    }
                }
            },
            "CurrencyHistory": {
                "type": "object",
                "properties": {
                    "CurrencyHistoryID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "CurrencyID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "EmployeeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "DateStamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "UserAction": {
                        "type": "string"
                    },
                    "Info": {
                        "type": "string"
                    }
                }
            },
            "ExchangeRateHistory": {
                "type": "object",
                "properties": {
                    "ExchangeRateHistoryID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "CurrencyID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "EmployeeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "DateStamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "UserAction": {
                        "type": "string"
                    },
                    "Info": {
                        "type": "string"
                    }
                }
            },
            "FinancialPeriodHistory": {
                "type": "object",
                "properties": {
                    "FinancialPeriodHistoryID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "FinancialYearID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "EmployeeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "DateStamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "UserAction": {
                        "type": "string"
                    },
                    "Info": {
                        "type": "string"
                    }
                }
            },
            "FinancialYearHistory": {
                "type": "object",
                "properties": {
                    "FinancialYearHistoryID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "FinancialYearID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "EmployeeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "DateStamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "UserAction": {
                        "type": "string"
                    },
                    "Info": {
                        "type": "string"
                    }
                }
            },
            "GLAccountHistory": {
                "type": "object",
                "properties": {
                    "GLAccountHistoryID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLCodeMaskID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "EmployeeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "DateStamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "UserAction": {
                        "type": "string"
                    },
                    "Info": {
                        "type": "string"
                    }
                }
            },
            "GLCodeMaskHistory": {
                "type": "object",
                "properties": {
                    "GLCodeMaskHistoryID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLCodeMaskID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "EmployeeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "DateStamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "UserAction": {
                        "type": "string"
                    },
                    "Info": {
                        "type": "string"
                    }
                }
            },
            "GLSegmentHistory": {
                "type": "object",
                "properties": {
                    "GLSegmentHistoryID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLSegmentNameID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "EmployeeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "DateStamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "UserAction": {
                        "type": "string"
                    },
                    "Info": {
                        "type": "string"
                    }
                }
            },
            "GLSegmentNameHistory": {
                "type": "object",
                "properties": {
                    "GLSegmentNameHistoryID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLSegmentNameID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "EmployeeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "DateStamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "UserAction": {
                        "type": "string"
                    },
                    "Info": {
                        "type": "string"
                    }
                }
            },
            "LocationHistory": {
                "type": "object",
                "properties": {
                    "LocationHistoryID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "LocationID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "EmployeeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "DateStamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "UserAction": {
                        "type": "string"
                    },
                    "Info": {
                        "type": "string"
                    }
                }
            },
            "LookupHistory": {
                "type": "object",
                "properties": {
                    "LookupHistoryID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "LookupID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "EmployeeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "DateStamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "UserAction": {
                        "type": "string"
                    },
                    "Info": {
                        "type": "string"
                    }
                }
            },
            "LookupItemHistory": {
                "type": "object",
                "properties": {
                    "LookupItemHistoryID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "LookupID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "EmployeeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "DateStamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "UserAction": {
                        "type": "string"
                    },
                    "Info": {
                        "type": "string"
                    }
                }
            },
            "TaxRateHistory": {
                "type": "object",
                "properties": {
                    "TaxRateHistoryID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "TaxRateID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "EmployeeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "DateStamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "UserAction": {
                        "type": "string"
                    },
                    "Info": {
                        "type": "string"
                    }
                }
            },
            "ClosePolicyHistory": {
                "type": "object",
                "properties": {
                    "ClosePolicyHistoryID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "RequestTypeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "TenantID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "EmployeeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "DateStamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "UserAction": {
                        "type": "string"
                    },
                    "Info": {
                        "type": "string"
                    }
                }
            },
            "BudgetFieldHistory": {
                "type": "object",
                "properties": {
                    "BudgetFieldHistoryID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "RequestItemTypeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "TenantID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "EmployeeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "DateStamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "UserAction": {
                        "type": "string"
                    },
                    "Info": {
                        "type": "string"
                    }
                }
            },
            "CustomFieldHistory": {
                "type": "object",
                "properties": {
                    "CustomFieldHistoryID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "RequestTypeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "RequestItemTypeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "TenantID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "EmployeeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "DateStamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "UserAction": {
                        "type": "string"
                    },
                    "Info": {
                        "type": "string"
                    }
                }
            },
            "TenantHistory": {
                "type": "object",
                "properties": {
                    "TenantHistoryID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "TenantID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "EmployeeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "DateStamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "UserAction": {
                        "type": "string"
                    },
                    "Info": {
                        "type": "string"
                    }
                }
            },
            "RequestTypeWorkflowHistory": {
                "type": "object",
                "properties": {
                    "RequestTypeWorkflowHistoryID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "RequestTypeWorkflowID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "EmployeeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "DateStamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "UserAction": {
                        "type": "string"
                    },
                    "Info": {
                        "type": "string"
                    }
                }
            },
            "BudgetHistory": {
                "type": "object",
                "properties": {
                    "BudgetHistoryID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "FinancialYearID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLSegmentID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLAccountID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "EmployeeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "DateStamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "UserAction": {
                        "type": "string"
                    },
                    "Note": {
                        "type": "string"
                    },
                    "Info": {
                        "type": "string"
                    }
                }
            },
            "CAApproval": {
                "required": [
                    "Name"
                ],
                "type": "object",
                "properties": {
                    "CAApprovalID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "TenantID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLCodeMaskID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "Name": {
                        "maxLength": 512,
                        "minLength": 0,
                        "type": "string"
                    },
                    "IsActive": {
                        "type": "boolean"
                    }
                }
            },
            "CAApprovalHistory": {
                "type": "object",
                "properties": {
                    "CAApprovalHistoryID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "CAApprovalID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "EmployeeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "DateStamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "UserAction": {
                        "type": "string"
                    },
                    "Info": {
                        "type": "string"
                    }
                }
            },
            "ItemBudgetApproval": {
                "type": "object",
                "properties": {
                    "ItemBudgetApprovalID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "RequestItemID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "InvoiceItemID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "CostCenterMaskID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLAccountID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLSegmentID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "CostCenterID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "ApprovalID": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "GLCodeMask": {
                "required": [
                    "GLSegmentNameID_01",
                    "IsDynamic",
                    "IsActive",
                    "IsLinkToCompany",
                    "IsImportedActuals",
                    "UseEmployeeCAA"
                ],
                "type": "object",
                "properties": {
                    "GLCodeMaskID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "TenantID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLSegmentNameID_01": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLSegmentNameID_02": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLSegmentNameID_03": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLSegmentNameID_04": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLSegmentNameID_05": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLSegmentNameID_06": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLSegmentNameID_07": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLSegmentNameID_08": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLSegmentNameID_09": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLSegmentNameID_10": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLSegmentNameID_11": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLSegmentNameID_12": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "Separator_01": {
                        "maxLength": 1,
                        "minLength": 0,
                        "type": "string"
                    },
                    "Separator_02": {
                        "maxLength": 1,
                        "minLength": 0,
                        "type": "string"
                    },
                    "Separator_03": {
                        "maxLength": 1,
                        "minLength": 0,
                        "type": "string"
                    },
                    "Separator_04": {
                        "maxLength": 1,
                        "minLength": 0,
                        "type": "string"
                    },
                    "Separator_05": {
                        "maxLength": 1,
                        "minLength": 0,
                        "type": "string"
                    },
                    "Separator_06": {
                        "maxLength": 1,
                        "minLength": 0,
                        "type": "string"
                    },
                    "Separator_07": {
                        "maxLength": 1,
                        "minLength": 0,
                        "type": "string"
                    },
                    "Separator_08": {
                        "maxLength": 1,
                        "minLength": 0,
                        "type": "string"
                    },
                    "Separator_09": {
                        "maxLength": 1,
                        "minLength": 0,
                        "type": "string"
                    },
                    "Separator_10": {
                        "maxLength": 1,
                        "minLength": 0,
                        "type": "string"
                    },
                    "Separator_11": {
                        "maxLength": 1,
                        "minLength": 0,
                        "type": "string"
                    },
                    "IsDynamic": {
                        "type": "boolean"
                    },
                    "IsActive": {
                        "type": "boolean"
                    },
                    "IsLinkToCompany": {
                        "type": "boolean"
                    },
                    "IsImportedActuals": {
                        "type": "boolean"
                    },
                    "UseEmployeeCAA": {
                        "type": "boolean"
                    },
                    "DefaultApprovalID": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "CompanyLocation": {
                "required": [
                    "CompanyID",
                    "LocationID",
                    "LocationTypeID"
                ],
                "type": "object",
                "properties": {
                    "CompanyID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "LocationID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "LocationTypeID": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "GLSegment": {
                "required": [
                    "GLSegmentNameID",
                    "Code",
                    "Name",
                    "IsActive"
                ],
                "type": "object",
                "properties": {
                    "GLSegmentID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "TenantID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLSegmentNameID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "Code": {
                        "maxLength": 52,
                        "minLength": 0,
                        "type": "string"
                    },
                    "Name": {
                        "maxLength": 120,
                        "minLength": 0,
                        "type": "string"
                    },
                    "IsActive": {
                        "type": "boolean"
                    },
                    "CompanyID": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "ReportLayout": {
                "type": "object",
                "properties": {
                    "ReportID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "TenantID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "CompanyID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "DocumentTypeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "DisplayName": {
                        "type": "string"
                    },
                    "LayoutData": {
                        "type": "string",
                        "format": "byte"
                    },
                    "IsActive": {
                        "type": "boolean"
                    }
                }
            },
            "viewToBeApproved": {
                "type": "object",
                "properties": {
                    "ID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "Reference": {
                        "type": "string"
                    },
                    "DateStamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "Description": {
                        "type": "string"
                    },
                    "RequestTypeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "OwnerID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "Owner": {
                        "type": "string"
                    },
                    "AssistantID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "CurrentStateID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "CompanyID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "TotalCost": {
                        "type": "number",
                        "format": "double"
                    },
                    "CreatedDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "SubmittedDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "ApprovalGroups": {
                        "type": "string"
                    }
                }
            },
            "File": {
                "required": [
                    "FileName",
                    "ContentType",
                    "FileImage"
                ],
                "type": "object",
                "properties": {
                    "FileID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "TenantID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "FileName": {
                        "maxLength": 260,
                        "minLength": 0,
                        "type": "string"
                    },
                    "CreationDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "ModifiedDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "ContentType": {
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string"
                    }
                }
            },
            "RequestItemTypeBase": {
                "required": [
                    "ResourceName",
                    "IsActive"
                ],
                "type": "object",
                "properties": {
                    "Description": {
                        "type": "string"
                    },
                    "RequestItemTypeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "RequestTypeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "ResourceName": {
                        "maxLength": 40,
                        "minLength": 0,
                        "type": "string"
                    },
                    "TypeColumns": {
                        "type": "string"
                    },
                    "IsActive": {
                        "type": "boolean"
                    }
                }
            },
            "RequestType": {
                "required": [
                    "IsActive",
                    "AutoCloseType",
                    "CloseOlderThan"
                ],
                "type": "object",
                "properties": {
                    "ResourceName": {
                        "type": "string"
                    },
                    "RequestTypeName": {
                        "type": "string"
                    },
                    "CustomColumnSchema": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CustomColumn"
                        }
                    },
                    "TypeColumnSchema": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CustomColumn"
                        }
                    },
                    "RequestTypeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "TenantID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "CustomColumns": {
                        "type": "string"
                    },
                    "IsActive": {
                        "type": "boolean"
                    },
                    "AutoCloseType": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "CloseOlderThan": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "HasIWSPolicy": {
                        "type": "boolean"
                    }
                }
            },
            "ItemBudget": {
                "type": "object",
                "properties": {
                    "ItemBudgetID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "RequestItemID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "InvoiceItemID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLAccountID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLSegmentID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLCodeMaskID": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "viewInvoiceItemGL": {
                "type": "object",
                "properties": {
                    "ItemBudgetID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "InvoiceID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "InvoiceItemID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLAccountCode": {
                        "type": "string"
                    },
                    "GLAccountName": {
                        "type": "string"
                    },
                    "GLAccountID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "CompanyID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLCode": {
                        "type": "string"
                    },
                    "FullName": {
                        "type": "string"
                    },
                    "GLCodeMaskID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLSegmentID_01": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "Separator_01": {
                        "type": "string"
                    },
                    "GLSegmentID_02": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "Separator_02": {
                        "type": "string"
                    },
                    "GLSegmentID_03": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "Separator_03": {
                        "type": "string"
                    },
                    "GLSegmentID_04": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "Separator_04": {
                        "type": "string"
                    },
                    "GLSegmentID_05": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "Separator_05": {
                        "type": "string"
                    },
                    "GLSegmentID_06": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "Separator_06": {
                        "type": "string"
                    },
                    "GLSegmentID_07": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "Separator_07": {
                        "type": "string"
                    },
                    "GLSegmentID_08": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "Separator_08": {
                        "type": "string"
                    },
                    "GLSegmentID_09": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "Separator_09": {
                        "type": "string"
                    },
                    "GLSegmentID_10": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "Separator_10": {
                        "type": "string"
                    },
                    "GLSegmentID_11": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "Separator_11": {
                        "type": "string"
                    },
                    "GLSegmentID_12": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "IsActive": {
                        "type": "boolean"
                    },
                    "CompanyCode": {
                        "type": "string"
                    },
                    "Code_01": {
                        "type": "string"
                    },
                    "Code_02": {
                        "type": "string"
                    },
                    "Code_03": {
                        "type": "string"
                    },
                    "Code_04": {
                        "type": "string"
                    },
                    "Code_05": {
                        "type": "string"
                    },
                    "Code_06": {
                        "type": "string"
                    },
                    "Code_07": {
                        "type": "string"
                    },
                    "Code_08": {
                        "type": "string"
                    },
                    "Code_09": {
                        "type": "string"
                    },
                    "Code_10": {
                        "type": "string"
                    },
                    "Code_11": {
                        "type": "string"
                    },
                    "Code_12": {
                        "type": "string"
                    },
                    "Name_01": {
                        "type": "string"
                    },
                    "Name_02": {
                        "type": "string"
                    },
                    "Name_03": {
                        "type": "string"
                    },
                    "Name_04": {
                        "type": "string"
                    },
                    "Name_05": {
                        "type": "string"
                    },
                    "Name_06": {
                        "type": "string"
                    },
                    "Name_07": {
                        "type": "string"
                    },
                    "Name_08": {
                        "type": "string"
                    },
                    "Name_09": {
                        "type": "string"
                    },
                    "Name_10": {
                        "type": "string"
                    },
                    "Name_11": {
                        "type": "string"
                    },
                    "Name_12": {
                        "type": "string"
                    },
                    "GLSegmentNameID_01": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLSegmentNameID_02": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLSegmentNameID_03": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLSegmentNameID_04": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLSegmentNameID_05": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLSegmentNameID_06": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLSegmentNameID_07": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLSegmentNameID_08": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLSegmentNameID_09": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLSegmentNameID_10": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLSegmentNameID_11": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLSegmentNameID_12": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLStructureName": {
                        "type": "string"
                    },
                    "GLSegmentName_01": {
                        "type": "string"
                    },
                    "GLSegmentName_02": {
                        "type": "string"
                    },
                    "GLSegmentName_03": {
                        "type": "string"
                    },
                    "GLSegmentName_04": {
                        "type": "string"
                    },
                    "GLSegmentName_05": {
                        "type": "string"
                    },
                    "GLSegmentName_06": {
                        "type": "string"
                    },
                    "GLSegmentName_07": {
                        "type": "string"
                    },
                    "GLSegmentName_08": {
                        "type": "string"
                    },
                    "GLSegmentName_09": {
                        "type": "string"
                    },
                    "GLSegmentName_10": {
                        "type": "string"
                    },
                    "GLSegmentName_11": {
                        "type": "string"
                    },
                    "GLSegmentName_12": {
                        "type": "string"
                    }
                }
            },
            "BudgetColumn": {
                "type": "object",
                "properties": {
                    "ItemBudgetID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "IsLinkToCompany": {
                        "type": "boolean"
                    },
                    "IsDynamic": {
                        "type": "boolean"
                    },
                    "GLCodeMaskID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "Label": {
                        "type": "string"
                    },
                    "Description": {
                        "type": "string"
                    },
                    "Required": {
                        "type": "boolean"
                    },
                    "Colspan": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "RuleID": {
                        "type": "string"
                    },
                    "GLAccountID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "SegmentNameID": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    "SegmentName": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "SegmentID": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    "SegmentValue": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "viewGLCodes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/viewGLCode"
                        }
                    },
                    "GLSegments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GLSegment"
                        }
                    },
                    "ApproveCC": {
                        "$ref": "#/components/schemas/ApproveCCInfo"
                    },
                    "HasApproveCC": {
                        "type": "boolean"
                    }
                }
            },
            "CatalogItem": {
                "type": "object",
                "properties": {
                    "CatalogItemID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "RequestItemID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "ExProductID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "ExProductVariantID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "Product": {
                        "type": "string"
                    },
                    "ProductVariant": {
                        "type": "string"
                    }
                }
            },
            "viewRequestItemGL": {
                "type": "object",
                "properties": {
                    "ItemBudgetID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "RequestID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "RequestItemID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLAccountCode": {
                        "type": "string"
                    },
                    "GLAccountName": {
                        "type": "string"
                    },
                    "GLAccountID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "CompanyID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "CompanyCode": {
                        "type": "string"
                    },
                    "GLCode": {
                        "type": "string"
                    },
                    "FullName": {
                        "type": "string"
                    },
                    "GLCodeMaskID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "Code_01": {
                        "type": "string"
                    },
                    "Separator_01": {
                        "type": "string"
                    },
                    "Code_02": {
                        "type": "string"
                    },
                    "Separator_02": {
                        "type": "string"
                    },
                    "Code_03": {
                        "type": "string"
                    },
                    "Separator_03": {
                        "type": "string"
                    },
                    "Code_04": {
                        "type": "string"
                    },
                    "Separator_04": {
                        "type": "string"
                    },
                    "Code_05": {
                        "type": "string"
                    },
                    "Separator_05": {
                        "type": "string"
                    },
                    "Code_06": {
                        "type": "string"
                    },
                    "Separator_06": {
                        "type": "string"
                    },
                    "Code_07": {
                        "type": "string"
                    },
                    "Separator_07": {
                        "type": "string"
                    },
                    "Code_08": {
                        "type": "string"
                    },
                    "Separator_08": {
                        "type": "string"
                    },
                    "Code_09": {
                        "type": "string"
                    },
                    "Separator_09": {
                        "type": "string"
                    },
                    "Code_10": {
                        "type": "string"
                    },
                    "Separator_10": {
                        "type": "string"
                    },
                    "Code_11": {
                        "type": "string"
                    },
                    "Separator_11": {
                        "type": "string"
                    },
                    "Code_12": {
                        "type": "string"
                    },
                    "Name_01": {
                        "type": "string"
                    },
                    "Name_02": {
                        "type": "string"
                    },
                    "Name_03": {
                        "type": "string"
                    },
                    "Name_04": {
                        "type": "string"
                    },
                    "Name_05": {
                        "type": "string"
                    },
                    "Name_06": {
                        "type": "string"
                    },
                    "Name_07": {
                        "type": "string"
                    },
                    "Name_08": {
                        "type": "string"
                    },
                    "Name_09": {
                        "type": "string"
                    },
                    "Name_10": {
                        "type": "string"
                    },
                    "Name_11": {
                        "type": "string"
                    },
                    "Name_12": {
                        "type": "string"
                    },
                    "GLSegmentID_01": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLSegmentID_02": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLSegmentID_03": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLSegmentID_04": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLSegmentID_05": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLSegmentID_06": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLSegmentID_07": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLSegmentID_08": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLSegmentID_09": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLSegmentID_10": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLSegmentID_11": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLSegmentID_12": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLSegmentNameID_01": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLSegmentNameID_02": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLSegmentNameID_03": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLSegmentNameID_04": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLSegmentNameID_05": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLSegmentNameID_06": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLSegmentNameID_07": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLSegmentNameID_08": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLSegmentNameID_09": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLSegmentNameID_10": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLSegmentNameID_11": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLSegmentNameID_12": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLStructureName": {
                        "type": "string"
                    },
                    "GLSegmentName_01": {
                        "type": "string"
                    },
                    "GLSegmentName_02": {
                        "type": "string"
                    },
                    "GLSegmentName_03": {
                        "type": "string"
                    },
                    "GLSegmentName_04": {
                        "type": "string"
                    },
                    "GLSegmentName_05": {
                        "type": "string"
                    },
                    "GLSegmentName_06": {
                        "type": "string"
                    },
                    "GLSegmentName_07": {
                        "type": "string"
                    },
                    "GLSegmentName_08": {
                        "type": "string"
                    },
                    "GLSegmentName_09": {
                        "type": "string"
                    },
                    "GLSegmentName_10": {
                        "type": "string"
                    },
                    "GLSegmentName_11": {
                        "type": "string"
                    },
                    "GLSegmentName_12": {
                        "type": "string"
                    },
                    "IsActive": {
                        "type": "boolean"
                    }
                }
            },
            "Lookup": {
                "required": [
                    "Name",
                    "IsFilterByCompany",
                    "IsActive"
                ],
                "type": "object",
                "properties": {
                    "LookupID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "TenantID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "Name": {
                        "maxLength": 80,
                        "minLength": 0,
                        "type": "string"
                    },
                    "IsFilterByCompany": {
                        "type": "boolean"
                    },
                    "FilterByLookupID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "BuiltinID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "IsActive": {
                        "type": "boolean"
                    },
                    "Custom1Header": {
                        "maxLength": 40,
                        "minLength": 0,
                        "type": "string"
                    }
                }
            },
            "ExchangeRate": {
                "required": [
                    "Type",
                    "Value",
                    "IsDefault",
                    "IsActive"
                ],
                "type": "object",
                "properties": {
                    "ExchangeRateID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "TenantID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "CurrencyID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "Type": {
                        "maxLength": 40,
                        "minLength": 0,
                        "type": "string"
                    },
                    "Value": {
                        "maximum": 999999999,
                        "type": "number",
                        "format": "decimal"
                    },
                    "IsDefault": {
                        "type": "boolean"
                    },
                    "IsActive": {
                        "type": "boolean"
                    },
                    "DestinationCurrencyID": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "CostCenterMask": {
                "required": [
                    "Name",
                    "IsActive",
                    "UseEmployeeCostCenter",
                    "IsAutoApprove"
                ],
                "type": "object",
                "properties": {
                    "CostCenterMaskID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "TenantID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLCodeMaskID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "Name": {
                        "type": "string"
                    },
                    "IsSegment_01": {
                        "type": "boolean"
                    },
                    "IsSegment_02": {
                        "type": "boolean"
                    },
                    "IsSegment_03": {
                        "type": "boolean"
                    },
                    "IsSegment_04": {
                        "type": "boolean"
                    },
                    "IsSegment_05": {
                        "type": "boolean"
                    },
                    "IsSegment_06": {
                        "type": "boolean"
                    },
                    "IsSegment_07": {
                        "type": "boolean"
                    },
                    "IsSegment_08": {
                        "type": "boolean"
                    },
                    "IsSegment_09": {
                        "type": "boolean"
                    },
                    "IsSegment_10": {
                        "type": "boolean"
                    },
                    "IsSegment_11": {
                        "type": "boolean"
                    },
                    "IsSegment_12": {
                        "type": "boolean"
                    },
                    "IsActive": {
                        "type": "boolean"
                    },
                    "UseEmployeeCostCenter": {
                        "type": "boolean"
                    },
                    "IsAutoApprove": {
                        "type": "boolean"
                    },
                    "CostCenterCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "SegmentCount": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "GLAccount": {
                "required": [
                    "GLCodeMaskID",
                    "GLSegmentID_01",
                    "IsActive"
                ],
                "type": "object",
                "properties": {
                    "GLAccountID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "TenantID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLCodeMaskID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLSegmentID_01": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLSegmentID_02": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLSegmentID_03": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLSegmentID_04": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLSegmentID_05": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLSegmentID_06": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLSegmentID_07": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLSegmentID_08": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLSegmentID_09": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLSegmentID_10": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLSegmentID_11": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLSegmentID_12": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "IsActive": {
                        "type": "boolean"
                    }
                }
            },
            "FinancialYear": {
                "required": [
                    "Description",
                    "IsActive"
                ],
                "type": "object",
                "properties": {
                    "FinancialYearID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "TenantID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "Description": {
                        "maxLength": 80,
                        "minLength": 0,
                        "type": "string"
                    },
                    "IsActive": {
                        "type": "boolean"
                    },
                    "InitialisationFinancialYearID": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "GLSegmentName": {
                "required": [
                    "Name",
                    "IsActive"
                ],
                "type": "object",
                "properties": {
                    "GLSegmentNameID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "TenantID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "Name": {
                        "maxLength": 80,
                        "minLength": 0,
                        "type": "string"
                    },
                    "IsActive": {
                        "type": "boolean"
                    }
                }
            },
            "Tenant": {
                "required": [
                    "Code",
                    "Name",
                    "LoginName",
                    "LoginPassword",
                    "Email",
                    "IsActive",
                    "AllowMultipleLeaveItems",
                    "ShortName",
                    "AnyoneCanReceipt",
                    "UseEmployeeCompany",
                    "UseFraxionMP",
                    "UseFraxionCAT",
                    "UseSupplierCompany",
                    "UseFraxionCONT",
                    "AnyoneCanViewBudget",
                    "UseAAD",
                    "UseGLCompany",
                    "UseFraxionIWS",
                    "UseMoneyFourDecimals",
                    "AnyoneCanAssist",
                    "UseFraxionPunchout",
                    "UseCatalogQuoting",
                    "AllowInvoiceHeaderTax",
                    "UseOrderRevision",
                    "FilterGLByCompany",
                    "UseTaxRateCompany"
                ],
                "type": "object",
                "properties": {
                    "TenantID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "Code": {
                        "maxLength": 20,
                        "minLength": 0,
                        "type": "string"
                    },
                    "Name": {
                        "maxLength": 80,
                        "minLength": 0,
                        "type": "string"
                    },
                    "LoginName": {
                        "maxLength": 30,
                        "minLength": 0,
                        "type": "string"
                    },
                    "LoginPassword": {
                        "maxLength": 30,
                        "minLength": 0,
                        "type": "string"
                    },
                    "Email": {
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string"
                    },
                    "CreationDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "CancelledDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "TimeZoneID": {
                        "type": "string"
                    },
                    "IsActive": {
                        "type": "boolean"
                    },
                    "AllowMultipleLeaveItems": {
                        "type": "boolean"
                    },
                    "ShortName": {
                        "maxLength": 20,
                        "minLength": 0,
                        "type": "string"
                    },
                    "AnyoneCanReceipt": {
                        "type": "boolean"
                    },
                    "UseEmployeeCompany": {
                        "type": "boolean"
                    },
                    "UseFraxionMP": {
                        "type": "boolean"
                    },
                    "UseFraxionCAT": {
                        "type": "boolean"
                    },
                    "FxTenantID": {
                        "type": "string",
                        "format": "uuid",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "UseSupplierCompany": {
                        "type": "boolean"
                    },
                    "UseFraxionCONT": {
                        "type": "boolean"
                    },
                    "AnyoneCanViewBudget": {
                        "type": "boolean"
                    },
                    "UseAAD": {
                        "type": "boolean"
                    },
                    "AADTenantID": {
                        "type": "string",
                        "format": "uuid",
                        "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "UseGLCompany": {
                        "type": "boolean"
                    },
                    "UseFraxionIWS": {
                        "type": "boolean"
                    },
                    "UseMoneyFourDecimals": {
                        "type": "boolean"
                    },
                    "AnyoneCanAssist": {
                        "type": "boolean"
                    },
                    "UseFraxionPunchout": {
                        "type": "boolean"
                    },
                    "UseCatalogQuoting": {
                        "type": "boolean"
                    },
                    "AllowInvoiceHeaderTax": {
                        "type": "boolean"
                    },
                    "UseOrderRevision": {
                        "type": "boolean"
                    },
                    "FilterGLByCompany": {
                        "type": "boolean"
                    },
                    "UseTaxRateCompany": {
                        "type": "boolean"
                    },
                    "UseNewCAADate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "ReportingCurrencyID": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "CAApprovalRange": {
                "required": [
                    "RangeStart",
                    "RangeEnd"
                ],
                "type": "object",
                "properties": {
                    "CAApprovalRangeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "TenantID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "CAApprovalID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLCodeMaskID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "RangeStart": {
                        "type": "string"
                    },
                    "RangeEnd": {
                        "type": "string"
                    },
                    "Description": {
                        "type": "string"
                    },
                    "DescriptionHtml": {
                        "type": "string"
                    }
                }
            },
            "LocationType": {
                "required": [
                    "LocationTypeID"
                ],
                "type": "object",
                "properties": {
                    "LocationTypeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "ResourceName": {
                        "type": "string"
                    }
                }
            },
            "Budget": {
                "required": [
                    "FinancialPeriodID",
                    "Value",
                    "ActualSpend"
                ],
                "type": "object",
                "properties": {
                    "BudgetID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "TenantID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLAccountID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLSegmentID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "FinancialPeriodID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "Value": {
                        "type": "number",
                        "format": "decimal"
                    },
                    "ActualSpend": {
                        "type": "number",
                        "format": "decimal"
                    }
                }
            },
            "RequestItemType": {
                "required": [
                    "IsActive",
                    "InvoiceRule"
                ],
                "type": "object",
                "properties": {
                    "ResourceName": {
                        "type": "string"
                    },
                    "RequestItemTypeName": {
                        "type": "string"
                    },
                    "BudgetColumnSchema": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BudgetColumn"
                        }
                    },
                    "CustomColumnSchema": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CustomColumn"
                        }
                    },
                    "TypeColumnSchema": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CustomColumn"
                        }
                    },
                    "RequestItemTypeID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "TenantID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "CustomColumns": {
                        "type": "string"
                    },
                    "IsActive": {
                        "type": "boolean"
                    },
                    "BudgetColumns": {
                        "type": "string"
                    },
                    "InvoiceRule": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "viewGLCode": {
                "type": "object",
                "properties": {
                    "GLAccountID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLCode": {
                        "type": "string"
                    },
                    "Name": {
                        "type": "string"
                    },
                    "FullName": {
                        "type": "string"
                    },
                    "GLCodeMaskID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "IsActive": {
                        "type": "boolean"
                    }
                }
            },
            "ApproveCCInfo": {
                "type": "object",
                "properties": {
                    "CostCenterMaskID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "UseEmployeeCostCenter": {
                        "type": "boolean"
                    },
                    "IsAutoApprove": {
                        "type": "boolean"
                    }
                }
            },
            "FinancialPeriod": {
                "required": [
                    "Description",
                    "PeriodNumber",
                    "StartDate",
                    "EndDate"
                ],
                "type": "object",
                "properties": {
                    "FinancialPeriodID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "TenantID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "FinancialYearID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "Description": {
                        "maxLength": 80,
                        "minLength": 0,
                        "type": "string"
                    },
                    "PeriodNumber": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "StartDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "EndDate": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "ODataResponse[List[AlertType]]": {
                "type": "object",
                "properties": {
                    "@odata.context": {
                        "type": "string"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AlertType"
                        }
                    }
                }
            },
            "ODataResponse[List[Approval]]": {
                "type": "object",
                "properties": {
                    "@odata.context": {
                        "type": "string"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Approval"
                        }
                    }
                }
            },
            "ODataResponse[List[BudgetExtended]]": {
                "type": "object",
                "properties": {
                    "@odata.context": {
                        "type": "string"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BudgetExtended"
                        }
                    }
                }
            },
            "BudgetExtended": {
                "type": "object",
                "properties": {
                    "BudgetID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "TenantID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLAccountID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLSegmentID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "FinancialPeriodID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "Value": {
                        "type": "number",
                        "format": "decimal"
                    },
                    "ActualSpend": {
                        "type": "number",
                        "format": "decimal"
                    },
                    "CompanyCode": {
                        "type": "string"
                    },
                    "CompanyName": {
                        "type": "string"
                    },
                    "PeriodNumber": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "PeriodDescription": {
                        "type": "string"
                    },
                    "StructureName": {
                        "type": "string"
                    },
                    "StructureCode": {
                        "type": "string"
                    },
                    "StructureFullName": {
                        "type": "string"
                    },
                    "FinancialYear": {
                        "type": "string"
                    },
                    "FinancialYearID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "UserAction": {
                        "type": "string"
                    },
                    "ImportStatus": {
                        "type": "string"
                    },
                    "Note": {
                        "type": "string"
                    },
                    "StartDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "EndDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "LastUpdated": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "viewStructure": {
                "type": "object",
                "properties": {
                    "GLAccountID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "CompanyID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "StructureName": {
                        "type": "string"
                    },
                    "StructureCode": {
                        "type": "string"
                    },
                    "CompanyCode": {
                        "type": "string"
                    },
                    "FullName": {
                        "type": "string"
                    },
                    "GLCodeMaskID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "SegmentCode_01": {
                        "type": "string"
                    },
                    "Separator_01": {
                        "type": "string"
                    },
                    "SegmentCode_02": {
                        "type": "string"
                    },
                    "Separator_02": {
                        "type": "string"
                    },
                    "SegmentCode_03": {
                        "type": "string"
                    },
                    "Separator_03": {
                        "type": "string"
                    },
                    "SegmentCode_04": {
                        "type": "string"
                    },
                    "Separator_04": {
                        "type": "string"
                    },
                    "SegmentCode_05": {
                        "type": "string"
                    },
                    "Separator_05": {
                        "type": "string"
                    },
                    "SegmentCode_06": {
                        "type": "string"
                    },
                    "Separator_06": {
                        "type": "string"
                    },
                    "SegmentCode_07": {
                        "type": "string"
                    },
                    "Separator_07": {
                        "type": "string"
                    },
                    "SegmentCode_08": {
                        "type": "string"
                    },
                    "Separator_08": {
                        "type": "string"
                    },
                    "SegmentCode_09": {
                        "type": "string"
                    },
                    "Separator_09": {
                        "type": "string"
                    },
                    "SegmentCode_10": {
                        "type": "string"
                    },
                    "Separator_10": {
                        "type": "string"
                    },
                    "SegmentCode_11": {
                        "type": "string"
                    },
                    "Separator_11": {
                        "type": "string"
                    },
                    "SegmentCode_12": {
                        "type": "string"
                    },
                    "Name_01": {
                        "type": "string"
                    },
                    "Name_02": {
                        "type": "string"
                    },
                    "Name_03": {
                        "type": "string"
                    },
                    "Name_04": {
                        "type": "string"
                    },
                    "Name_05": {
                        "type": "string"
                    },
                    "Name_06": {
                        "type": "string"
                    },
                    "Name_07": {
                        "type": "string"
                    },
                    "Name_08": {
                        "type": "string"
                    },
                    "Name_09": {
                        "type": "string"
                    },
                    "Name_10": {
                        "type": "string"
                    },
                    "Name_11": {
                        "type": "string"
                    },
                    "Name_12": {
                        "type": "string"
                    },
                    "SegmentID_01": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "SegmentID_02": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "SegmentID_03": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "SegmentID_04": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "SegmentID_05": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "SegmentID_06": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "SegmentID_07": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "SegmentID_08": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "SegmentID_09": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "SegmentID_10": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "SegmentID_11": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "SegmentID_12": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "SegmentNameID_01": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "SegmentNameID_02": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "SegmentNameID_03": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "SegmentNameID_04": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "SegmentNameID_05": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "SegmentNameID_06": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "SegmentNameID_07": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "SegmentNameID_08": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "SegmentNameID_09": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "SegmentNameID_10": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "SegmentNameID_11": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "SegmentNameID_12": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "SegmentName_01": {
                        "type": "string"
                    },
                    "SegmentName_02": {
                        "type": "string"
                    },
                    "SegmentName_03": {
                        "type": "string"
                    },
                    "SegmentName_04": {
                        "type": "string"
                    },
                    "SegmentName_05": {
                        "type": "string"
                    },
                    "SegmentName_06": {
                        "type": "string"
                    },
                    "SegmentName_07": {
                        "type": "string"
                    },
                    "SegmentName_08": {
                        "type": "string"
                    },
                    "SegmentName_09": {
                        "type": "string"
                    },
                    "SegmentName_10": {
                        "type": "string"
                    },
                    "SegmentName_11": {
                        "type": "string"
                    },
                    "SegmentName_12": {
                        "type": "string"
                    },
                    "IsActive": {
                        "type": "boolean"
                    }
                }
            },
            "viewSegment": {
                "type": "object",
                "properties": {
                    "SegmentID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "TenantID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "SegmentNameID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "SegmentName": {
                        "type": "string"
                    },
                    "SegmentCode": {
                        "type": "string"
                    },
                    "Name": {
                        "type": "string"
                    },
                    "IsActive": {
                        "type": "boolean"
                    },
                    "CompanyID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "CompanyCode": {
                        "type": "string"
                    }
                }
            },
            "StructureImport": {
                "type": "object",
                "properties": {
                    "StructureName": {
                        "type": "string"
                    },
                    "StructureCode": {
                        "type": "string"
                    },
                    "CompanyCode": {
                        "type": "string"
                    },
                    "FullName": {
                        "type": "string"
                    },
                    "SegmentCode_01": {
                        "type": "string"
                    },
                    "Separator_01": {
                        "type": "string"
                    },
                    "SegmentCode_02": {
                        "type": "string"
                    },
                    "Separator_02": {
                        "type": "string"
                    },
                    "SegmentCode_03": {
                        "type": "string"
                    },
                    "Separator_03": {
                        "type": "string"
                    },
                    "SegmentCode_04": {
                        "type": "string"
                    },
                    "Separator_04": {
                        "type": "string"
                    },
                    "SegmentCode_05": {
                        "type": "string"
                    },
                    "Separator_05": {
                        "type": "string"
                    },
                    "SegmentCode_06": {
                        "type": "string"
                    },
                    "Separator_06": {
                        "type": "string"
                    },
                    "SegmentCode_07": {
                        "type": "string"
                    },
                    "Separator_07": {
                        "type": "string"
                    },
                    "SegmentCode_08": {
                        "type": "string"
                    },
                    "Separator_08": {
                        "type": "string"
                    },
                    "SegmentCode_09": {
                        "type": "string"
                    },
                    "Separator_09": {
                        "type": "string"
                    },
                    "SegmentCode_10": {
                        "type": "string"
                    },
                    "Separator_10": {
                        "type": "string"
                    },
                    "SegmentCode_11": {
                        "type": "string"
                    },
                    "Separator_11": {
                        "type": "string"
                    },
                    "SegmentCode_12": {
                        "type": "string"
                    },
                    "SegmentName_01": {
                        "type": "string"
                    },
                    "SegmentName_02": {
                        "type": "string"
                    },
                    "SegmentName_03": {
                        "type": "string"
                    },
                    "SegmentName_04": {
                        "type": "string"
                    },
                    "SegmentName_05": {
                        "type": "string"
                    },
                    "SegmentName_06": {
                        "type": "string"
                    },
                    "SegmentName_07": {
                        "type": "string"
                    },
                    "SegmentName_08": {
                        "type": "string"
                    },
                    "SegmentName_09": {
                        "type": "string"
                    },
                    "SegmentName_10": {
                        "type": "string"
                    },
                    "SegmentName_11": {
                        "type": "string"
                    },
                    "SegmentName_12": {
                        "type": "string"
                    },
                    "Name_01": {
                        "type": "string"
                    },
                    "Name_02": {
                        "type": "string"
                    },
                    "Name_03": {
                        "type": "string"
                    },
                    "Name_04": {
                        "type": "string"
                    },
                    "Name_05": {
                        "type": "string"
                    },
                    "Name_06": {
                        "type": "string"
                    },
                    "Name_07": {
                        "type": "string"
                    },
                    "Name_08": {
                        "type": "string"
                    },
                    "Name_09": {
                        "type": "string"
                    },
                    "Name_10": {
                        "type": "string"
                    },
                    "Name_11": {
                        "type": "string"
                    },
                    "Name_12": {
                        "type": "string"
                    },
                    "Segments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SegmentImport"
                        }
                    },
                    "IsActive": {
                        "type": "boolean"
                    }
                }
            },
            "SegmentImport": {
                "type": "object",
                "properties": {
                    "SegmentCode": {
                        "type": "string"
                    },
                    "Name": {
                        "type": "string"
                    },
                    "IsActive": {
                        "type": "boolean"
                    },
                    "SegmentName": {
                        "type": "string"
                    },
                    "CompanyCode": {
                        "type": "string"
                    }
                }
            },
            "ODataResponse[List[BudgetResponse]]": {
                "type": "object",
                "properties": {
                    "@odata.context": {
                        "type": "string"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BudgetResponse"
                        }
                    }
                }
            },
            "BudgetResponse": {
                "type": "object",
                "properties": {
                    "StructureName": {
                        "type": "string"
                    },
                    "CompanyCode": {
                        "type": "string"
                    },
                    "CompanyName": {
                        "type": "string"
                    },
                    "FinancialYear": {
                        "type": "string"
                    },
                    "StructureFullName": {
                        "type": "string"
                    },
                    "StructureCode": {
                        "type": "string"
                    },
                    "SegmentCode_01": {
                        "type": "string"
                    },
                    "SegmentCode_02": {
                        "type": "string"
                    },
                    "SegmentCode_03": {
                        "type": "string"
                    },
                    "SegmentCode_04": {
                        "type": "string"
                    },
                    "SegmentCode_05": {
                        "type": "string"
                    },
                    "SegmentCode_06": {
                        "type": "string"
                    },
                    "SegmentCode_07": {
                        "type": "string"
                    },
                    "SegmentCode_08": {
                        "type": "string"
                    },
                    "SegmentCode_09": {
                        "type": "string"
                    },
                    "SegmentCode_10": {
                        "type": "string"
                    },
                    "SegmentCode_11": {
                        "type": "string"
                    },
                    "SegmentCode_12": {
                        "type": "string"
                    },
                    "SegmentName_01": {
                        "type": "string"
                    },
                    "SegmentName_02": {
                        "type": "string"
                    },
                    "SegmentName_03": {
                        "type": "string"
                    },
                    "SegmentName_04": {
                        "type": "string"
                    },
                    "SegmentName_05": {
                        "type": "string"
                    },
                    "SegmentName_06": {
                        "type": "string"
                    },
                    "SegmentName_07": {
                        "type": "string"
                    },
                    "SegmentName_08": {
                        "type": "string"
                    },
                    "SegmentName_09": {
                        "type": "string"
                    },
                    "SegmentName_10": {
                        "type": "string"
                    },
                    "SegmentName_11": {
                        "type": "string"
                    },
                    "SegmentName_12": {
                        "type": "string"
                    },
                    "Periods": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Period"
                        }
                    },
                    "UserAction": {
                        "type": "string"
                    },
                    "ImportStatus": {
                        "type": "string"
                    }
                }
            },
            "Period": {
                "type": "object",
                "properties": {
                    "PeriodNumber": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "PeriodDescription": {
                        "type": "string"
                    },
                    "PeriodValue": {
                        "type": "number",
                        "format": "decimal"
                    },
                    "StartDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "EndDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "UserAction": {
                        "type": "string"
                    },
                    "ImportStatus": {
                        "type": "string"
                    }
                }
            },
            "ODataResponse[List[BudgetPeriod]]": {
                "type": "object",
                "properties": {
                    "@odata.context": {
                        "type": "string"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BudgetPeriod"
                        }
                    }
                }
            },
            "BudgetPeriod": {
                "type": "object",
                "properties": {
                    "StructureName": {
                        "type": "string"
                    },
                    "CompanyCode": {
                        "type": "string"
                    },
                    "CompanyName": {
                        "type": "string"
                    },
                    "FinancialYear": {
                        "type": "string"
                    },
                    "StructureCode": {
                        "type": "string"
                    },
                    "StructureFullName": {
                        "type": "string"
                    },
                    "SegmentCode_01": {
                        "type": "string"
                    },
                    "SegmentCode_02": {
                        "type": "string"
                    },
                    "SegmentCode_03": {
                        "type": "string"
                    },
                    "SegmentCode_04": {
                        "type": "string"
                    },
                    "SegmentCode_05": {
                        "type": "string"
                    },
                    "SegmentCode_06": {
                        "type": "string"
                    },
                    "SegmentCode_07": {
                        "type": "string"
                    },
                    "SegmentCode_08": {
                        "type": "string"
                    },
                    "SegmentCode_09": {
                        "type": "string"
                    },
                    "SegmentCode_10": {
                        "type": "string"
                    },
                    "SegmentCode_11": {
                        "type": "string"
                    },
                    "SegmentCode_12": {
                        "type": "string"
                    },
                    "SegmentName_01": {
                        "type": "string"
                    },
                    "SegmentName_02": {
                        "type": "string"
                    },
                    "SegmentName_03": {
                        "type": "string"
                    },
                    "SegmentName_04": {
                        "type": "string"
                    },
                    "SegmentName_05": {
                        "type": "string"
                    },
                    "SegmentName_06": {
                        "type": "string"
                    },
                    "SegmentName_07": {
                        "type": "string"
                    },
                    "SegmentName_08": {
                        "type": "string"
                    },
                    "SegmentName_09": {
                        "type": "string"
                    },
                    "SegmentName_10": {
                        "type": "string"
                    },
                    "SegmentName_11": {
                        "type": "string"
                    },
                    "SegmentName_12": {
                        "type": "string"
                    },
                    "UserAction": {
                        "type": "string"
                    },
                    "ImportStatus": {
                        "type": "string"
                    },
                    "PeriodNumber": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "PeriodDescription": {
                        "type": "string"
                    },
                    "PeriodValue": {
                        "type": "number",
                        "format": "decimal"
                    },
                    "StartDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "EndDate": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "BudgetImport": {
                "type": "object",
                "properties": {
                    "StructureName": {
                        "type": "string"
                    },
                    "CompanyCode": {
                        "type": "string"
                    },
                    "FinancialYear": {
                        "type": "string"
                    },
                    "StructureCode": {
                        "type": "string"
                    },
                    "SegmentCode_01": {
                        "type": "string"
                    },
                    "SegmentCode_02": {
                        "type": "string"
                    },
                    "SegmentCode_03": {
                        "type": "string"
                    },
                    "SegmentCode_04": {
                        "type": "string"
                    },
                    "SegmentCode_05": {
                        "type": "string"
                    },
                    "SegmentCode_06": {
                        "type": "string"
                    },
                    "SegmentCode_07": {
                        "type": "string"
                    },
                    "SegmentCode_08": {
                        "type": "string"
                    },
                    "SegmentCode_09": {
                        "type": "string"
                    },
                    "SegmentCode_10": {
                        "type": "string"
                    },
                    "SegmentCode_11": {
                        "type": "string"
                    },
                    "SegmentCode_12": {
                        "type": "string"
                    },
                    "Periods": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Period"
                        }
                    }
                }
            },
            "ODataResponse[List[Company]]": {
                "type": "object",
                "properties": {
                    "@odata.context": {
                        "type": "string"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Company"
                        }
                    }
                }
            },
            "FieldMetadataType": {
                "type": "object",
                "properties": {
                    "FieldID": {
                        "type": "string"
                    },
                    "Label": {
                        "type": "string"
                    },
                    "HelpText": {
                        "type": "string"
                    }
                }
            },
            "ODataResponse[List[Currency]]": {
                "type": "object",
                "properties": {
                    "@odata.context": {
                        "type": "string"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Currency"
                        }
                    }
                }
            },
            "CurrencyImport": {
                "type": "object",
                "properties": {
                    "CurrencyCode": {
                        "type": "string"
                    },
                    "CurrencyName": {
                        "type": "string"
                    },
                    "IsActive": {
                        "type": "boolean"
                    }
                }
            },
            "ODataResponse[List[CurrencyResponse]]": {
                "type": "object",
                "properties": {
                    "@odata.context": {
                        "type": "string"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CurrencyResponse"
                        }
                    }
                }
            },
            "CurrencyResponse": {
                "type": "object",
                "properties": {
                    "CurrencyID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "UserAction": {
                        "type": "string"
                    },
                    "ImportStatus": {
                        "type": "string"
                    },
                    "CurrencyCode": {
                        "type": "string"
                    },
                    "CurrencyName": {
                        "type": "string"
                    },
                    "IsActive": {
                        "type": "boolean"
                    }
                }
            },
            "ODataResponse[List[CurrentState]]": {
                "type": "object",
                "properties": {
                    "@odata.context": {
                        "type": "string"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CurrentState"
                        }
                    }
                }
            },
            "ODataResponse[List[viewToBeApproved]]": {
                "type": "object",
                "properties": {
                    "@odata.context": {
                        "type": "string"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/viewToBeApproved"
                        }
                    }
                }
            },
            "ODataResponse[List[Employee]]": {
                "type": "object",
                "properties": {
                    "@odata.context": {
                        "type": "string"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Employee"
                        }
                    }
                }
            },
            "ODataResponse[List[ExchangeRate]]": {
                "type": "object",
                "properties": {
                    "@odata.context": {
                        "type": "string"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExchangeRate"
                        }
                    }
                }
            },
            "ExchangeRateImport": {
                "type": "object",
                "properties": {
                    "SourceCurrencyCode": {
                        "type": "string"
                    },
                    "TargetCurrencyCode": {
                        "type": "string"
                    },
                    "Type": {
                        "type": "string"
                    },
                    "Value": {
                        "type": "number",
                        "format": "decimal"
                    },
                    "IsDefault": {
                        "type": "boolean"
                    },
                    "IsActive": {
                        "type": "boolean"
                    }
                }
            },
            "ODataResponse[List[ExchangeRateResponse]]": {
                "type": "object",
                "properties": {
                    "@odata.context": {
                        "type": "string"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExchangeRateResponse"
                        }
                    }
                }
            },
            "ExchangeRateResponse": {
                "type": "object",
                "properties": {
                    "ExchangeRateID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "UserAction": {
                        "type": "string"
                    },
                    "ImportStatus": {
                        "type": "string"
                    },
                    "SourceCurrencyCode": {
                        "type": "string"
                    },
                    "TargetCurrencyCode": {
                        "type": "string"
                    },
                    "Type": {
                        "type": "string"
                    },
                    "Value": {
                        "type": "number",
                        "format": "decimal"
                    },
                    "IsDefault": {
                        "type": "boolean"
                    },
                    "IsActive": {
                        "type": "boolean"
                    }
                }
            },
            "ODataResponse[List[FinancialPeriod]]": {
                "type": "object",
                "properties": {
                    "@odata.context": {
                        "type": "string"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FinancialPeriod"
                        }
                    }
                }
            },
            "FinancialPeriodImport": {
                "type": "object",
                "properties": {
                    "FinancialYearDescription": {
                        "type": "string"
                    },
                    "FinancialPeriodDescription": {
                        "type": "string"
                    },
                    "PeriodNumber": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "StartDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "EndDate": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "ODataResponse[List[FinancialPeriodResponse]]": {
                "type": "object",
                "properties": {
                    "@odata.context": {
                        "type": "string"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FinancialPeriodResponse"
                        }
                    }
                }
            },
            "FinancialPeriodResponse": {
                "type": "object",
                "properties": {
                    "FinancialPeriodID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "UserAction": {
                        "type": "string"
                    },
                    "ImportStatus": {
                        "type": "string"
                    },
                    "FinancialYearDescription": {
                        "type": "string"
                    },
                    "FinancialPeriodDescription": {
                        "type": "string"
                    },
                    "PeriodNumber": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "StartDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "EndDate": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "ODataResponse[List[FinancialYear]]": {
                "type": "object",
                "properties": {
                    "@odata.context": {
                        "type": "string"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FinancialYear"
                        }
                    }
                }
            },
            "FinancialYearImport": {
                "type": "object",
                "properties": {
                    "FinancialYearDescription": {
                        "type": "string"
                    },
                    "IsActive": {
                        "type": "boolean"
                    }
                }
            },
            "ODataResponse[List[FinancialYearResponse]]": {
                "type": "object",
                "properties": {
                    "@odata.context": {
                        "type": "string"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FinancialYearResponse"
                        }
                    }
                }
            },
            "FinancialYearResponse": {
                "type": "object",
                "properties": {
                    "FinancialYearID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "UserAction": {
                        "type": "string"
                    },
                    "ImportStatus": {
                        "type": "string"
                    },
                    "FinancialYearDescription": {
                        "type": "string"
                    },
                    "IsActive": {
                        "type": "boolean"
                    }
                }
            },
            "GLAccountSegments": {
                "type": "object",
                "properties": {
                    "GLSegmentList": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GLSegment"
                        }
                    }
                }
            },
            "ODataResponse[List[GLSegment]]": {
                "type": "object",
                "properties": {
                    "@odata.context": {
                        "type": "string"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GLSegment"
                        }
                    }
                }
            },
            "ODataResponse[List[GLCodeMask]]": {
                "type": "object",
                "properties": {
                    "@odata.context": {
                        "type": "string"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GLCodeMask"
                        }
                    }
                }
            },
            "ODataResponse[List[GLSegmentName]]": {
                "type": "object",
                "properties": {
                    "@odata.context": {
                        "type": "string"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GLSegmentName"
                        }
                    }
                }
            },
            "ODataResponse[List[InvoiceItem]]": {
                "type": "object",
                "properties": {
                    "@odata.context": {
                        "type": "string"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InvoiceItem"
                        }
                    }
                }
            },
            "ODataResponse[List[File]]": {
                "type": "object",
                "properties": {
                    "@odata.context": {
                        "type": "string"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/File"
                        }
                    }
                }
            },
            "ODataResponse[List[Invoice]]": {
                "type": "object",
                "properties": {
                    "@odata.context": {
                        "type": "string"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Invoice"
                        }
                    }
                }
            },
            "ODataResponse[List[Location]]": {
                "type": "object",
                "properties": {
                    "@odata.context": {
                        "type": "string"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Location"
                        }
                    }
                }
            },
            "ODataResponse[List[LocationType]]": {
                "type": "object",
                "properties": {
                    "@odata.context": {
                        "type": "string"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LocationType"
                        }
                    }
                }
            },
            "ODataResponse[List[LookupItem]]": {
                "type": "object",
                "properties": {
                    "@odata.context": {
                        "type": "string"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LookupItem"
                        }
                    }
                }
            },
            "LookupItemImport": {
                "type": "object",
                "properties": {
                    "LookupName": {
                        "type": "string"
                    },
                    "Value": {
                        "type": "string"
                    },
                    "Custom1": {
                        "type": "string"
                    },
                    "FilterByCompanyCode": {
                        "type": "string"
                    },
                    "FilterByLookupItemValue": {
                        "type": "string"
                    },
                    "FilterLookupName": {
                        "type": "string"
                    },
                    "IsActive": {
                        "type": "boolean"
                    }
                }
            },
            "ODataResponse[List[LookupItemResponse]]": {
                "type": "object",
                "properties": {
                    "@odata.context": {
                        "type": "string"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LookupItemResponse"
                        }
                    }
                }
            },
            "LookupItemResponse": {
                "type": "object",
                "properties": {
                    "LookupItemID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "UserAction": {
                        "type": "string"
                    },
                    "ImportStatus": {
                        "type": "string"
                    },
                    "LookupName": {
                        "type": "string"
                    },
                    "Value": {
                        "type": "string"
                    },
                    "Custom1": {
                        "type": "string"
                    },
                    "FilterByCompanyCode": {
                        "type": "string"
                    },
                    "FilterByLookupItemValue": {
                        "type": "string"
                    },
                    "FilterLookupName": {
                        "type": "string"
                    },
                    "IsActive": {
                        "type": "boolean"
                    }
                }
            },
            "ODataResponse[List[Lookup]]": {
                "type": "object",
                "properties": {
                    "@odata.context": {
                        "type": "string"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Lookup"
                        }
                    }
                }
            },
            "ODataResponse[List[PO]]": {
                "type": "object",
                "properties": {
                    "@odata.context": {
                        "type": "string"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PO"
                        }
                    }
                }
            },
            "ODataResponse[List[POItem]]": {
                "type": "object",
                "properties": {
                    "@odata.context": {
                        "type": "string"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/POItem"
                        }
                    }
                }
            },
            "ODataResponse[List[viewGLSpendByState]]": {
                "type": "object",
                "properties": {
                    "@odata.context": {
                        "type": "string"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/viewGLSpendByState"
                        }
                    }
                }
            },
            "viewGLSpendByState": {
                "type": "object",
                "properties": {
                    "GLCodeMaskID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLAccountID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "CurrentStateID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "TotalExclCost": {
                        "type": "number",
                        "format": "double"
                    },
                    "TotalExclCostSrc": {
                        "type": "number",
                        "format": "double"
                    },
                    "TotalInclCost": {
                        "type": "number",
                        "format": "double"
                    },
                    "TotalInclCostSrc": {
                        "type": "number",
                        "format": "double"
                    }
                }
            },
            "ODataResponse[List[Budget]]": {
                "type": "object",
                "properties": {
                    "@odata.context": {
                        "type": "string"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Budget"
                        }
                    }
                }
            },
            "ODataResponse[List[RequestItem]]": {
                "type": "object",
                "properties": {
                    "@odata.context": {
                        "type": "string"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RequestItem"
                        }
                    }
                }
            },
            "ODataResponse[List[RequestItemHistory]]": {
                "type": "object",
                "properties": {
                    "@odata.context": {
                        "type": "string"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RequestItemHistory"
                        }
                    }
                }
            },
            "ODataResponse[List[RequestItemType]]": {
                "type": "object",
                "properties": {
                    "@odata.context": {
                        "type": "string"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RequestItemType"
                        }
                    }
                }
            },
            "ODataResponse[List[Request]]": {
                "type": "object",
                "properties": {
                    "@odata.context": {
                        "type": "string"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Request"
                        }
                    }
                }
            },
            "ODataResponse[List[CommandButton]]": {
                "type": "object",
                "properties": {
                    "@odata.context": {
                        "type": "string"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommandButton"
                        }
                    }
                }
            },
            "ODataResponse[List[RequestHistory]]": {
                "type": "object",
                "properties": {
                    "@odata.context": {
                        "type": "string"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RequestHistory"
                        }
                    }
                }
            },
            "ODataResponse[List[DocumentNote]]": {
                "type": "object",
                "properties": {
                    "@odata.context": {
                        "type": "string"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DocumentNote"
                        }
                    }
                }
            },
            "ODataResponse[List[viewRequestApprovalCycle]]": {
                "type": "object",
                "properties": {
                    "@odata.context": {
                        "type": "string"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/viewRequestApprovalCycle"
                        }
                    }
                }
            },
            "viewRequestApprovalCycle": {
                "type": "object",
                "properties": {
                    "RequestID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "Approval": {
                        "type": "string"
                    },
                    "ApprovalCC": {
                        "type": "string"
                    },
                    "ApprovalOrder": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Employee": {
                        "type": "string"
                    },
                    "DateStamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "UserAction": {
                        "type": "string"
                    }
                }
            },
            "ODataResponse[List[viewRequestGLsAndRequestSpend]]": {
                "type": "object",
                "properties": {
                    "@odata.context": {
                        "type": "string"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/viewRequestGLsAndRequestSpend"
                        }
                    }
                }
            },
            "viewRequestGLsAndRequestSpend": {
                "type": "object",
                "properties": {
                    "RequestID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLAccountName": {
                        "type": "string"
                    },
                    "GLAccountCode": {
                        "type": "string"
                    },
                    "TotalExclCost": {
                        "type": "number",
                        "format": "double"
                    },
                    "TotalExclCostSrc": {
                        "type": "number",
                        "format": "double"
                    },
                    "TotalInclCost": {
                        "type": "number",
                        "format": "double"
                    },
                    "TotalInclCostSrc": {
                        "type": "number",
                        "format": "double"
                    },
                    "GLCodeMaskID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "GLAccountID": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "EditStatus": {
                "type": "object",
                "properties": {
                    "CanEditCore": {
                        "type": "boolean"
                    },
                    "CanEditBudget": {
                        "type": "boolean"
                    },
                    "CanEditCustom": {
                        "type": "boolean"
                    },
                    "CanViewBudget": {
                        "type": "boolean"
                    }
                }
            },
            "ODataResponse[List[RequestType]]": {
                "type": "object",
                "properties": {
                    "@odata.context": {
                        "type": "string"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RequestType"
                        }
                    }
                }
            },
            "ODataResponse[List[String]]": {
                "type": "object",
                "properties": {
                    "@odata.context": {
                        "type": "string"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "ODataResponse[List[SegmentImport]]": {
                "type": "object",
                "properties": {
                    "@odata.context": {
                        "type": "string"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SegmentImport"
                        }
                    }
                }
            },
            "ODataResponse[List[SegmentResponse]]": {
                "type": "object",
                "properties": {
                    "@odata.context": {
                        "type": "string"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SegmentResponse"
                        }
                    }
                }
            },
            "SegmentResponse": {
                "type": "object",
                "properties": {
                    "UserAction": {
                        "type": "string"
                    },
                    "ImportStatus": {
                        "type": "string"
                    },
                    "SegmentCode": {
                        "type": "string"
                    },
                    "Name": {
                        "type": "string"
                    },
                    "IsActive": {
                        "type": "boolean"
                    },
                    "SegmentName": {
                        "type": "string"
                    },
                    "CompanyCode": {
                        "type": "string"
                    }
                }
            },
            "ODataResponse[List[StructureResponse]]": {
                "type": "object",
                "properties": {
                    "@odata.context": {
                        "type": "string"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StructureResponse"
                        }
                    }
                }
            },
            "StructureResponse": {
                "type": "object",
                "properties": {
                    "UserAction": {
                        "type": "string"
                    },
                    "ImportStatus": {
                        "type": "string"
                    },
                    "StructureName": {
                        "type": "string"
                    },
                    "StructureCode": {
                        "type": "string"
                    },
                    "CompanyCode": {
                        "type": "string"
                    },
                    "FullName": {
                        "type": "string"
                    },
                    "SegmentCode_01": {
                        "type": "string"
                    },
                    "Separator_01": {
                        "type": "string"
                    },
                    "SegmentCode_02": {
                        "type": "string"
                    },
                    "Separator_02": {
                        "type": "string"
                    },
                    "SegmentCode_03": {
                        "type": "string"
                    },
                    "Separator_03": {
                        "type": "string"
                    },
                    "SegmentCode_04": {
                        "type": "string"
                    },
                    "Separator_04": {
                        "type": "string"
                    },
                    "SegmentCode_05": {
                        "type": "string"
                    },
                    "Separator_05": {
                        "type": "string"
                    },
                    "SegmentCode_06": {
                        "type": "string"
                    },
                    "Separator_06": {
                        "type": "string"
                    },
                    "SegmentCode_07": {
                        "type": "string"
                    },
                    "Separator_07": {
                        "type": "string"
                    },
                    "SegmentCode_08": {
                        "type": "string"
                    },
                    "Separator_08": {
                        "type": "string"
                    },
                    "SegmentCode_09": {
                        "type": "string"
                    },
                    "Separator_09": {
                        "type": "string"
                    },
                    "SegmentCode_10": {
                        "type": "string"
                    },
                    "Separator_10": {
                        "type": "string"
                    },
                    "SegmentCode_11": {
                        "type": "string"
                    },
                    "Separator_11": {
                        "type": "string"
                    },
                    "SegmentCode_12": {
                        "type": "string"
                    },
                    "SegmentName_01": {
                        "type": "string"
                    },
                    "SegmentName_02": {
                        "type": "string"
                    },
                    "SegmentName_03": {
                        "type": "string"
                    },
                    "SegmentName_04": {
                        "type": "string"
                    },
                    "SegmentName_05": {
                        "type": "string"
                    },
                    "SegmentName_06": {
                        "type": "string"
                    },
                    "SegmentName_07": {
                        "type": "string"
                    },
                    "SegmentName_08": {
                        "type": "string"
                    },
                    "SegmentName_09": {
                        "type": "string"
                    },
                    "SegmentName_10": {
                        "type": "string"
                    },
                    "SegmentName_11": {
                        "type": "string"
                    },
                    "SegmentName_12": {
                        "type": "string"
                    },
                    "Name_01": {
                        "type": "string"
                    },
                    "Name_02": {
                        "type": "string"
                    },
                    "Name_03": {
                        "type": "string"
                    },
                    "Name_04": {
                        "type": "string"
                    },
                    "Name_05": {
                        "type": "string"
                    },
                    "Name_06": {
                        "type": "string"
                    },
                    "Name_07": {
                        "type": "string"
                    },
                    "Name_08": {
                        "type": "string"
                    },
                    "Name_09": {
                        "type": "string"
                    },
                    "Name_10": {
                        "type": "string"
                    },
                    "Name_11": {
                        "type": "string"
                    },
                    "Name_12": {
                        "type": "string"
                    },
                    "Segments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SegmentImport"
                        }
                    },
                    "IsActive": {
                        "type": "boolean"
                    }
                }
            },
            "ODataResponse[List[Supplier]]": {
                "type": "object",
                "properties": {
                    "@odata.context": {
                        "type": "string"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Supplier"
                        }
                    }
                }
            },
            "SupplierImport": {
                "type": "object",
                "properties": {
                    "CompanyCode": {
                        "type": "string"
                    },
                    "SupplierCode": {
                        "type": "string"
                    },
                    "SupplierName": {
                        "type": "string"
                    },
                    "Contact": {
                        "type": "string"
                    },
                    "PhoneNumber": {
                        "type": "string"
                    },
                    "FaxNumber": {
                        "type": "string"
                    },
                    "Email": {
                        "type": "string"
                    },
                    "RegistrationNumber": {
                        "type": "string"
                    },
                    "TaxRegistrationNumber": {
                        "type": "string"
                    },
                    "BankAccountNumber": {
                        "type": "string"
                    },
                    "BankingInfo": {
                        "type": "string"
                    },
                    "PaymentTerms": {
                        "type": "string"
                    },
                    "Address1": {
                        "type": "string"
                    },
                    "Address2": {
                        "type": "string"
                    },
                    "Address3": {
                        "type": "string"
                    },
                    "Address4": {
                        "type": "string"
                    },
                    "Locality": {
                        "type": "string"
                    },
                    "Region": {
                        "type": "string"
                    },
                    "PostalCode": {
                        "type": "string"
                    },
                    "Country": {
                        "type": "string"
                    },
                    "Coordinates": {
                        "type": "string"
                    },
                    "FxSupplierID": {
                        "type": "string"
                    },
                    "CustomColumns": {
                        "type": "string"
                    },
                    "CategoryCode1": {
                        "type": "string"
                    },
                    "CategoryCode2": {
                        "type": "string"
                    },
                    "CategoryCode3": {
                        "type": "string"
                    },
                    "CategoryCode4": {
                        "type": "string"
                    },
                    "IsTravelServiceProvider": {
                        "type": "boolean"
                    },
                    "IsInvoiceLink": {
                        "type": "boolean"
                    },
                    "IsActive": {
                        "type": "boolean"
                    },
                    "CurrencyCode": {
                        "type": "string"
                    },
                    "TaxRateCode": {
                        "type": "string"
                    }
                }
            },
            "ODataResponse[List[SupplierResponse]]": {
                "type": "object",
                "properties": {
                    "@odata.context": {
                        "type": "string"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SupplierResponse"
                        }
                    }
                }
            },
            "SupplierResponse": {
                "type": "object",
                "properties": {
                    "SupplierID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "UserAction": {
                        "type": "string"
                    },
                    "ImportStatus": {
                        "type": "string"
                    },
                    "CompanyCode": {
                        "type": "string"
                    },
                    "SupplierCode": {
                        "type": "string"
                    },
                    "SupplierName": {
                        "type": "string"
                    },
                    "Contact": {
                        "type": "string"
                    },
                    "PhoneNumber": {
                        "type": "string"
                    },
                    "FaxNumber": {
                        "type": "string"
                    },
                    "Email": {
                        "type": "string"
                    },
                    "RegistrationNumber": {
                        "type": "string"
                    },
                    "TaxRegistrationNumber": {
                        "type": "string"
                    },
                    "BankAccountNumber": {
                        "type": "string"
                    },
                    "BankingInfo": {
                        "type": "string"
                    },
                    "PaymentTerms": {
                        "type": "string"
                    },
                    "Address1": {
                        "type": "string"
                    },
                    "Address2": {
                        "type": "string"
                    },
                    "Address3": {
                        "type": "string"
                    },
                    "Address4": {
                        "type": "string"
                    },
                    "Locality": {
                        "type": "string"
                    },
                    "Region": {
                        "type": "string"
                    },
                    "PostalCode": {
                        "type": "string"
                    },
                    "Country": {
                        "type": "string"
                    },
                    "Coordinates": {
                        "type": "string"
                    },
                    "FxSupplierID": {
                        "type": "string"
                    },
                    "CustomColumns": {
                        "type": "string"
                    },
                    "CategoryCode1": {
                        "type": "string"
                    },
                    "CategoryCode2": {
                        "type": "string"
                    },
                    "CategoryCode3": {
                        "type": "string"
                    },
                    "CategoryCode4": {
                        "type": "string"
                    },
                    "IsTravelServiceProvider": {
                        "type": "boolean"
                    },
                    "IsInvoiceLink": {
                        "type": "boolean"
                    },
                    "IsActive": {
                        "type": "boolean"
                    },
                    "CurrencyCode": {
                        "type": "string"
                    },
                    "TaxRateCode": {
                        "type": "string"
                    }
                }
            },
            "ODataResponse[List[TaxRate]]": {
                "type": "object",
                "properties": {
                    "@odata.context": {
                        "type": "string"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TaxRate"
                        }
                    }
                }
            },
            "TaxRateImport": {
                "type": "object",
                "properties": {
                    "TaxRateCode": {
                        "type": "string"
                    },
                    "TaxRateName": {
                        "type": "string"
                    },
                    "Value": {
                        "type": "number",
                        "format": "decimal"
                    },
                    "IsDefault": {
                        "type": "boolean"
                    },
                    "IsActive": {
                        "type": "boolean"
                    },
                    "CompanyCode": {
                        "type": "string"
                    }
                }
            },
            "ODataResponse[List[TaxRateResponse]]": {
                "type": "object",
                "properties": {
                    "@odata.context": {
                        "type": "string"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TaxRateResponse"
                        }
                    }
                }
            },
            "TaxRateResponse": {
                "type": "object",
                "properties": {
                    "TaxRateID": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "UserAction": {
                        "type": "string"
                    },
                    "ImportStatus": {
                        "type": "string"
                    },
                    "TaxRateCode": {
                        "type": "string"
                    },
                    "TaxRateName": {
                        "type": "string"
                    },
                    "Value": {
                        "type": "number",
                        "format": "decimal"
                    },
                    "IsDefault": {
                        "type": "boolean"
                    },
                    "IsActive": {
                        "type": "boolean"
                    },
                    "CompanyCode": {
                        "type": "string"
                    }
                }
            },
            "ODataResponse[List[Tenant]]": {
                "type": "object",
                "properties": {
                    "@odata.context": {
                        "type": "string"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tenant"
                        }
                    }
                }
            },
            "ApiAttachmentsUploadRequestDocumentIDPost200ApplicationJsonResponse": {
                "type": "object"
            },
            "ApiAttachmentsUploadRequestDocumentIDPost200TextJsonResponse": {
                "type": "object"
            },
            "ApiAttachmentsUploadRequestDocumentIDPost200ApplicationXmlResponse": {
                "type": "object"
            },
            "ApiAttachmentsUploadRequestDocumentIDPost200TextXmlResponse": {
                "type": "object"
            },
            "ApiAttachmentsUploadRequestItemDocumentIDPost200ApplicationJsonResponse": {
                "type": "object"
            },
            "ApiAttachmentsUploadRequestItemDocumentIDPost200TextJsonResponse": {
                "type": "object"
            },
            "ApiAttachmentsUploadRequestItemDocumentIDPost200ApplicationXmlResponse": {
                "type": "object"
            },
            "ApiAttachmentsUploadRequestItemDocumentIDPost200TextXmlResponse": {
                "type": "object"
            },
            "ApiAttachmentsDownload2FileIDGet200ApplicationJsonResponse": {
                "type": "object"
            },
            "ApiAttachmentsDownload2FileIDGet200TextJsonResponse": {
                "type": "object"
            },
            "ApiAttachmentsDownload2FileIDGet200ApplicationXmlResponse": {
                "type": "object"
            },
            "ApiAttachmentsDownload2FileIDGet200TextXmlResponse": {
                "type": "object"
            },
            "ApiAttachmentsDeleteFileIDRequestDocumentIDDelete200ApplicationJsonResponse": {
                "type": "object"
            },
            "ApiAttachmentsDeleteFileIDRequestDocumentIDDelete200TextJsonResponse": {
                "type": "object"
            },
            "ApiAttachmentsDeleteFileIDRequestDocumentIDDelete200ApplicationXmlResponse": {
                "type": "object"
            },
            "ApiAttachmentsDeleteFileIDRequestDocumentIDDelete200TextXmlResponse": {
                "type": "object"
            },
            "ApiAttachmentsDeleteFileIDRequestItemDocumentIDDelete200ApplicationJsonRespo": {
                "type": "object"
            },
            "ApiAttachmentsDeleteFileIDRequestItemDocumentIDDelete200TextJsonResponse": {
                "type": "object"
            },
            "ApiAttachmentsDeleteFileIDRequestItemDocumentIDDelete200ApplicationXmlRespon": {
                "type": "object"
            },
            "ApiAttachmentsDeleteFileIDRequestItemDocumentIDDelete200TextXmlResponse": {
                "type": "object"
            },
            "ApiAttachmentsUploadInvoiceDocumentIDPost200ApplicationJsonResponse": {
                "type": "object"
            },
            "ApiAttachmentsUploadInvoiceDocumentIDPost200TextJsonResponse": {
                "type": "object"
            },
            "ApiAttachmentsUploadInvoiceDocumentIDPost200ApplicationXmlResponse": {
                "type": "object"
            },
            "ApiAttachmentsUploadInvoiceDocumentIDPost200TextXmlResponse": {
                "type": "object"
            },
            "ApiAttachmentsDeleteFileIDInvoiceDocumentIDDelete200ApplicationJsonResponse": {
                "type": "object"
            },
            "ApiAttachmentsDeleteFileIDInvoiceDocumentIDDelete200TextJsonResponse": {
                "type": "object"
            },
            "ApiAttachmentsDeleteFileIDInvoiceDocumentIDDelete200ApplicationXmlResponse": {
                "type": "object"
            },
            "ApiAttachmentsDeleteFileIDInvoiceDocumentIDDelete200TextXmlResponse": {
                "type": "object"
            },
            "ApiAttachmentsUploadInvoiceItemDocumentIDPost200ApplicationJsonResponse": {
                "type": "object"
            },
            "ApiAttachmentsUploadInvoiceItemDocumentIDPost200TextJsonResponse": {
                "type": "object"
            },
            "ApiAttachmentsUploadInvoiceItemDocumentIDPost200ApplicationXmlResponse": {
                "type": "object"
            },
            "ApiAttachmentsUploadInvoiceItemDocumentIDPost200TextXmlResponse": {
                "type": "object"
            },
            "ApiAttachmentsDeleteFileIDInvoiceItemDocumentIDDelete200ApplicationJsonRespo": {
                "type": "object"
            },
            "ApiAttachmentsDeleteFileIDInvoiceItemDocumentIDDelete200TextJsonResponse": {
                "type": "object"
            },
            "ApiAttachmentsDeleteFileIDInvoiceItemDocumentIDDelete200ApplicationXmlRespon": {
                "type": "object"
            },
            "ApiAttachmentsDeleteFileIDInvoiceItemDocumentIDDelete200TextXmlResponse": {
                "type": "object"
            },
            "ApiNotificationsNofityUserMailSubjectMessagePost200ApplicationJsonResponse": {
                "type": "object"
            },
            "ApiNotificationsNofityUserMailSubjectMessagePost200TextJsonResponse": {
                "type": "object"
            },
            "ApiNotificationsNofityUserMailSubjectMessagePost200ApplicationXmlResponse": {
                "type": "object"
            },
            "ApiNotificationsNofityUserMailSubjectMessagePost200TextXmlResponse": {
                "type": "object"
            },
            "ApiNotificationsOneSignalUserMailSubjectMessagePost200ApplicationJsonRespons": {
                "type": "object"
            },
            "ApiNotificationsOneSignalUserMailSubjectMessagePost200TextJsonResponse": {
                "type": "object"
            },
            "ApiNotificationsOneSignalUserMailSubjectMessagePost200ApplicationXmlResponse": {
                "type": "object"
            },
            "ApiNotificationsOneSignalUserMailSubjectMessagePost200TextXmlResponse": {
                "type": "object"
            },
            "ApiResourcesGet200ApplicationJsonResponse": {
                "type": "object",
                "additionalProperties": {
                    "type": "object"
                }
            },
            "ApiResourcesGet200TextJsonResponse": {
                "type": "object",
                "additionalProperties": {
                    "type": "object"
                }
            },
            "ApiResourcesGet200ApplicationXmlResponse": {
                "type": "object",
                "additionalProperties": {
                    "type": "object"
                }
            },
            "ApiResourcesGet200TextXmlResponse": {
                "type": "object",
                "additionalProperties": {
                    "type": "object"
                }
            },
            "ApiResourcesSubsetCultureCodeGet200ApplicationJsonResponse": {
                "type": "object",
                "additionalProperties": {
                    "type": "object"
                }
            },
            "ApiResourcesSubsetCultureCodeGet200TextJsonResponse": {
                "type": "object",
                "additionalProperties": {
                    "type": "object"
                }
            },
            "ApiResourcesSubsetCultureCodeGet200ApplicationXmlResponse": {
                "type": "object",
                "additionalProperties": {
                    "type": "object"
                }
            },
            "ApiResourcesSubsetCultureCodeGet200TextXmlResponse": {
                "type": "object",
                "additionalProperties": {
                    "type": "object"
                }
            },
            "ApiResourcesCultureCodeGet200ApplicationJsonResponse": {
                "type": "object",
                "additionalProperties": {
                    "type": "object"
                }
            },
            "ApiResourcesCultureCodeGet200TextJsonResponse": {
                "type": "object",
                "additionalProperties": {
                    "type": "object"
                }
            },
            "ApiResourcesCultureCodeGet200ApplicationXmlResponse": {
                "type": "object",
                "additionalProperties": {
                    "type": "object"
                }
            },
            "ApiResourcesCultureCodeGet200TextXmlResponse": {
                "type": "object",
                "additionalProperties": {
                    "type": "object"
                }
            },
            "ApiUserRegisterGet200ApplicationJsonResponse": {
                "type": "string"
            },
            "ApiUserRegisterGet200TextJsonResponse": {
                "type": "string"
            },
            "ApiUserRegisterGet200ApplicationXmlResponse": {
                "type": "string"
            },
            "ApiUserRegisterGet200TextXmlResponse": {
                "type": "string"
            },
            "Api-metadataGet200ApplicationXmlResponse": {},
            "Parameters": {
                "type": "object",
                "properties": {
                    "Budgets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BudgetExtended"
                        }
                    }
                }
            },
            "Parameters-1": {
                "type": "object",
                "properties": {
                    "Actuals": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BudgetImport"
                        }
                    }
                }
            },
            "Parameters-2": {
                "type": "object",
                "properties": {
                    "ActualPeriods": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BudgetPeriod"
                        }
                    }
                }
            },
            "Parameters-3": {
                "type": "object",
                "properties": {
                    "Budgets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BudgetImport"
                        }
                    }
                }
            },
            "Parameters-4": {
                "type": "object",
                "properties": {
                    "BudgetPeriods": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BudgetPeriod"
                        }
                    }
                }
            },
            "Parameters-5": {
                "type": "object",
                "properties": {
                    "importCurrencies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CurrencyImport"
                        }
                    }
                }
            },
            "ApiCurrentStatesNameGet200ApplicationJsonResponse": {
                "type": "string"
            },
            "Parameters-6": {
                "type": "object",
                "properties": {
                    "importExchangeRates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExchangeRateImport"
                        }
                    }
                }
            },
            "Parameters-7": {
                "type": "object",
                "properties": {
                    "importFinancialPeriods": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FinancialPeriodImport"
                        }
                    }
                }
            },
            "Parameters-8": {
                "type": "object",
                "properties": {
                    "importFinancialYears": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FinancialYearImport"
                        }
                    }
                }
            },
            "Parameters-9": {
                "required": [
                    "InvoiceIDs"
                ],
                "type": "object",
                "properties": {
                    "InvoiceIDs": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                }
            },
            "Parameters-10": {
                "type": "object",
                "properties": {
                    "importLookupItems": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LookupItemImport"
                        }
                    }
                }
            },
            "Parameters-11": {
                "required": [
                    "RequestIDs"
                ],
                "type": "object",
                "properties": {
                    "RequestIDs": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                }
            },
            "Parameters-12": {
                "type": "object",
                "properties": {
                    "Segments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SegmentImport"
                        }
                    }
                }
            },
            "Parameters-13": {
                "type": "object",
                "properties": {
                    "Structures": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StructureImport"
                        }
                    }
                }
            },
            "Parameters-14": {
                "type": "object",
                "properties": {
                    "importSuppliers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SupplierImport"
                        }
                    }
                }
            },
            "Parameters-15": {
                "type": "object",
                "properties": {
                    "importTaxRates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TaxRateImport"
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "apiKeyHeader": {
                "type": "apiKey",
                "name": "Ocp-Apim-Subscription-Key",
                "in": "header"
            },
            "apiKeyQuery": {
                "type": "apiKey",
                "name": "subscription-key",
                "in": "query"
            }
        }
    },
    "security": [
        {
            "apiKeyHeader": []
        },
        {
            "apiKeyQuery": []
        }
    ]
}